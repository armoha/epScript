State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  9
                     {default} reduce 1

State 1:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  88
                     SEMICOLON shift  225
                      LBRACKET shift  231
                           VAR shift  59
                         CONST shift  57
                            IF shift  177
                         WHILE shift  171
                           FOR shift  109
                      CONTINUE shift  108
                         BREAK shift  107
                        RETURN shift  13
                    ACTIONNAME shift  104
                         error shift  152
                     vdef_stmt shift  224
                     cdef_stmt shift  222
                          stmt shift  160
                      bodyStmt shift  233
                   return_stmt shift  232
                      lbracket shift  8
               vdefAssign_stmt shift  223
                   assign_stmt shift  221
                      funcexpr shift  151
                    actionStmt shift  219
                       if_stmt shift  218
                    while_stmt shift  217
                  foreach_stmt shift  216
                 continue_stmt shift  215
                    break_stmt shift  214
                      funcName shift  146
                        lvalue shift  115
           lvalueList_nonEmpty shift  94
                      if_start shift  113
                     if_header shift  5
                      if_block shift  50
                   while_start shift  110
                  while_header shift  3
                foreach_header shift  2
                        action shift  54
                       actions shift  53

State 2:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  88
                     SEMICOLON shift  225
                      LBRACKET shift  231
                           VAR shift  59
                         CONST shift  57
                            IF shift  177
                         WHILE shift  171
                           FOR shift  109
                      CONTINUE shift  108
                         BREAK shift  107
                        RETURN shift  13
                    ACTIONNAME shift  104
                         error shift  152
                     vdef_stmt shift  224
                     cdef_stmt shift  222
                          stmt shift  167
                      bodyStmt shift  233
                   return_stmt shift  232
                      lbracket shift  8
               vdefAssign_stmt shift  223
                   assign_stmt shift  221
                      funcexpr shift  151
                    actionStmt shift  219
                       if_stmt shift  218
                    while_stmt shift  217
                  foreach_stmt shift  216
                 continue_stmt shift  215
                    break_stmt shift  214
                      funcName shift  146
                        lvalue shift  115
           lvalueList_nonEmpty shift  94
                      if_start shift  113
                     if_header shift  5
                      if_block shift  50
                   while_start shift  110
                  while_header shift  3
                foreach_header shift  2
                        action shift  54
                       actions shift  53

State 3:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  88
                     SEMICOLON shift  225
                      LBRACKET shift  231
                           VAR shift  59
                         CONST shift  57
                            IF shift  177
                         WHILE shift  171
                           FOR shift  109
                      CONTINUE shift  108
                         BREAK shift  107
                        RETURN shift  13
                    ACTIONNAME shift  104
                         error shift  152
                     vdef_stmt shift  224
                     cdef_stmt shift  222
                          stmt shift  169
                      bodyStmt shift  233
                   return_stmt shift  232
                      lbracket shift  8
               vdefAssign_stmt shift  223
                   assign_stmt shift  221
                      funcexpr shift  151
                    actionStmt shift  219
                       if_stmt shift  218
                    while_stmt shift  217
                  foreach_stmt shift  216
                 continue_stmt shift  215
                    break_stmt shift  214
                      funcName shift  146
                        lvalue shift  115
           lvalueList_nonEmpty shift  94
                      if_start shift  113
                     if_header shift  5
                      if_block shift  50
                   while_start shift  110
                  while_header shift  3
                foreach_header shift  2
                        action shift  54
                       actions shift  53

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  88
                     SEMICOLON shift  225
                      LBRACKET shift  231
                           VAR shift  59
                         CONST shift  57
                            IF shift  177
                         WHILE shift  171
                           FOR shift  109
                      CONTINUE shift  108
                         BREAK shift  107
                        RETURN shift  13
                    ACTIONNAME shift  104
                         error shift  152
                     vdef_stmt shift  224
                     cdef_stmt shift  222
                          stmt shift  172
                      bodyStmt shift  233
                   return_stmt shift  232
                      lbracket shift  8
               vdefAssign_stmt shift  223
                   assign_stmt shift  221
                      funcexpr shift  151
                    actionStmt shift  219
                       if_stmt shift  218
                    while_stmt shift  217
                  foreach_stmt shift  216
                 continue_stmt shift  215
                    break_stmt shift  214
                      funcName shift  146
                        lvalue shift  115
           lvalueList_nonEmpty shift  94
                      if_start shift  113
                     if_header shift  5
                      if_block shift  50
                   while_start shift  110
                  while_header shift  3
                foreach_header shift  2
                        action shift  54
                       actions shift  53

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  88
                     SEMICOLON shift  225
                      LBRACKET shift  231
                           VAR shift  59
                         CONST shift  57
                            IF shift  177
                         WHILE shift  171
                           FOR shift  109
                      CONTINUE shift  108
                         BREAK shift  107
                        RETURN shift  13
                    ACTIONNAME shift  104
                         error shift  152
                     vdef_stmt shift  224
                     cdef_stmt shift  222
                          stmt shift  175
                      bodyStmt shift  233
                   return_stmt shift  232
                      lbracket shift  8
               vdefAssign_stmt shift  223
                   assign_stmt shift  221
                      funcexpr shift  151
                    actionStmt shift  219
                       if_stmt shift  218
                    while_stmt shift  217
                  foreach_stmt shift  216
                 continue_stmt shift  215
                    break_stmt shift  214
                      funcName shift  146
                        lvalue shift  115
           lvalueList_nonEmpty shift  94
                      if_start shift  113
                     if_header shift  5
                      if_block shift  50
                   while_start shift  110
                  while_header shift  3
                foreach_header shift  2
                        action shift  54
                       actions shift  53

State 6:
          fdef_chunk ::= function_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  88
                     SEMICOLON shift  225
                      LBRACKET shift  231
                           VAR shift  59
                         CONST shift  57
                            IF shift  177
                         WHILE shift  171
                           FOR shift  109
                      CONTINUE shift  108
                         BREAK shift  107
                        RETURN shift  13
                    ACTIONNAME shift  104
                         error shift  152
                     vdef_stmt shift  224
                     cdef_stmt shift  222
                          stmt shift  235
                      bodyStmt shift  233
                   return_stmt shift  232
                      lbracket shift  8
               vdefAssign_stmt shift  223
                   assign_stmt shift  221
                      funcexpr shift  151
                    actionStmt shift  219
                       if_stmt shift  218
                    while_stmt shift  217
                  foreach_stmt shift  216
                 continue_stmt shift  215
                    break_stmt shift  214
                      funcName shift  146
                        lvalue shift  115
           lvalueList_nonEmpty shift  94
                      if_start shift  113
                     if_header shift  5
                      if_block shift  50
                   while_start shift  110
                  while_header shift  3
                foreach_header shift  2
                        action shift  54
                       actions shift  53

State 7:
          rbracket ::= * RBRACKET
          stmt ::= lbracket bodyStmtList * rbracket
          stmt ::= lbracket bodyStmtList * return_stmt rbracket
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  88
                     SEMICOLON shift  225
                      RBRACKET shift  229
                           VAR shift  59
                         CONST shift  57
                            IF shift  177
                         WHILE shift  171
                           FOR shift  109
                      CONTINUE shift  108
                         BREAK shift  107
                        RETURN shift  13
                    ACTIONNAME shift  104
                         error shift  212
                     vdef_stmt shift  224
                     cdef_stmt shift  222
                      bodyStmt shift  213
                   return_stmt shift  60
                      rbracket shift  227
               vdefAssign_stmt shift  223
                   assign_stmt shift  221
                      funcexpr shift  151
                    actionStmt shift  219
                       if_stmt shift  218
                    while_stmt shift  217
                  foreach_stmt shift  216
                 continue_stmt shift  215
                    break_stmt shift  214
                      funcName shift  146
                        lvalue shift  115
           lvalueList_nonEmpty shift  94
                      if_start shift  113
                     if_header shift  5
                      if_block shift  50
                   while_start shift  110
                  while_header shift  3
                foreach_header shift  2
                        action shift  54
                       actions shift  53

State 8:
          stmt ::= lbracket * RBRACKET
          stmt ::= lbracket * return_stmt rbracket
          stmt ::= lbracket * bodyStmtList rbracket
          stmt ::= lbracket * bodyStmtList return_stmt rbracket
          stmt ::= lbracket * error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  88
                     SEMICOLON shift  225
                      RBRACKET shift  230
                           VAR shift  59
                         CONST shift  57
                            IF shift  177
                         WHILE shift  171
                           FOR shift  109
                      CONTINUE shift  108
                         BREAK shift  107
                        RETURN shift  13
                    ACTIONNAME shift  104
                         error shift  101
                     vdef_stmt shift  224
                     cdef_stmt shift  222
                      bodyStmt shift  158
                   return_stmt shift  61
                  bodyStmtList shift  7
               vdefAssign_stmt shift  223
                   assign_stmt shift  221
                      funcexpr shift  151
                    actionStmt shift  219
                       if_stmt shift  218
                    while_stmt shift  217
                  foreach_stmt shift  216
                 continue_stmt shift  215
                    break_stmt shift  214
                      funcName shift  146
                        lvalue shift  115
           lvalueList_nonEmpty shift  94
                      if_start shift  113
                     if_header shift  5
                      if_block shift  50
                   while_start shift  110
                  while_header shift  3
                foreach_header shift  2
                        action shift  54
                       actions shift  53

State 9:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunk ::= * import_chunk
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * cdef_stmt
          import_chunk ::= * FROM NAME IMPORT nameList_nonEmpty SEMICOLON
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList_nonEmpty RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON

                             $ reduce 0
                          FROM shift  157
                      FUNCTION shift  154
                           VAR shift  52
                         CONST shift  57
                         chunk shift  246
                  import_chunk shift  245
                    fdef_chunk shift  244
                     vdef_stmt shift  243
                     cdef_stmt shift  242
                function_start shift  153
               function_header shift  6

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (54) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                        RPAREN shift  189
                        RPAREN reduce 54  ** Parsing conflict **
                        STRING shift  192
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  68
                fArgs_nonEmpty shift  123
                         fArgs shift  122
                      funcName shift  146

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (54) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                        STRING shift  192
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  68
                fArgs_nonEmpty shift  123
                         fArgs shift  103
                      funcName shift  146
                     {default} reduce 54

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (54) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          funcexpr ::= funcName LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                        STRING shift  192
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  68
                fArgs_nonEmpty shift  123
                         fArgs shift  121
                      funcName shift  146
                     {default} reduce 54

State 13:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
     (45) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * exprList SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  120
             exprList_nonEmpty shift  106
                          expr shift  67
                      exprList shift  105
                      funcName shift  146
                     {default} reduce 45

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                 CONDITIONNAME shift  124
                      funcexpr shift  145
                          expr shift  63
                      funcName shift  146
                         lexpr shift  80

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                 CONDITIONNAME shift  124
                      funcexpr shift  145
                          expr shift  63
                      funcName shift  146
                         lexpr shift  81

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                 CONDITIONNAME shift  124
                      funcexpr shift  145
                          expr shift  63
                      funcName shift  146
                         lexpr shift  82

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                 CONDITIONNAME shift  124
                      funcexpr shift  145
                          expr shift  63
                      funcName shift  146
                         lexpr shift  193

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                 CONDITIONNAME shift  124
                      funcexpr shift  145
                          expr shift  63
                      funcName shift  146
                         lexpr shift  194

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                 CONDITIONNAME shift  124
                      funcexpr shift  145
                          expr shift  63
                      funcName shift  146
                         lexpr shift  125

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                 CONDITIONNAME shift  124
                      funcexpr shift  145
                          expr shift  63
                      funcName shift  146
                         lexpr shift  195

State 21:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= L2V LPAREN * lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                 CONDITIONNAME shift  124
                      funcexpr shift  145
                          expr shift  63
                      funcName shift  146
                         lexpr shift  86

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                        STRING shift  192
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  68
                fArgs_nonEmpty shift  191
                      funcName shift  146

State 23:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= FOR LPAREN nameList_nonEmpty COLON * exprList_nonEmpty RPAREN

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  120
             exprList_nonEmpty shift  90
                          expr shift  67
                      funcName shift  146

State 24:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalueList_nonEmpty ASSIGN * exprList_nonEmpty SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  120
             exprList_nonEmpty shift  92
                          expr shift  67
                      funcName shift  146

State 25:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  120
             exprList_nonEmpty shift  95
                          expr shift  67
                      funcName shift  146

State 26:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  120
             exprList_nonEmpty shift  184
                          expr shift  67
                      funcName shift  146

State 27:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  120
             exprList_nonEmpty shift  97
                          expr shift  67
                      funcName shift  146

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ASSIGN * expr SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  64
                      funcName shift  146

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  69
                      funcName shift  146

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  70
                      funcName shift  146

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  71
                      funcName shift  146

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  72
                      funcName shift  146

State 33:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  73
                      funcName shift  146

State 34:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  74
                      funcName shift  146

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  196
                      funcName shift  146

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  197
                      funcName shift  146

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  198
                      funcName shift  146

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  76
                      funcName shift  146

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  75
                      funcName shift  146

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  77
                      funcName shift  146

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  78
                      funcName shift  146

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  79
                      funcName shift  146

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  199
                      funcName shift  146

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  200
                      funcName shift  146

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  201
                      funcName shift  146

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  85
                      funcName shift  146

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  65
                      funcName shift  146

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  84
                      funcName shift  146

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          expr ::= NAME LSQBRACKET * expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  209
                          NAME shift  87
                        LPAREN shift  47
                           L2V shift  138
                     MAPSTRING shift  137
                          UNIT shift  134
                        SWITCH shift  131
                      LOCATION shift  128
                      funcexpr shift  145
                          expr shift  66
                      funcName shift  146

State 50:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
    (106) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  112
                          ELSE reduce 106 ** Parsing conflict **
                    elif_start shift  111
                   elif_header shift  4
                   else_header shift  1
                     {default} reduce 106

State 51:
          function_header ::= function_start LPAREN * nameList_nonEmpty RPAREN
          function_header ::= function_start LPAREN * RPAREN
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  239
                        RPAREN shift  236
             nameList_nonEmpty shift  99

State 52:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty SEMICOLON

                          NAME shift  239
             nameList_nonEmpty shift  89

State 53:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
    (122) actionStmt ::= actions *

                    ACTIONNAME shift  104
                    ACTIONNAME reduce 122 ** Parsing conflict **
                        action shift  161
                     {default} reduce 122

State 54:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
    (121) actionStmt ::= action *

                    ACTIONNAME shift  104
                    ACTIONNAME reduce 121 ** Parsing conflict **
                        action shift  162
                     {default} reduce 121

State 55:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= FOR LPAREN * nameList_nonEmpty COLON exprList_nonEmpty RPAREN

                          NAME shift  239
             nameList_nonEmpty shift  91

State 56:
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA * lvalue

                          NAME shift  93
                        lvalue shift  179

State 57:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON

                          NAME shift  239
             nameList_nonEmpty shift  96

State 58:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  118
              numList_nonEmpty shift  98

State 59:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON

                          NAME shift  239
             nameList_nonEmpty shift  83

State 60:
          rbracket ::= * RBRACKET
          stmt ::= lbracket bodyStmtList return_stmt * rbracket

                      RBRACKET shift  229
                      rbracket shift  226

State 61:
          rbracket ::= * RBRACKET
          stmt ::= lbracket return_stmt * rbracket

                      RBRACKET shift  229
                      rbracket shift  228

State 62:
          import_chunk ::= FROM NAME IMPORT * nameList_nonEmpty SEMICOLON
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  239
             nameList_nonEmpty shift  100

State 63:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  34
                            LE shift  32
                            LT shift  31
                            GE shift  30
                            GT shift  29
                            NE shift  33
                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43

State 64:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          assign_stmt ::= lvalue ASSIGN expr * SEMICOLON

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     SEMICOLON shift  181

State 65:
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                        RPAREN shift  207

State 66:
          expr ::= NAME LSQBRACKET expr * RSQBRACKET
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                    RSQBRACKET shift  208

State 67:
     (43) exprList_nonEmpty ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 43

State 68:
     (51) fArgs_nonEmpty ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 51

State 69:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (84) lexpr ::= expr GT expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 84

State 70:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (83) lexpr ::= expr GE expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 83

State 71:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (82) lexpr ::= expr LT expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 82

State 72:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (81) lexpr ::= expr LE expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 81

State 73:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (80) lexpr ::= expr NE expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 80

State 74:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (79) lexpr ::= expr EQ expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 79

State 75:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (74) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 74

State 76:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (75) expr ::= expr BITXOR expr *

                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 75

State 77:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (73) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 73

State 78:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (72) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 72

State 79:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (71) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 71

State 80:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  19
                          LAND shift  20
                        RPAREN shift  170

State 81:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  19
                          LAND shift  20
                        RPAREN shift  173

State 82:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  19
                          LAND shift  20
                        RPAREN shift  176

State 83:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          vdef_stmt ::= VAR nameList_nonEmpty * SEMICOLON
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty SEMICOLON

                         COMMA shift  155
                        ASSIGN shift  27
                     SEMICOLON shift  187

State 84:
          expr ::= expr * PLUS expr
     (66) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 66

State 85:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (67) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 67

State 86:
          expr ::= L2V LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  19
                          LAND shift  20
                        RPAREN shift  206

State 87:
     (48) expr ::= NAME *
          expr ::= NAME * PERIOD NAME
          expr ::= NAME * LSQBRACKET expr RSQBRACKET
     (56) funcName ::= NAME *
          funcName ::= NAME * PERIOD NAME

                        LPAREN reduce 56
                    LSQBRACKET shift  49
                        PERIOD shift  140
                     {default} reduce 48

State 88:
     (56) funcName ::= NAME *
          funcName ::= NAME * PERIOD NAME
     (92) lvalue ::= NAME *
          lvalue ::= NAME * LSQBRACKET NAME RSQBRACKET
          lvalue ::= NAME * PERIOD NAME

                        LPAREN reduce 56
                    LSQBRACKET shift  148
                        PERIOD shift  150
                     {default} reduce 92

State 89:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          vdef_stmt ::= VAR nameList_nonEmpty * SEMICOLON

                         COMMA shift  155
                     SEMICOLON shift  187

State 90:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          foreach_header ::= FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty * RPAREN

                         COMMA shift  26
                        RPAREN shift  168

State 91:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= FOR LPAREN nameList_nonEmpty * COLON exprList_nonEmpty RPAREN

                         COMMA shift  155
                         COLON shift  23

State 92:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  178

State 93:
     (92) lvalue ::= NAME *
          lvalue ::= NAME * LSQBRACKET NAME RSQBRACKET
          lvalue ::= NAME * PERIOD NAME

                    LSQBRACKET shift  148
                        PERIOD shift  114
                     {default} reduce 92

State 94:
          lvalueList_nonEmpty ::= lvalueList_nonEmpty * COMMA lvalue
          assign_stmt ::= lvalueList_nonEmpty * ASSIGN exprList_nonEmpty SEMICOLON

                         COMMA shift  56
                        ASSIGN shift  24

State 95:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  182

State 96:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty SEMICOLON

                         COMMA shift  155
                        ASSIGN shift  25

State 97:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  183

State 98:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  117
                    RSQBRACKET shift  116

State 99:
          function_header ::= function_start LPAREN nameList_nonEmpty * RPAREN
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  155
                        RPAREN shift  237

State 100:
          import_chunk ::= FROM NAME IMPORT nameList_nonEmpty * SEMICOLON
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  155
                     SEMICOLON shift  241

State 101:
          stmt ::= lbracket error * RBRACKET

                      RBRACKET shift  159

State 102:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  163

State 103:
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                        RPAREN shift  102

State 104:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  11

State 105:
          return_stmt ::= RETURN exprList * SEMICOLON

                     SEMICOLON shift  164

State 106:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (46) exprList ::= exprList_nonEmpty *

                         COMMA shift  26
                     {default} reduce 46

State 107:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  165

State 108:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  166

State 109:
          foreach_header ::= FOR * LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN

                        LPAREN shift  55

State 110:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  14

State 111:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  15

State 112:
          elif_start ::= ELSE * IF
    (105) else_header ::= ELSE *

                            IF shift  174
                            IF reduce 105 ** Parsing conflict **
                     {default} reduce 105

State 113:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  16

State 114:
          lvalue ::= NAME PERIOD * NAME

                          NAME shift  180

State 115:
     (95) lvalueList_nonEmpty ::= lvalue *
          assign_stmt ::= lvalue * ASSIGN expr SEMICOLON

                        ASSIGN shift  28
                        ASSIGN reduce 95  ** Parsing conflict **
                     {default} reduce 95

State 116:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  185

State 117:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  186

State 118:
     (37) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  141
                    RSQBRACKET reduce 37  ** Parsing conflict **
                     {default} reduce 37

State 119:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  58

State 120:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (59) expr ::= funcexpr *

                    LSQBRACKET shift  119
                     {default} reduce 59

State 121:
          funcexpr ::= funcName LPAREN fArgs * RPAREN

                        RPAREN shift  188

State 122:
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  190

State 123:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (55) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  22
                     {default} reduce 55

State 124:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  10

State 125:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (86) lexpr ::= lexpr LOR lexpr *

                          LAND shift  20
                     {default} reduce 86

State 126:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  202

State 127:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  126

State 128:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  127

State 129:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  203

State 130:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  129

State 131:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  130

State 132:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  204

State 133:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  132

State 134:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  133

State 135:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  205

State 136:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  135

State 137:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  136

State 138:
          expr ::= L2V * LPAREN lexpr RPAREN

                        LPAREN shift  21

State 139:
     (49) expr ::= NAME PERIOD NAME *
     (57) funcName ::= NAME PERIOD NAME *

                        LPAREN reduce 57
                     {default} reduce 49

State 140:
          expr ::= NAME PERIOD * NAME
          funcName ::= NAME PERIOD * NAME

                          NAME shift  139

State 141:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  210

State 142:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  141

State 143:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  142

State 144:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  143

State 145:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (59) expr ::= funcexpr *

                    LSQBRACKET shift  144
                     {default} reduce 59

State 146:
          funcexpr ::= funcName * LPAREN fArgs RPAREN

                        LPAREN shift  12

State 147:
          lvalue ::= NAME LSQBRACKET NAME * RSQBRACKET

                    RSQBRACKET shift  211

State 148:
          lvalue ::= NAME LSQBRACKET * NAME RSQBRACKET

                          NAME shift  147

State 149:
     (57) funcName ::= NAME PERIOD NAME *
     (94) lvalue ::= NAME PERIOD NAME *

                        LPAREN reduce 57
                     {default} reduce 94

State 150:
          funcName ::= NAME PERIOD * NAME
          lvalue ::= NAME PERIOD * NAME

                          NAME shift  149

State 151:
          bodyStmt ::= funcexpr * SEMICOLON

                     SEMICOLON shift  220

State 152:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  234

State 153:
          function_header ::= function_start * LPAREN nameList_nonEmpty RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  51

State 154:
          function_start ::= FUNCTION * NAME

                          NAME shift  238

State 155:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  240

State 156:
          import_chunk ::= FROM NAME * IMPORT nameList_nonEmpty SEMICOLON

                        IMPORT shift  62

State 157:
          import_chunk ::= FROM * NAME IMPORT nameList_nonEmpty SEMICOLON

                          NAME shift  156

State 158:
     (34) bodyStmtList ::= bodyStmt *

                     {default} reduce 34

State 159:
     (21) stmt ::= lbracket error RBRACKET *

                     {default} reduce 21

State 160:
    (107) if_stmt ::= if_block else_header stmt *

                     {default} reduce 107

State 161:
    (120) actions ::= actions action *

                     {default} reduce 120

State 162:
    (119) actions ::= action action *

                     {default} reduce 119

State 163:
    (118) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 118

State 164:
    (115) return_stmt ::= RETURN exprList SEMICOLON *

                     {default} reduce 115

State 165:
    (114) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 114

State 166:
    (113) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 113

State 167:
    (112) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 112

State 168:
    (111) foreach_header ::= FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN *

                     {default} reduce 111

State 169:
    (110) while_stmt ::= while_header stmt *

                     {default} reduce 110

State 170:
    (109) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 109

State 171:
    (108) while_start ::= WHILE *

                     {default} reduce 108

State 172:
    (104) if_block ::= if_block elif_header stmt *

                     {default} reduce 104

State 173:
    (103) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 103

State 174:
    (102) elif_start ::= ELSE IF *

                     {default} reduce 102

State 175:
    (101) if_block ::= if_header stmt *

                     {default} reduce 101

State 176:
    (100) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 100

State 177:
     (99) if_start ::= IF *

                     {default} reduce 99

State 178:
     (98) assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON *

                     {default} reduce 98

State 179:
     (96) lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA lvalue *

                     {default} reduce 96

State 180:
     (94) lvalue ::= NAME PERIOD NAME *

                     {default} reduce 94

State 181:
     (97) assign_stmt ::= lvalue ASSIGN expr SEMICOLON *

                     {default} reduce 97

State 182:
     (91) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON *

                     {default} reduce 91

State 183:
     (90) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON *

                     {default} reduce 90

State 184:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (44) exprList_nonEmpty ::= exprList_nonEmpty COMMA exprList_nonEmpty *

                     {default} reduce 44

State 185:
     (41) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 41

State 186:
     (38) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 38

State 187:
     (89) vdef_stmt ::= VAR nameList_nonEmpty SEMICOLON *

                     {default} reduce 89

State 188:
     (58) funcexpr ::= funcName LPAREN fArgs RPAREN *

                     {default} reduce 58

State 189:
    (117) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 117

State 190:
    (116) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 116

State 191:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (53) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArgs_nonEmpty *

                     {default} reduce 53

State 192:
     (52) fArgs_nonEmpty ::= STRING *

                     {default} reduce 52

State 193:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (87) lexpr ::= LNOT lexpr *
     (88) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 88

State 194:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (87) lexpr ::= LNOT lexpr *

                     {default} reduce 87

State 195:
          lexpr ::= lexpr * LAND lexpr
     (85) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 85

State 196:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (78) expr ::= BITNOT expr *

                     {default} reduce 78

State 197:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (77) expr ::= MINUS expr *

                     {default} reduce 77

State 198:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (76) expr ::= PLUS expr *

                     {default} reduce 76

State 199:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (70) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 70

State 200:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (69) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 69

State 201:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (68) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 68

State 202:
     (65) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 65

State 203:
     (64) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 64

State 204:
     (63) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 63

State 205:
     (62) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 62

State 206:
     (61) expr ::= L2V LPAREN lexpr RPAREN *

                     {default} reduce 61

State 207:
     (60) expr ::= LPAREN expr RPAREN *

                     {default} reduce 60

State 208:
     (50) expr ::= NAME LSQBRACKET expr RSQBRACKET *

                     {default} reduce 50

State 209:
     (47) expr ::= NUMBER *

                     {default} reduce 47

State 210:
     (42) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 42

State 211:
     (93) lvalue ::= NAME LSQBRACKET NAME RSQBRACKET *

                     {default} reduce 93

State 212:
     (36) bodyStmtList ::= bodyStmtList error *

                     {default} reduce 36

State 213:
     (35) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 35

State 214:
     (33) bodyStmt ::= break_stmt *

                     {default} reduce 33

State 215:
     (32) bodyStmt ::= continue_stmt *

                     {default} reduce 32

State 216:
     (31) bodyStmt ::= foreach_stmt *

                     {default} reduce 31

State 217:
     (30) bodyStmt ::= while_stmt *

                     {default} reduce 30

State 218:
     (29) bodyStmt ::= if_stmt *

                     {default} reduce 29

State 219:
     (28) bodyStmt ::= actionStmt *

                     {default} reduce 28

State 220:
     (27) bodyStmt ::= funcexpr SEMICOLON *

                     {default} reduce 27

State 221:
     (26) bodyStmt ::= assign_stmt *

                     {default} reduce 26

State 222:
     (25) bodyStmt ::= cdef_stmt *

                     {default} reduce 25

State 223:
     (24) bodyStmt ::= vdefAssign_stmt *

                     {default} reduce 24

State 224:
     (23) bodyStmt ::= vdef_stmt *

                     {default} reduce 23

State 225:
     (22) bodyStmt ::= SEMICOLON *

                     {default} reduce 22

State 226:
     (20) stmt ::= lbracket bodyStmtList return_stmt rbracket *

                     {default} reduce 20

State 227:
     (19) stmt ::= lbracket bodyStmtList rbracket *

                     {default} reduce 19

State 228:
     (18) stmt ::= lbracket return_stmt rbracket *

                     {default} reduce 18

State 229:
     (16) rbracket ::= RBRACKET *

                     {default} reduce 16

State 230:
     (17) stmt ::= lbracket RBRACKET *

                     {default} reduce 17

State 231:
     (15) lbracket ::= LBRACKET *

                     {default} reduce 15

State 232:
     (14) stmt ::= return_stmt *

                     {default} reduce 14

State 233:
     (13) stmt ::= bodyStmt *

                     {default} reduce 13

State 234:
     (12) stmt ::= error SEMICOLON *

                     {default} reduce 12

State 235:
     (11) fdef_chunk ::= function_header stmt *

                     {default} reduce 11

State 236:
     (10) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 10

State 237:
      (9) function_header ::= function_start LPAREN nameList_nonEmpty RPAREN *

                     {default} reduce 9

State 238:
      (8) function_start ::= FUNCTION NAME *

                     {default} reduce 8

State 239:
     (39) nameList_nonEmpty ::= NAME *

                     {default} reduce 39

State 240:
     (40) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 40

State 241:
      (7) import_chunk ::= FROM NAME IMPORT nameList_nonEmpty SEMICOLON *

                     {default} reduce 7

State 242:
      (6) chunk ::= cdef_stmt *

                     {default} reduce 6

State 243:
      (5) chunk ::= vdef_stmt *

                     {default} reduce 5

State 244:
      (4) chunk ::= fdef_chunk *

                     {default} reduce 4

State 245:
      (3) chunk ::= import_chunk *

                     {default} reduce 3

State 246:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: FROM
   28: IMPORT
   29: SEMICOLON
   30: FUNCTION
   31: LPAREN
   32: RPAREN
   33: LBRACKET
   34: RBRACKET
   35: LSQBRACKET
   36: RSQBRACKET
   37: PERIOD
   38: STRING
   39: FUNCCALL
   40: L2V
   41: MAPSTRING
   42: UNIT
   43: SWITCH
   44: LOCATION
   45: VAR
   46: CONST
   47: IF
   48: ELSE
   49: WHILE
   50: FOR
   51: COLON
   52: CONTINUE
   53: BREAK
   54: RETURN
   55: CONDITIONNAME
   56: ACTIONNAME
   57: error:
   58: nt:
   59: program: <lambda> FROM FUNCTION VAR CONST
   60: chunks: <lambda> FROM FUNCTION VAR CONST
   61: chunk: FROM FUNCTION VAR CONST
   62: import_chunk: FROM
   63: fdef_chunk: FUNCTION
   64: vdef_stmt: VAR
   65: cdef_stmt: CONST
   66: nameList_nonEmpty: NAME
   67: function_start: FUNCTION
   68: function_header: FUNCTION
   69: stmt: NAME SEMICOLON LBRACKET VAR CONST IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   70: bodyStmt: NAME SEMICOLON VAR CONST IF WHILE FOR CONTINUE BREAK ACTIONNAME
   71: return_stmt: RETURN
   72: lbracket: LBRACKET
   73: rbracket: RBRACKET
   74: bodyStmtList: NAME SEMICOLON VAR CONST IF WHILE FOR CONTINUE BREAK ACTIONNAME
   75: vdefAssign_stmt: VAR
   76: assign_stmt: NAME
   77: funcexpr: NAME
   78: actionStmt: ACTIONNAME
   79: if_stmt: IF
   80: while_stmt: WHILE
   81: foreach_stmt: FOR
   82: continue_stmt: CONTINUE
   83: break_stmt: BREAK
   84: numList_nonEmpty: NUMBER
   85: exprList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   86: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   87: exprList: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   88: fArgs_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN STRING L2V MAPSTRING UNIT SWITCH LOCATION
   89: fArgs: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN STRING L2V MAPSTRING UNIT SWITCH LOCATION
   90: funcName: NAME
   91: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
   92: lvalue: NAME
   93: lvalueList_nonEmpty: NAME
   94: if_start: IF
   95: if_header: IF
   96: if_block: IF
   97: elif_start: ELSE
   98: elif_header: ELSE
   99: else_header: ELSE
  100: while_start: WHILE
  101: while_header: WHILE
  102: foreach_header: FOR
  103: action: ACTIONNAME
  104: actions: ACTIONNAME
