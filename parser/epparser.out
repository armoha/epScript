State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  9
                     {default} reduce 1

State 1:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  95
                     SEMICOLON shift  219
                      LBRACKET shift  225
                           VAR shift  58
                         CONST shift  56
                            IF shift  173
                         WHILE shift  167
                           FOR shift  106
                      CONTINUE shift  105
                         BREAK shift  104
                        RETURN shift  13
                    ACTIONNAME shift  101
                         error shift  148
                     vdef_stmt shift  218
                     cdef_stmt shift  216
                          stmt shift  156
                      bodyStmt shift  227
                   return_stmt shift  226
                      lbracket shift  8
               vdefAssign_stmt shift  217
                   assign_stmt shift  215
                      funcexpr shift  147
                    actionStmt shift  213
                       if_stmt shift  212
                    while_stmt shift  211
                  foreach_stmt shift  210
                 continue_stmt shift  209
                    break_stmt shift  208
                      funcName shift  144
                        lvalue shift  113
           lvalueList_nonEmpty shift  89
                      if_start shift  110
                     if_header shift  5
                      if_block shift  49
                   while_start shift  107
                  while_header shift  3
                foreach_header shift  2
                        action shift  53
                       actions shift  52

State 2:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  95
                     SEMICOLON shift  219
                      LBRACKET shift  225
                           VAR shift  58
                         CONST shift  56
                            IF shift  173
                         WHILE shift  167
                           FOR shift  106
                      CONTINUE shift  105
                         BREAK shift  104
                        RETURN shift  13
                    ACTIONNAME shift  101
                         error shift  148
                     vdef_stmt shift  218
                     cdef_stmt shift  216
                          stmt shift  163
                      bodyStmt shift  227
                   return_stmt shift  226
                      lbracket shift  8
               vdefAssign_stmt shift  217
                   assign_stmt shift  215
                      funcexpr shift  147
                    actionStmt shift  213
                       if_stmt shift  212
                    while_stmt shift  211
                  foreach_stmt shift  210
                 continue_stmt shift  209
                    break_stmt shift  208
                      funcName shift  144
                        lvalue shift  113
           lvalueList_nonEmpty shift  89
                      if_start shift  110
                     if_header shift  5
                      if_block shift  49
                   while_start shift  107
                  while_header shift  3
                foreach_header shift  2
                        action shift  53
                       actions shift  52

State 3:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  95
                     SEMICOLON shift  219
                      LBRACKET shift  225
                           VAR shift  58
                         CONST shift  56
                            IF shift  173
                         WHILE shift  167
                           FOR shift  106
                      CONTINUE shift  105
                         BREAK shift  104
                        RETURN shift  13
                    ACTIONNAME shift  101
                         error shift  148
                     vdef_stmt shift  218
                     cdef_stmt shift  216
                          stmt shift  165
                      bodyStmt shift  227
                   return_stmt shift  226
                      lbracket shift  8
               vdefAssign_stmt shift  217
                   assign_stmt shift  215
                      funcexpr shift  147
                    actionStmt shift  213
                       if_stmt shift  212
                    while_stmt shift  211
                  foreach_stmt shift  210
                 continue_stmt shift  209
                    break_stmt shift  208
                      funcName shift  144
                        lvalue shift  113
           lvalueList_nonEmpty shift  89
                      if_start shift  110
                     if_header shift  5
                      if_block shift  49
                   while_start shift  107
                  while_header shift  3
                foreach_header shift  2
                        action shift  53
                       actions shift  52

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  95
                     SEMICOLON shift  219
                      LBRACKET shift  225
                           VAR shift  58
                         CONST shift  56
                            IF shift  173
                         WHILE shift  167
                           FOR shift  106
                      CONTINUE shift  105
                         BREAK shift  104
                        RETURN shift  13
                    ACTIONNAME shift  101
                         error shift  148
                     vdef_stmt shift  218
                     cdef_stmt shift  216
                          stmt shift  168
                      bodyStmt shift  227
                   return_stmt shift  226
                      lbracket shift  8
               vdefAssign_stmt shift  217
                   assign_stmt shift  215
                      funcexpr shift  147
                    actionStmt shift  213
                       if_stmt shift  212
                    while_stmt shift  211
                  foreach_stmt shift  210
                 continue_stmt shift  209
                    break_stmt shift  208
                      funcName shift  144
                        lvalue shift  113
           lvalueList_nonEmpty shift  89
                      if_start shift  110
                     if_header shift  5
                      if_block shift  49
                   while_start shift  107
                  while_header shift  3
                foreach_header shift  2
                        action shift  53
                       actions shift  52

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  95
                     SEMICOLON shift  219
                      LBRACKET shift  225
                           VAR shift  58
                         CONST shift  56
                            IF shift  173
                         WHILE shift  167
                           FOR shift  106
                      CONTINUE shift  105
                         BREAK shift  104
                        RETURN shift  13
                    ACTIONNAME shift  101
                         error shift  148
                     vdef_stmt shift  218
                     cdef_stmt shift  216
                          stmt shift  171
                      bodyStmt shift  227
                   return_stmt shift  226
                      lbracket shift  8
               vdefAssign_stmt shift  217
                   assign_stmt shift  215
                      funcexpr shift  147
                    actionStmt shift  213
                       if_stmt shift  212
                    while_stmt shift  211
                  foreach_stmt shift  210
                 continue_stmt shift  209
                    break_stmt shift  208
                      funcName shift  144
                        lvalue shift  113
           lvalueList_nonEmpty shift  89
                      if_start shift  110
                     if_header shift  5
                      if_block shift  49
                   while_start shift  107
                  while_header shift  3
                foreach_header shift  2
                        action shift  53
                       actions shift  52

State 6:
          fdef_chunk ::= function_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  95
                     SEMICOLON shift  219
                      LBRACKET shift  225
                           VAR shift  58
                         CONST shift  56
                            IF shift  173
                         WHILE shift  167
                           FOR shift  106
                      CONTINUE shift  105
                         BREAK shift  104
                        RETURN shift  13
                    ACTIONNAME shift  101
                         error shift  148
                     vdef_stmt shift  218
                     cdef_stmt shift  216
                          stmt shift  229
                      bodyStmt shift  227
                   return_stmt shift  226
                      lbracket shift  8
               vdefAssign_stmt shift  217
                   assign_stmt shift  215
                      funcexpr shift  147
                    actionStmt shift  213
                       if_stmt shift  212
                    while_stmt shift  211
                  foreach_stmt shift  210
                 continue_stmt shift  209
                    break_stmt shift  208
                      funcName shift  144
                        lvalue shift  113
           lvalueList_nonEmpty shift  89
                      if_start shift  110
                     if_header shift  5
                      if_block shift  49
                   while_start shift  107
                  while_header shift  3
                foreach_header shift  2
                        action shift  53
                       actions shift  52

State 7:
          rbracket ::= * RBRACKET
          stmt ::= lbracket bodyStmtList * rbracket
          stmt ::= lbracket bodyStmtList * return_stmt rbracket
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  95
                     SEMICOLON shift  219
                      RBRACKET shift  223
                           VAR shift  58
                         CONST shift  56
                            IF shift  173
                         WHILE shift  167
                           FOR shift  106
                      CONTINUE shift  105
                         BREAK shift  104
                        RETURN shift  13
                    ACTIONNAME shift  101
                         error shift  206
                     vdef_stmt shift  218
                     cdef_stmt shift  216
                      bodyStmt shift  207
                   return_stmt shift  59
                      rbracket shift  221
               vdefAssign_stmt shift  217
                   assign_stmt shift  215
                      funcexpr shift  147
                    actionStmt shift  213
                       if_stmt shift  212
                    while_stmt shift  211
                  foreach_stmt shift  210
                 continue_stmt shift  209
                    break_stmt shift  208
                      funcName shift  144
                        lvalue shift  113
           lvalueList_nonEmpty shift  89
                      if_start shift  110
                     if_header shift  5
                      if_block shift  49
                   while_start shift  107
                  while_header shift  3
                foreach_header shift  2
                        action shift  53
                       actions shift  52

State 8:
          stmt ::= lbracket * RBRACKET
          stmt ::= lbracket * return_stmt rbracket
          stmt ::= lbracket * bodyStmtList rbracket
          stmt ::= lbracket * bodyStmtList return_stmt rbracket
          stmt ::= lbracket * error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          lvalue ::= * NAME
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr SEMICOLON
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  95
                     SEMICOLON shift  219
                      RBRACKET shift  224
                           VAR shift  58
                         CONST shift  56
                            IF shift  173
                         WHILE shift  167
                           FOR shift  106
                      CONTINUE shift  105
                         BREAK shift  104
                        RETURN shift  13
                    ACTIONNAME shift  101
                         error shift  98
                     vdef_stmt shift  218
                     cdef_stmt shift  216
                      bodyStmt shift  154
                   return_stmt shift  60
                  bodyStmtList shift  7
               vdefAssign_stmt shift  217
                   assign_stmt shift  215
                      funcexpr shift  147
                    actionStmt shift  213
                       if_stmt shift  212
                    while_stmt shift  211
                  foreach_stmt shift  210
                 continue_stmt shift  209
                    break_stmt shift  208
                      funcName shift  144
                        lvalue shift  113
           lvalueList_nonEmpty shift  89
                      if_start shift  110
                     if_header shift  5
                      if_block shift  49
                   while_start shift  107
                  while_header shift  3
                foreach_header shift  2
                        action shift  53
                       actions shift  52

State 9:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunk ::= * import_chunk
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * cdef_stmt
          import_chunk ::= * FROM NAME IMPORT nameList_nonEmpty SEMICOLON
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList_nonEmpty RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON

                             $ reduce 0
                          FROM shift  153
                      FUNCTION shift  150
                           VAR shift  51
                         CONST shift  56
                         chunk shift  240
                  import_chunk shift  239
                    fdef_chunk shift  238
                     vdef_stmt shift  237
                     cdef_stmt shift  236
                function_start shift  149
               function_header shift  6

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (53) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                        RPAREN shift  185
                        RPAREN reduce 53  ** Parsing conflict **
                        STRING shift  188
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  72
                fArgs_nonEmpty shift  121
                         fArgs shift  120
                      funcName shift  144

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (53) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                        STRING shift  188
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  72
                fArgs_nonEmpty shift  121
                         fArgs shift  100
                      funcName shift  144
                     {default} reduce 53

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (53) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          funcexpr ::= funcName LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                        STRING shift  188
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  72
                fArgs_nonEmpty shift  121
                         fArgs shift  119
                      funcName shift  144
                     {default} reduce 53

State 13:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
     (45) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * exprList SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  118
             exprList_nonEmpty shift  103
                          expr shift  65
                      exprList shift  102
                      funcName shift  144
                     {default} reduce 45

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                 CONDITIONNAME shift  122
                      funcexpr shift  143
                          expr shift  62
                      funcName shift  144
                         lexpr shift  78

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                 CONDITIONNAME shift  122
                      funcexpr shift  143
                          expr shift  62
                      funcName shift  144
                         lexpr shift  79

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                 CONDITIONNAME shift  122
                      funcexpr shift  143
                          expr shift  62
                      funcName shift  144
                         lexpr shift  80

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                 CONDITIONNAME shift  122
                      funcexpr shift  143
                          expr shift  62
                      funcName shift  144
                         lexpr shift  189

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                 CONDITIONNAME shift  122
                      funcexpr shift  143
                          expr shift  62
                      funcName shift  144
                         lexpr shift  190

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                 CONDITIONNAME shift  122
                      funcexpr shift  143
                          expr shift  62
                      funcName shift  144
                         lexpr shift  123

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                 CONDITIONNAME shift  122
                      funcexpr shift  143
                          expr shift  62
                      funcName shift  144
                         lexpr shift  191

State 21:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= L2V LPAREN * lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                 CONDITIONNAME shift  122
                      funcexpr shift  143
                          expr shift  62
                      funcName shift  144
                         lexpr shift  84

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                        STRING shift  188
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  72
                fArgs_nonEmpty shift  187
                      funcName shift  144

State 23:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= FOR LPAREN nameList_nonEmpty COLON * exprList_nonEmpty RPAREN

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  118
             exprList_nonEmpty shift  86
                          expr shift  65
                      funcName shift  144

State 24:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalueList_nonEmpty ASSIGN * exprList_nonEmpty SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  118
             exprList_nonEmpty shift  88
                          expr shift  65
                      funcName shift  144

State 25:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  118
             exprList_nonEmpty shift  90
                          expr shift  65
                      funcName shift  144

State 26:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  118
             exprList_nonEmpty shift  180
                          expr shift  65
                      funcName shift  144

State 27:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  118
             exprList_nonEmpty shift  92
                          expr shift  65
                      funcName shift  144

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ASSIGN * expr SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  63
                      funcName shift  144

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  66
                      funcName shift  144

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  67
                      funcName shift  144

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  68
                      funcName shift  144

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  69
                      funcName shift  144

State 33:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  70
                      funcName shift  144

State 34:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  71
                      funcName shift  144

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  192
                      funcName shift  144

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  193
                      funcName shift  144

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  194
                      funcName shift  144

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  74
                      funcName shift  144

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  73
                      funcName shift  144

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  75
                      funcName shift  144

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  76
                      funcName shift  144

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  77
                      funcName shift  144

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  195
                      funcName shift  144

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  196
                      funcName shift  144

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  197
                      funcName shift  144

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  83
                      funcName shift  144

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  64
                      funcName shift  144

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  204
                          NAME shift  94
                        LPAREN shift  47
                           L2V shift  136
                     MAPSTRING shift  135
                          UNIT shift  132
                        SWITCH shift  129
                      LOCATION shift  126
                      funcexpr shift  143
                          expr shift  82
                      funcName shift  144

State 49:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
    (104) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  109
                          ELSE reduce 104 ** Parsing conflict **
                    elif_start shift  108
                   elif_header shift  4
                   else_header shift  1
                     {default} reduce 104

State 50:
          function_header ::= function_start LPAREN * nameList_nonEmpty RPAREN
          function_header ::= function_start LPAREN * RPAREN
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  233
                        RPAREN shift  230
             nameList_nonEmpty shift  96

State 51:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty SEMICOLON

                          NAME shift  233
             nameList_nonEmpty shift  85

State 52:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
    (120) actionStmt ::= actions *

                    ACTIONNAME shift  101
                    ACTIONNAME reduce 120 ** Parsing conflict **
                        action shift  157
                     {default} reduce 120

State 53:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
    (119) actionStmt ::= action *

                    ACTIONNAME shift  101
                    ACTIONNAME reduce 119 ** Parsing conflict **
                        action shift  158
                     {default} reduce 119

State 54:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= FOR LPAREN * nameList_nonEmpty COLON exprList_nonEmpty RPAREN

                          NAME shift  233
             nameList_nonEmpty shift  87

State 55:
          lvalue ::= * NAME
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA * lvalue

                          NAME shift  112
                        lvalue shift  175

State 56:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON

                          NAME shift  233
             nameList_nonEmpty shift  91

State 57:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  116
              numList_nonEmpty shift  93

State 58:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON

                          NAME shift  233
             nameList_nonEmpty shift  81

State 59:
          rbracket ::= * RBRACKET
          stmt ::= lbracket bodyStmtList return_stmt * rbracket

                      RBRACKET shift  223
                      rbracket shift  220

State 60:
          rbracket ::= * RBRACKET
          stmt ::= lbracket return_stmt * rbracket

                      RBRACKET shift  223
                      rbracket shift  222

State 61:
          import_chunk ::= FROM NAME IMPORT * nameList_nonEmpty SEMICOLON
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  233
             nameList_nonEmpty shift  97

State 62:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  34
                            LE shift  32
                            LT shift  31
                            GE shift  30
                            GT shift  29
                            NE shift  33
                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43

State 63:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          assign_stmt ::= lvalue ASSIGN expr * SEMICOLON

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     SEMICOLON shift  177

State 64:
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                        RPAREN shift  203

State 65:
     (43) exprList_nonEmpty ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 43

State 66:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (83) lexpr ::= expr GT expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 83

State 67:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (82) lexpr ::= expr GE expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 82

State 68:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (81) lexpr ::= expr LT expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 81

State 69:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (80) lexpr ::= expr LE expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 80

State 70:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (79) lexpr ::= expr NE expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 79

State 71:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (78) lexpr ::= expr EQ expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 78

State 72:
     (50) fArgs_nonEmpty ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 50

State 73:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (73) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 73

State 74:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (74) expr ::= expr BITXOR expr *

                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 74

State 75:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (72) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 72

State 76:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (71) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 71

State 77:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (70) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  48
                         MINUS shift  46
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 70

State 78:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  19
                          LAND shift  20
                        RPAREN shift  166

State 79:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  19
                          LAND shift  20
                        RPAREN shift  169

State 80:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  19
                          LAND shift  20
                        RPAREN shift  172

State 81:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          vdef_stmt ::= VAR nameList_nonEmpty * SEMICOLON
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty SEMICOLON

                         COMMA shift  151
                        ASSIGN shift  27
                     SEMICOLON shift  183

State 82:
          expr ::= expr * PLUS expr
     (65) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 65

State 83:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (66) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 66

State 84:
          expr ::= L2V LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  19
                          LAND shift  20
                        RPAREN shift  202

State 85:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          vdef_stmt ::= VAR nameList_nonEmpty * SEMICOLON

                         COMMA shift  151
                     SEMICOLON shift  183

State 86:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          foreach_header ::= FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty * RPAREN

                         COMMA shift  26
                        RPAREN shift  164

State 87:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= FOR LPAREN nameList_nonEmpty * COLON exprList_nonEmpty RPAREN

                         COMMA shift  151
                         COLON shift  23

State 88:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  174

State 89:
          lvalueList_nonEmpty ::= lvalueList_nonEmpty * COMMA lvalue
          assign_stmt ::= lvalueList_nonEmpty * ASSIGN exprList_nonEmpty SEMICOLON

                         COMMA shift  55
                        ASSIGN shift  24

State 90:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  178

State 91:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty SEMICOLON

                         COMMA shift  151
                        ASSIGN shift  25

State 92:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  179

State 93:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  115
                    RSQBRACKET shift  114

State 94:
     (48) expr ::= NAME *
          expr ::= NAME * PERIOD NAME
     (55) funcName ::= NAME *
          funcName ::= NAME * PERIOD NAME

                        LPAREN reduce 55
                        PERIOD shift  138
                     {default} reduce 48

State 95:
     (55) funcName ::= NAME *
          funcName ::= NAME * PERIOD NAME
     (91) lvalue ::= NAME *
          lvalue ::= NAME * PERIOD NAME

                        LPAREN reduce 55
                        PERIOD shift  146
                     {default} reduce 91

State 96:
          function_header ::= function_start LPAREN nameList_nonEmpty * RPAREN
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  151
                        RPAREN shift  231

State 97:
          import_chunk ::= FROM NAME IMPORT nameList_nonEmpty * SEMICOLON
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  151
                     SEMICOLON shift  235

State 98:
          stmt ::= lbracket error * RBRACKET

                      RBRACKET shift  155

State 99:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  159

State 100:
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                        RPAREN shift  99

State 101:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  11

State 102:
          return_stmt ::= RETURN exprList * SEMICOLON

                     SEMICOLON shift  160

State 103:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (46) exprList ::= exprList_nonEmpty *

                         COMMA shift  26
                     {default} reduce 46

State 104:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  161

State 105:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  162

State 106:
          foreach_header ::= FOR * LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN

                        LPAREN shift  54

State 107:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  14

State 108:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  15

State 109:
          elif_start ::= ELSE * IF
    (103) else_header ::= ELSE *

                            IF shift  170
                            IF reduce 103 ** Parsing conflict **
                     {default} reduce 103

State 110:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  16

State 111:
          lvalue ::= NAME PERIOD * NAME

                          NAME shift  176

State 112:
     (91) lvalue ::= NAME *
          lvalue ::= NAME * PERIOD NAME

                        PERIOD shift  111
                     {default} reduce 91

State 113:
     (93) lvalueList_nonEmpty ::= lvalue *
          assign_stmt ::= lvalue * ASSIGN expr SEMICOLON

                        ASSIGN shift  28
                        ASSIGN reduce 93  ** Parsing conflict **
                     {default} reduce 93

State 114:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  181

State 115:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  182

State 116:
     (37) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  139
                    RSQBRACKET reduce 37  ** Parsing conflict **
                     {default} reduce 37

State 117:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  57

State 118:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (58) expr ::= funcexpr *

                    LSQBRACKET shift  117
                     {default} reduce 58

State 119:
          funcexpr ::= funcName LPAREN fArgs * RPAREN

                        RPAREN shift  184

State 120:
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  186

State 121:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (54) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  22
                     {default} reduce 54

State 122:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  10

State 123:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (85) lexpr ::= lexpr LOR lexpr *

                          LAND shift  20
                     {default} reduce 85

State 124:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  198

State 125:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  124

State 126:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  125

State 127:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  199

State 128:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  127

State 129:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  128

State 130:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  200

State 131:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  130

State 132:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  131

State 133:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  201

State 134:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  133

State 135:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  134

State 136:
          expr ::= L2V * LPAREN lexpr RPAREN

                        LPAREN shift  21

State 137:
     (49) expr ::= NAME PERIOD NAME *
     (56) funcName ::= NAME PERIOD NAME *

                        LPAREN reduce 56
                     {default} reduce 49

State 138:
          expr ::= NAME PERIOD * NAME
          funcName ::= NAME PERIOD * NAME

                          NAME shift  137

State 139:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  205

State 140:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  139

State 141:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  140

State 142:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  141

State 143:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (58) expr ::= funcexpr *

                    LSQBRACKET shift  142
                     {default} reduce 58

State 144:
          funcexpr ::= funcName * LPAREN fArgs RPAREN

                        LPAREN shift  12

State 145:
     (56) funcName ::= NAME PERIOD NAME *
     (92) lvalue ::= NAME PERIOD NAME *

                        LPAREN reduce 56
                     {default} reduce 92

State 146:
          funcName ::= NAME PERIOD * NAME
          lvalue ::= NAME PERIOD * NAME

                          NAME shift  145

State 147:
          bodyStmt ::= funcexpr * SEMICOLON

                     SEMICOLON shift  214

State 148:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  228

State 149:
          function_header ::= function_start * LPAREN nameList_nonEmpty RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  50

State 150:
          function_start ::= FUNCTION * NAME

                          NAME shift  232

State 151:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  234

State 152:
          import_chunk ::= FROM NAME * IMPORT nameList_nonEmpty SEMICOLON

                        IMPORT shift  61

State 153:
          import_chunk ::= FROM * NAME IMPORT nameList_nonEmpty SEMICOLON

                          NAME shift  152

State 154:
     (34) bodyStmtList ::= bodyStmt *

                     {default} reduce 34

State 155:
     (21) stmt ::= lbracket error RBRACKET *

                     {default} reduce 21

State 156:
    (105) if_stmt ::= if_block else_header stmt *

                     {default} reduce 105

State 157:
    (118) actions ::= actions action *

                     {default} reduce 118

State 158:
    (117) actions ::= action action *

                     {default} reduce 117

State 159:
    (116) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 116

State 160:
    (113) return_stmt ::= RETURN exprList SEMICOLON *

                     {default} reduce 113

State 161:
    (112) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 112

State 162:
    (111) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 111

State 163:
    (110) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 110

State 164:
    (109) foreach_header ::= FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN *

                     {default} reduce 109

State 165:
    (108) while_stmt ::= while_header stmt *

                     {default} reduce 108

State 166:
    (107) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 107

State 167:
    (106) while_start ::= WHILE *

                     {default} reduce 106

State 168:
    (102) if_block ::= if_block elif_header stmt *

                     {default} reduce 102

State 169:
    (101) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 101

State 170:
    (100) elif_start ::= ELSE IF *

                     {default} reduce 100

State 171:
     (99) if_block ::= if_header stmt *

                     {default} reduce 99

State 172:
     (98) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 98

State 173:
     (97) if_start ::= IF *

                     {default} reduce 97

State 174:
     (96) assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON *

                     {default} reduce 96

State 175:
     (94) lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA lvalue *

                     {default} reduce 94

State 176:
     (92) lvalue ::= NAME PERIOD NAME *

                     {default} reduce 92

State 177:
     (95) assign_stmt ::= lvalue ASSIGN expr SEMICOLON *

                     {default} reduce 95

State 178:
     (90) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON *

                     {default} reduce 90

State 179:
     (89) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON *

                     {default} reduce 89

State 180:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (44) exprList_nonEmpty ::= exprList_nonEmpty COMMA exprList_nonEmpty *

                     {default} reduce 44

State 181:
     (41) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 41

State 182:
     (38) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 38

State 183:
     (88) vdef_stmt ::= VAR nameList_nonEmpty SEMICOLON *

                     {default} reduce 88

State 184:
     (57) funcexpr ::= funcName LPAREN fArgs RPAREN *

                     {default} reduce 57

State 185:
    (115) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 115

State 186:
    (114) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 114

State 187:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (52) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArgs_nonEmpty *

                     {default} reduce 52

State 188:
     (51) fArgs_nonEmpty ::= STRING *

                     {default} reduce 51

State 189:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (86) lexpr ::= LNOT lexpr *
     (87) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 87

State 190:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (86) lexpr ::= LNOT lexpr *

                     {default} reduce 86

State 191:
          lexpr ::= lexpr * LAND lexpr
     (84) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 84

State 192:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (77) expr ::= BITNOT expr *

                     {default} reduce 77

State 193:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (76) expr ::= MINUS expr *

                     {default} reduce 76

State 194:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (75) expr ::= PLUS expr *

                     {default} reduce 75

State 195:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (69) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 69

State 196:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (68) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 68

State 197:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (67) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 67

State 198:
     (64) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 64

State 199:
     (63) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 63

State 200:
     (62) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 62

State 201:
     (61) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 61

State 202:
     (60) expr ::= L2V LPAREN lexpr RPAREN *

                     {default} reduce 60

State 203:
     (59) expr ::= LPAREN expr RPAREN *

                     {default} reduce 59

State 204:
     (47) expr ::= NUMBER *

                     {default} reduce 47

State 205:
     (42) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 42

State 206:
     (36) bodyStmtList ::= bodyStmtList error *

                     {default} reduce 36

State 207:
     (35) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 35

State 208:
     (33) bodyStmt ::= break_stmt *

                     {default} reduce 33

State 209:
     (32) bodyStmt ::= continue_stmt *

                     {default} reduce 32

State 210:
     (31) bodyStmt ::= foreach_stmt *

                     {default} reduce 31

State 211:
     (30) bodyStmt ::= while_stmt *

                     {default} reduce 30

State 212:
     (29) bodyStmt ::= if_stmt *

                     {default} reduce 29

State 213:
     (28) bodyStmt ::= actionStmt *

                     {default} reduce 28

State 214:
     (27) bodyStmt ::= funcexpr SEMICOLON *

                     {default} reduce 27

State 215:
     (26) bodyStmt ::= assign_stmt *

                     {default} reduce 26

State 216:
     (25) bodyStmt ::= cdef_stmt *

                     {default} reduce 25

State 217:
     (24) bodyStmt ::= vdefAssign_stmt *

                     {default} reduce 24

State 218:
     (23) bodyStmt ::= vdef_stmt *

                     {default} reduce 23

State 219:
     (22) bodyStmt ::= SEMICOLON *

                     {default} reduce 22

State 220:
     (20) stmt ::= lbracket bodyStmtList return_stmt rbracket *

                     {default} reduce 20

State 221:
     (19) stmt ::= lbracket bodyStmtList rbracket *

                     {default} reduce 19

State 222:
     (18) stmt ::= lbracket return_stmt rbracket *

                     {default} reduce 18

State 223:
     (16) rbracket ::= RBRACKET *

                     {default} reduce 16

State 224:
     (17) stmt ::= lbracket RBRACKET *

                     {default} reduce 17

State 225:
     (15) lbracket ::= LBRACKET *

                     {default} reduce 15

State 226:
     (14) stmt ::= return_stmt *

                     {default} reduce 14

State 227:
     (13) stmt ::= bodyStmt *

                     {default} reduce 13

State 228:
     (12) stmt ::= error SEMICOLON *

                     {default} reduce 12

State 229:
     (11) fdef_chunk ::= function_header stmt *

                     {default} reduce 11

State 230:
     (10) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 10

State 231:
      (9) function_header ::= function_start LPAREN nameList_nonEmpty RPAREN *

                     {default} reduce 9

State 232:
      (8) function_start ::= FUNCTION NAME *

                     {default} reduce 8

State 233:
     (39) nameList_nonEmpty ::= NAME *

                     {default} reduce 39

State 234:
     (40) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 40

State 235:
      (7) import_chunk ::= FROM NAME IMPORT nameList_nonEmpty SEMICOLON *

                     {default} reduce 7

State 236:
      (6) chunk ::= cdef_stmt *

                     {default} reduce 6

State 237:
      (5) chunk ::= vdef_stmt *

                     {default} reduce 5

State 238:
      (4) chunk ::= fdef_chunk *

                     {default} reduce 4

State 239:
      (3) chunk ::= import_chunk *

                     {default} reduce 3

State 240:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: FROM
   28: IMPORT
   29: SEMICOLON
   30: FUNCTION
   31: LPAREN
   32: RPAREN
   33: LBRACKET
   34: RBRACKET
   35: LSQBRACKET
   36: RSQBRACKET
   37: PERIOD
   38: STRING
   39: FUNCCALL
   40: L2V
   41: MAPSTRING
   42: UNIT
   43: SWITCH
   44: LOCATION
   45: VAR
   46: CONST
   47: IF
   48: ELSE
   49: WHILE
   50: FOR
   51: COLON
   52: CONTINUE
   53: BREAK
   54: RETURN
   55: CONDITIONNAME
   56: ACTIONNAME
   57: error:
   58: nt:
   59: program: <lambda> FROM FUNCTION VAR CONST
   60: chunks: <lambda> FROM FUNCTION VAR CONST
   61: chunk: FROM FUNCTION VAR CONST
   62: import_chunk: FROM
   63: fdef_chunk: FUNCTION
   64: vdef_stmt: VAR
   65: cdef_stmt: CONST
   66: nameList_nonEmpty: NAME
   67: function_start: FUNCTION
   68: function_header: FUNCTION
   69: stmt: NAME SEMICOLON LBRACKET VAR CONST IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   70: bodyStmt: NAME SEMICOLON VAR CONST IF WHILE FOR CONTINUE BREAK ACTIONNAME
   71: return_stmt: RETURN
   72: lbracket: LBRACKET
   73: rbracket: RBRACKET
   74: bodyStmtList: NAME SEMICOLON VAR CONST IF WHILE FOR CONTINUE BREAK ACTIONNAME
   75: vdefAssign_stmt: VAR
   76: assign_stmt: NAME
   77: funcexpr: NAME
   78: actionStmt: ACTIONNAME
   79: if_stmt: IF
   80: while_stmt: WHILE
   81: foreach_stmt: FOR
   82: continue_stmt: CONTINUE
   83: break_stmt: BREAK
   84: numList_nonEmpty: NUMBER
   85: exprList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   86: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   87: exprList: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   88: fArgs_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN STRING L2V MAPSTRING UNIT SWITCH LOCATION
   89: fArgs: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN STRING L2V MAPSTRING UNIT SWITCH LOCATION
   90: funcName: NAME
   91: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
   92: lvalue: NAME
   93: lvalueList_nonEmpty: NAME
   94: if_start: IF
   95: if_header: IF
   96: if_block: IF
   97: elif_start: ELSE
   98: elif_header: ELSE
   99: else_header: ELSE
  100: while_start: WHILE
  101: while_header: WHILE
  102: foreach_header: FOR
  103: action: ACTIONNAME
  104: actions: ACTIONNAME
