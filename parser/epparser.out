State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  14
                     {default} reduce 1

State 1:
          lbracket ::= * LBRACKET
          rbracket ::= * RBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= lbracket bodyStmtList * rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket bodyStmtList * return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  96
                     SEMICOLON shift  253
                        LPAREN shift  45
                      LBRACKET shift  260
                      RBRACKET shift  258
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                           VAR shift  66
                         CONST shift  64
                            IF shift  216
                         WHILE shift  210
                           FOR shift  122
                       FOREACH shift  119
                      CONTINUE shift  191
                         BREAK shift  190
                        RETURN shift  18
                    ACTIONNAME shift  117
                         error shift  238
                     vdef_stmt shift  169
                     cdef_stmt shift  167
                      bodyStmt shift  239
                   return_stmt shift  170
                      lbracket shift  2
                      rbracket shift  256
                     blockStmt shift  254
               vdefAssign_stmt shift  168
                   assign_stmt shift  166
                      funcexpr shift  111
                    actionStmt shift  246
                       if_stmt shift  245
                    while_stmt shift  244
                      for_stmt shift  243
                  foreach_stmt shift  242
                 continue_stmt shift  161
                    break_stmt shift  160
                          expr shift  82
                      funcName shift  154
                        lvalue shift  128
           lvalueList_nonEmpty shift  100
                      if_start shift  126
                     if_header shift  8
                      if_block shift  58
                   while_start shift  123
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  19
                   for_header2 shift  12
                    for_header shift  5
                foreach_opener shift  63
                foreach_header shift  4
                        action shift  62
                       actions shift  61

State 2:
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= lbracket * RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket * return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= lbracket * bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket * bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmt ::= lbracket * error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  96
                     SEMICOLON shift  253
                        LPAREN shift  45
                      LBRACKET shift  260
                      RBRACKET shift  259
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                           VAR shift  66
                         CONST shift  64
                            IF shift  216
                         WHILE shift  210
                           FOR shift  122
                       FOREACH shift  119
                      CONTINUE shift  191
                         BREAK shift  190
                        RETURN shift  18
                    ACTIONNAME shift  117
                         error shift  114
                     vdef_stmt shift  169
                     cdef_stmt shift  167
                      bodyStmt shift  183
                   return_stmt shift  171
                      lbracket shift  2
                     blockStmt shift  254
                  bodyStmtList shift  1
               vdefAssign_stmt shift  168
                   assign_stmt shift  166
                      funcexpr shift  111
                    actionStmt shift  246
                       if_stmt shift  245
                    while_stmt shift  244
                      for_stmt shift  243
                  foreach_stmt shift  242
                 continue_stmt shift  161
                    break_stmt shift  160
                          expr shift  82
                      funcName shift  154
                        lvalue shift  128
           lvalueList_nonEmpty shift  100
                      if_start shift  126
                     if_header shift  8
                      if_block shift  58
                   while_start shift  123
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  19
                   for_header2 shift  12
                    for_header shift  5
                foreach_opener shift  63
                foreach_header shift  4
                        action shift  62
                       actions shift  61

State 3:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  96
                     SEMICOLON shift  253
                        LPAREN shift  45
                      LBRACKET shift  260
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                           VAR shift  66
                         CONST shift  64
                            IF shift  216
                         WHILE shift  210
                           FOR shift  122
                       FOREACH shift  119
                      CONTINUE shift  191
                         BREAK shift  190
                        RETURN shift  18
                    ACTIONNAME shift  117
                         error shift  173
                     vdef_stmt shift  169
                     cdef_stmt shift  167
                          stmt shift  185
                      bodyStmt shift  262
                   return_stmt shift  172
                      lbracket shift  2
                     blockStmt shift  254
               vdefAssign_stmt shift  168
                   assign_stmt shift  166
                      funcexpr shift  111
                    actionStmt shift  246
                       if_stmt shift  245
                    while_stmt shift  244
                      for_stmt shift  243
                  foreach_stmt shift  242
                 continue_stmt shift  161
                    break_stmt shift  160
                          expr shift  82
                      funcName shift  154
                        lvalue shift  128
           lvalueList_nonEmpty shift  100
                      if_start shift  126
                     if_header shift  8
                      if_block shift  58
                   while_start shift  123
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  19
                   for_header2 shift  12
                    for_header shift  5
                foreach_opener shift  63
                foreach_header shift  4
                        action shift  62
                       actions shift  61

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  96
                     SEMICOLON shift  253
                        LPAREN shift  45
                      LBRACKET shift  260
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                           VAR shift  66
                         CONST shift  64
                            IF shift  216
                         WHILE shift  210
                           FOR shift  122
                       FOREACH shift  119
                      CONTINUE shift  191
                         BREAK shift  190
                        RETURN shift  18
                    ACTIONNAME shift  117
                         error shift  173
                     vdef_stmt shift  169
                     cdef_stmt shift  167
                          stmt shift  192
                      bodyStmt shift  262
                   return_stmt shift  172
                      lbracket shift  2
                     blockStmt shift  254
               vdefAssign_stmt shift  168
                   assign_stmt shift  166
                      funcexpr shift  111
                    actionStmt shift  246
                       if_stmt shift  245
                    while_stmt shift  244
                      for_stmt shift  243
                  foreach_stmt shift  242
                 continue_stmt shift  161
                    break_stmt shift  160
                          expr shift  82
                      funcName shift  154
                        lvalue shift  128
           lvalueList_nonEmpty shift  100
                      if_start shift  126
                     if_header shift  8
                      if_block shift  58
                   while_start shift  123
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  19
                   for_header2 shift  12
                    for_header shift  5
                foreach_opener shift  63
                foreach_header shift  4
                        action shift  62
                       actions shift  61

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          for_stmt ::= for_header * stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  96
                     SEMICOLON shift  253
                        LPAREN shift  45
                      LBRACKET shift  260
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                           VAR shift  66
                         CONST shift  64
                            IF shift  216
                         WHILE shift  210
                           FOR shift  122
                       FOREACH shift  119
                      CONTINUE shift  191
                         BREAK shift  190
                        RETURN shift  18
                    ACTIONNAME shift  117
                         error shift  173
                     vdef_stmt shift  169
                     cdef_stmt shift  167
                          stmt shift  195
                      bodyStmt shift  262
                   return_stmt shift  172
                      lbracket shift  2
                     blockStmt shift  254
               vdefAssign_stmt shift  168
                   assign_stmt shift  166
                      funcexpr shift  111
                    actionStmt shift  246
                       if_stmt shift  245
                    while_stmt shift  244
                      for_stmt shift  243
                  foreach_stmt shift  242
                 continue_stmt shift  161
                    break_stmt shift  160
                          expr shift  82
                      funcName shift  154
                        lvalue shift  128
           lvalueList_nonEmpty shift  100
                      if_start shift  126
                     if_header shift  8
                      if_block shift  58
                   while_start shift  123
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  19
                   for_header2 shift  12
                    for_header shift  5
                foreach_opener shift  63
                foreach_header shift  4
                        action shift  62
                       actions shift  61

State 6:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  96
                     SEMICOLON shift  253
                        LPAREN shift  45
                      LBRACKET shift  260
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                           VAR shift  66
                         CONST shift  64
                            IF shift  216
                         WHILE shift  210
                           FOR shift  122
                       FOREACH shift  119
                      CONTINUE shift  191
                         BREAK shift  190
                        RETURN shift  18
                    ACTIONNAME shift  117
                         error shift  173
                     vdef_stmt shift  169
                     cdef_stmt shift  167
                          stmt shift  208
                      bodyStmt shift  262
                   return_stmt shift  172
                      lbracket shift  2
                     blockStmt shift  254
               vdefAssign_stmt shift  168
                   assign_stmt shift  166
                      funcexpr shift  111
                    actionStmt shift  246
                       if_stmt shift  245
                    while_stmt shift  244
                      for_stmt shift  243
                  foreach_stmt shift  242
                 continue_stmt shift  161
                    break_stmt shift  160
                          expr shift  82
                      funcName shift  154
                        lvalue shift  128
           lvalueList_nonEmpty shift  100
                      if_start shift  126
                     if_header shift  8
                      if_block shift  58
                   while_start shift  123
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  19
                   for_header2 shift  12
                    for_header shift  5
                foreach_opener shift  63
                foreach_header shift  4
                        action shift  62
                       actions shift  61

State 7:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  96
                     SEMICOLON shift  253
                        LPAREN shift  45
                      LBRACKET shift  260
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                           VAR shift  66
                         CONST shift  64
                            IF shift  216
                         WHILE shift  210
                           FOR shift  122
                       FOREACH shift  119
                      CONTINUE shift  191
                         BREAK shift  190
                        RETURN shift  18
                    ACTIONNAME shift  117
                         error shift  173
                     vdef_stmt shift  169
                     cdef_stmt shift  167
                          stmt shift  211
                      bodyStmt shift  262
                   return_stmt shift  172
                      lbracket shift  2
                     blockStmt shift  254
               vdefAssign_stmt shift  168
                   assign_stmt shift  166
                      funcexpr shift  111
                    actionStmt shift  246
                       if_stmt shift  245
                    while_stmt shift  244
                      for_stmt shift  243
                  foreach_stmt shift  242
                 continue_stmt shift  161
                    break_stmt shift  160
                          expr shift  82
                      funcName shift  154
                        lvalue shift  128
           lvalueList_nonEmpty shift  100
                      if_start shift  126
                     if_header shift  8
                      if_block shift  58
                   while_start shift  123
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  19
                   for_header2 shift  12
                    for_header shift  5
                foreach_opener shift  63
                foreach_header shift  4
                        action shift  62
                       actions shift  61

State 8:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  96
                     SEMICOLON shift  253
                        LPAREN shift  45
                      LBRACKET shift  260
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                           VAR shift  66
                         CONST shift  64
                            IF shift  216
                         WHILE shift  210
                           FOR shift  122
                       FOREACH shift  119
                      CONTINUE shift  191
                         BREAK shift  190
                        RETURN shift  18
                    ACTIONNAME shift  117
                         error shift  173
                     vdef_stmt shift  169
                     cdef_stmt shift  167
                          stmt shift  214
                      bodyStmt shift  262
                   return_stmt shift  172
                      lbracket shift  2
                     blockStmt shift  254
               vdefAssign_stmt shift  168
                   assign_stmt shift  166
                      funcexpr shift  111
                    actionStmt shift  246
                       if_stmt shift  245
                    while_stmt shift  244
                      for_stmt shift  243
                  foreach_stmt shift  242
                 continue_stmt shift  161
                    break_stmt shift  160
                          expr shift  82
                      funcName shift  154
                        lvalue shift  128
           lvalueList_nonEmpty shift  100
                      if_start shift  126
                     if_header shift  8
                      if_block shift  58
                   while_start shift  123
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  19
                   for_header2 shift  12
                    for_header shift  5
                foreach_opener shift  63
                foreach_header shift  4
                        action shift  62
                       actions shift  61

State 9:
          fdef_chunk ::= function_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  96
                     SEMICOLON shift  253
                        LPAREN shift  45
                      LBRACKET shift  260
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                           VAR shift  66
                         CONST shift  64
                            IF shift  216
                         WHILE shift  210
                           FOR shift  122
                       FOREACH shift  119
                      CONTINUE shift  191
                         BREAK shift  190
                        RETURN shift  18
                    ACTIONNAME shift  117
                         error shift  173
                     vdef_stmt shift  169
                     cdef_stmt shift  167
                          stmt shift  264
                      bodyStmt shift  262
                   return_stmt shift  172
                      lbracket shift  2
                     blockStmt shift  254
               vdefAssign_stmt shift  168
                   assign_stmt shift  166
                      funcexpr shift  111
                    actionStmt shift  246
                       if_stmt shift  245
                    while_stmt shift  244
                      for_stmt shift  243
                  foreach_stmt shift  242
                 continue_stmt shift  161
                    break_stmt shift  160
                          expr shift  82
                      funcName shift  154
                        lvalue shift  128
           lvalueList_nonEmpty shift  100
                      if_start shift  126
                     if_header shift  8
                      if_block shift  58
                   while_start shift  123
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  19
                   for_header2 shift  12
                    for_header shift  5
                foreach_opener shift  63
                foreach_header shift  4
                        action shift  62
                       actions shift  61

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt ::= * for_init_stmt_nonEmpty
    (120) for_init_stmt ::= *
          for_header1 ::= for_opener * for_init_stmt SEMICOLON

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  96
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                           VAR shift  66
                         CONST shift  64
                     vdef_stmt shift  206
                     cdef_stmt shift  204
               vdefAssign_stmt shift  205
                   assign_stmt shift  203
                      funcexpr shift  158
                          expr shift  82
                      funcName shift  154
                        lvalue shift  128
           lvalueList_nonEmpty shift  100
        for_init_stmt_nonEmpty shift  121
                 for_init_stmt shift  120
                     {default} reduce 120

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA * for_init_stmt_nonEmpty

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  96
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                           VAR shift  66
                         CONST shift  64
                     vdef_stmt shift  206
                     cdef_stmt shift  204
               vdefAssign_stmt shift  205
                   assign_stmt shift  203
                      funcexpr shift  158
                          expr shift  82
                      funcName shift  154
                        lvalue shift  128
           lvalueList_nonEmpty shift  100
        for_init_stmt_nonEmpty shift  202

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_header ::= for_header2 * for_action_stmt_nonEmpty RPAREN
          for_header ::= for_header2 * RPAREN

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  96
                        LPAREN shift  45
                        RPAREN shift  196
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                   assign_stmt shift  199
                      funcexpr shift  158
                          expr shift  82
                      funcName shift  154
                        lvalue shift  128
           lvalueList_nonEmpty shift  100
      for_action_stmt_nonEmpty shift  99

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA * for_action_stmt_nonEmpty

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  96
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                   assign_stmt shift  199
                      funcexpr shift  158
                          expr shift  82
                      funcName shift  154
                        lvalue shift  128
           lvalueList_nonEmpty shift  100
      for_action_stmt_nonEmpty shift  198

State 14:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunk ::= * import_chunk SEMICOLON
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt SEMICOLON
          chunk ::= * cdef_stmt SEMICOLON
          import_chunk ::= * FROM NAME IMPORT nameList_nonEmpty
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList_nonEmpty RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          vdef_stmt ::= * VAR nameList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty

                             $ reduce 0
                          FROM shift  179
                      FUNCTION shift  175
                           VAR shift  60
                         CONST shift  64
                         chunk shift  274
                  import_chunk shift  182
                    fdef_chunk shift  272
                     vdef_stmt shift  181
                     cdef_stmt shift  180
                function_start shift  174
               function_header shift  9

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (56) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                        RPAREN shift  223
                        RPAREN reduce 56  ** Parsing conflict **
                        STRING shift  226
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  81
                fArgs_nonEmpty shift  138
                         fArgs shift  137
                      funcName shift  154

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (56) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                        STRING shift  226
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  81
                fArgs_nonEmpty shift  138
                         fArgs shift  116
                      funcName shift  154
                     {default} reduce 56

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (56) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          funcexpr ::= funcName LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                        STRING shift  226
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  81
                fArgs_nonEmpty shift  138
                         fArgs shift  136
                      funcName shift  154
                     {default} reduce 56

State 18:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
     (47) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * exprList

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  135
             exprList_nonEmpty shift  118
                          expr shift  74
                      exprList shift  189
                      funcName shift  154
                     {default} reduce 47

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          for_header2 ::= for_header1 * lexpr SEMICOLON
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  24
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                 CONDITIONNAME shift  139
                      funcexpr shift  158
                          expr shift  70
                      funcName shift  154
                         lexpr shift  90

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  24
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                 CONDITIONNAME shift  139
                      funcexpr shift  158
                          expr shift  70
                      funcName shift  154
                         lexpr shift  91

State 21:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  24
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                 CONDITIONNAME shift  139
                      funcexpr shift  158
                          expr shift  70
                      funcName shift  154
                         lexpr shift  92

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  24
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                 CONDITIONNAME shift  139
                      funcexpr shift  158
                          expr shift  70
                      funcName shift  154
                         lexpr shift  93

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  23
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                 CONDITIONNAME shift  139
                      funcexpr shift  158
                          expr shift  70
                      funcName shift  154
                         lexpr shift  227

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  23
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                 CONDITIONNAME shift  139
                      funcexpr shift  158
                          expr shift  70
                      funcName shift  154
                         lexpr shift  228

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  24
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                 CONDITIONNAME shift  139
                      funcexpr shift  158
                          expr shift  70
                      funcName shift  154
                         lexpr shift  140

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  24
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                 CONDITIONNAME shift  139
                      funcexpr shift  158
                          expr shift  70
                      funcName shift  154
                         lexpr shift  229

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= L2V LPAREN * lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  24
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                 CONDITIONNAME shift  139
                      funcexpr shift  158
                          expr shift  70
                      funcName shift  154
                         lexpr shift  94

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                        STRING shift  226
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  81
                fArgs_nonEmpty shift  225
                      funcName shift  154

State 29:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= foreach_opener nameList_nonEmpty COLON * exprList_nonEmpty RPAREN

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  135
             exprList_nonEmpty shift  97
                          expr shift  74
                      funcName shift  154

State 30:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalueList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  135
             exprList_nonEmpty shift  127
                          expr shift  74
                      funcName shift  154

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA * lvalue

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  96
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  82
                      funcName shift  154
                        lvalue shift  217

State 32:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  135
             exprList_nonEmpty shift  129
                          expr shift  74
                      funcName shift  154

State 33:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  135
             exprList_nonEmpty shift  218
                          expr shift  74
                      funcName shift  154

State 34:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  135
             exprList_nonEmpty shift  130
                          expr shift  74
                      funcName shift  154

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ASSIGN * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  73
                      funcName shift  154

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  75
                      funcName shift  154

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  76
                      funcName shift  154

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  77
                      funcName shift  154

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  78
                      funcName shift  154

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  79
                      funcName shift  154

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  104
                      funcName shift  154

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  105
                      funcName shift  154

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  106
                      funcName shift  154

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  80
                      funcName shift  154

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  71
                      funcName shift  154

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  84
                      funcName shift  154

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  83
                      funcName shift  154

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  85
                      funcName shift  154

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  86
                      funcName shift  154

State 50:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  87
                      funcName shift  154

State 51:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  107
                      funcName shift  154

State 52:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  108
                      funcName shift  154

State 53:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  109
                      funcName shift  154

State 54:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  88
                      funcName shift  154

State 55:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  89
                      funcName shift  154

State 56:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  155
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  72
                      funcName shift  154

State 57:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * expr PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= expr LSQBRACKET * NAME RSQBRACKET

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  237
                          NAME shift  110
                        LPAREN shift  45
                           L2V shift  153
                     MAPSTRING shift  152
                          UNIT shift  149
                        SWITCH shift  146
                      LOCATION shift  143
                      funcexpr shift  158
                          expr shift  72
                      funcName shift  154

State 58:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
    (108) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  125
                          ELSE reduce 108 ** Parsing conflict **
                    elif_start shift  124
                   elif_header shift  7
                   else_header shift  3
                     {default} reduce 108

State 59:
          function_header ::= function_start LPAREN * nameList_nonEmpty RPAREN
          function_header ::= function_start LPAREN * RPAREN
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  268
                        RPAREN shift  265
             nameList_nonEmpty shift  112

State 60:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty

                          NAME shift  268
             nameList_nonEmpty shift  113

State 61:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
    (140) actionStmt ::= actions *

                    ACTIONNAME shift  117
                    ACTIONNAME reduce 140 ** Parsing conflict **
                        action shift  186
                     {default} reduce 140

State 62:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
    (139) actionStmt ::= action *

                    ACTIONNAME shift  117
                    ACTIONNAME reduce 139 ** Parsing conflict **
                        action shift  187
                     {default} reduce 139

State 63:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= foreach_opener * nameList_nonEmpty COLON exprList_nonEmpty RPAREN

                          NAME shift  268
             nameList_nonEmpty shift  98

State 64:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  268
             nameList_nonEmpty shift  101

State 65:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  133
              numList_nonEmpty shift  102

State 66:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  268
             nameList_nonEmpty shift  103

State 67:
          rbracket ::= * RBRACKET
          blockStmt ::= lbracket bodyStmtList return_stmt SEMICOLON * rbracket

                      RBRACKET shift  258
                      rbracket shift  255

State 68:
          rbracket ::= * RBRACKET
          blockStmt ::= lbracket return_stmt SEMICOLON * rbracket

                      RBRACKET shift  258
                      rbracket shift  257

State 69:
          import_chunk ::= FROM NAME IMPORT * nameList_nonEmpty
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  268
             nameList_nonEmpty shift  177

State 70:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  44
                            LE shift  39
                            LT shift  38
                            GE shift  37
                            GT shift  36
                            NE shift  40
                         BITOR shift  47
                        BITXOR shift  46
                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                        PERIOD shift  157

State 71:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  47
                        BITXOR shift  46
                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                        RPAREN shift  235
                    LSQBRACKET shift  56
                        PERIOD shift  157

State 72:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  47
                        BITXOR shift  46
                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                    RSQBRACKET shift  221
                        PERIOD shift  157

State 73:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (99) assign_stmt ::= lvalue ASSIGN expr *

                         BITOR shift  47
                        BITXOR shift  46
                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                        PERIOD shift  157
                     {default} reduce 99

State 74:
     (45) exprList_nonEmpty ::= expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  47
                        BITXOR shift  46
                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                        PERIOD shift  157
                     {default} reduce 45

State 75:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (86) lexpr ::= expr GT expr *

                         BITOR shift  47
                        BITXOR shift  46
                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                        PERIOD shift  157
                     {default} reduce 86

State 76:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (85) lexpr ::= expr GE expr *

                         BITOR shift  47
                        BITXOR shift  46
                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                        PERIOD shift  157
                     {default} reduce 85

State 77:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (84) lexpr ::= expr LT expr *

                         BITOR shift  47
                        BITXOR shift  46
                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                        PERIOD shift  157
                     {default} reduce 84

State 78:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (83) lexpr ::= expr LE expr *

                         BITOR shift  47
                        BITXOR shift  46
                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                        PERIOD shift  157
                     {default} reduce 83

State 79:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (82) lexpr ::= expr NE expr *

                         BITOR shift  47
                        BITXOR shift  46
                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                        PERIOD shift  157
                     {default} reduce 82

State 80:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (81) lexpr ::= expr EQ expr *

                         BITOR shift  47
                        BITXOR shift  46
                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                        PERIOD shift  157
                     {default} reduce 81

State 81:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (53) fArgs_nonEmpty ::= expr *
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  47
                        BITXOR shift  46
                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                        PERIOD shift  157
                     {default} reduce 53

State 82:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lvalue ::= expr * LSQBRACKET NAME RSQBRACKET
          lvalue ::= expr * PERIOD NAME

                         BITOR shift  47
                        BITXOR shift  46
                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  57
                        PERIOD shift  159

State 83:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (76) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  46
                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                    LSQBRACKET reduce 76  ** Parsing conflict **
                        PERIOD shift  157
                        PERIOD reduce 76  ** Parsing conflict **
                     {default} reduce 76

State 84:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (77) expr ::= expr BITXOR expr *

                        BITAND shift  48
                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                    LSQBRACKET reduce 77  ** Parsing conflict **
                        PERIOD shift  157
                        PERIOD reduce 77  ** Parsing conflict **
                     {default} reduce 77

State 85:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (75) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  50
                        RSHIFT shift  49
                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                    LSQBRACKET reduce 75  ** Parsing conflict **
                        PERIOD shift  157
                        PERIOD reduce 75  ** Parsing conflict **
                     {default} reduce 75

State 86:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (74) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                    LSQBRACKET reduce 74  ** Parsing conflict **
                        PERIOD shift  157
                        PERIOD reduce 74  ** Parsing conflict **
                     {default} reduce 74

State 87:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (73) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  55
                         MINUS shift  54
                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                    LSQBRACKET reduce 73  ** Parsing conflict **
                        PERIOD shift  157
                        PERIOD reduce 73  ** Parsing conflict **
                     {default} reduce 73

State 88:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (69) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                    LSQBRACKET reduce 69  ** Parsing conflict **
                        PERIOD shift  157
                        PERIOD reduce 69  ** Parsing conflict **
                     {default} reduce 69

State 89:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
     (68) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  52
                      MULTIPLY shift  53
                           MOD shift  51
                    LSQBRACKET shift  56
                    LSQBRACKET reduce 68  ** Parsing conflict **
                        PERIOD shift  157
                        PERIOD reduce 68  ** Parsing conflict **
                     {default} reduce 68

State 90:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          for_header2 ::= for_header1 lexpr * SEMICOLON

                           LOR shift  25
                          LAND shift  26
                     SEMICOLON shift  200

State 91:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  25
                          LAND shift  26
                        RPAREN shift  209

State 92:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  25
                          LAND shift  26
                        RPAREN shift  212

State 93:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  25
                          LAND shift  26
                        RPAREN shift  215

State 94:
          expr ::= L2V LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  25
                          LAND shift  26
                        RPAREN shift  230

State 95:
     (51) expr ::= expr PERIOD NAME *
     (59) funcName ::= expr PERIOD NAME *
     (96) lvalue ::= expr PERIOD NAME *

                        ASSIGN reduce 96
                         COMMA reduce 96
                        LPAREN reduce 59
                     {default} reduce 51

State 96:
     (50) expr ::= NAME *
     (58) funcName ::= NAME *
     (94) lvalue ::= NAME *

                        ASSIGN reduce 94
                         COMMA reduce 94
                        LPAREN reduce 58
                     {default} reduce 50

State 97:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty * RPAREN

                         COMMA shift  33
                        RPAREN shift  193

State 98:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= foreach_opener nameList_nonEmpty * COLON exprList_nonEmpty RPAREN

                         COMMA shift  176
                         COLON shift  29

State 99:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
          for_header ::= for_header2 for_action_stmt_nonEmpty * RPAREN

                         COMMA shift  13
                        RPAREN shift  197

State 100:
          lvalueList_nonEmpty ::= lvalueList_nonEmpty * COMMA lvalue
          assign_stmt ::= lvalueList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  30
                         COMMA shift  31

State 101:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  32
                         COMMA shift  176

State 102:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  132
                    RSQBRACKET shift  131

State 103:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
     (91) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  34
                         COMMA shift  176
                         COMMA reduce 91  ** Parsing conflict **
                     {default} reduce 91

State 104:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (80) expr ::= BITNOT expr *

                    LSQBRACKET shift  56
                    LSQBRACKET reduce 80  ** Parsing conflict **
                        PERIOD shift  157
                        PERIOD reduce 80  ** Parsing conflict **
                     {default} reduce 80

State 105:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (79) expr ::= MINUS expr *

                    LSQBRACKET shift  56
                    LSQBRACKET reduce 79  ** Parsing conflict **
                        PERIOD shift  157
                        PERIOD reduce 79  ** Parsing conflict **
                     {default} reduce 79

State 106:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (78) expr ::= PLUS expr *

                    LSQBRACKET shift  56
                    LSQBRACKET reduce 78  ** Parsing conflict **
                        PERIOD shift  157
                        PERIOD reduce 78  ** Parsing conflict **
                     {default} reduce 78

State 107:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (72) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                    LSQBRACKET shift  56
                    LSQBRACKET reduce 72  ** Parsing conflict **
                        PERIOD shift  157
                        PERIOD reduce 72  ** Parsing conflict **
                     {default} reduce 72

State 108:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (71) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                    LSQBRACKET shift  56
                    LSQBRACKET reduce 71  ** Parsing conflict **
                        PERIOD shift  157
                        PERIOD reduce 71  ** Parsing conflict **
                     {default} reduce 71

State 109:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcName ::= expr * PERIOD NAME
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (70) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                    LSQBRACKET shift  56
                    LSQBRACKET reduce 70  ** Parsing conflict **
                        PERIOD shift  157
                        PERIOD reduce 70  ** Parsing conflict **
                     {default} reduce 70

State 110:
     (50) expr ::= NAME *
     (58) funcName ::= NAME *
          lvalue ::= expr LSQBRACKET NAME * RSQBRACKET

                        LPAREN reduce 58
                    RSQBRACKET shift  236
                    RSQBRACKET reduce 50  ** Parsing conflict **
                     {default} reduce 50

State 111:
          bodyStmt ::= funcexpr * SEMICOLON
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (61) expr ::= funcexpr *

                     SEMICOLON shift  248
                    LSQBRACKET shift  165
                    LSQBRACKET reduce 61  ** Parsing conflict **
                     {default} reduce 61

State 112:
          function_header ::= function_start LPAREN nameList_nonEmpty * RPAREN
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  176
                        RPAREN shift  266

State 113:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
     (91) vdef_stmt ::= VAR nameList_nonEmpty *

                         COMMA shift  176
                     {default} reduce 91

State 114:
          blockStmt ::= lbracket error * RBRACKET

                      RBRACKET shift  184

State 115:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  188

State 116:
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                        RPAREN shift  115

State 117:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  16

State 118:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (48) exprList ::= exprList_nonEmpty *

                         COMMA shift  33
                     {default} reduce 48

State 119:
          foreach_opener ::= FOREACH * LPAREN

                        LPAREN shift  194

State 120:
          for_header1 ::= for_opener for_init_stmt * SEMICOLON

                     SEMICOLON shift  201

State 121:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (119) for_init_stmt ::= for_init_stmt_nonEmpty *

                         COMMA shift  11
                     {default} reduce 119

State 122:
          for_opener ::= FOR * LPAREN

                        LPAREN shift  207

State 123:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  20

State 124:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  21

State 125:
          elif_start ::= ELSE * IF
    (107) else_header ::= ELSE *

                            IF shift  213
                            IF reduce 107 ** Parsing conflict **
                     {default} reduce 107

State 126:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  22

State 127:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (100) assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  33
                     {default} reduce 100

State 128:
     (97) lvalueList_nonEmpty ::= lvalue *
          assign_stmt ::= lvalue * ASSIGN expr

                        ASSIGN shift  35
                        ASSIGN reduce 97  ** Parsing conflict **
                     {default} reduce 97

State 129:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (93) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  33
                     {default} reduce 93

State 130:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (92) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  33
                     {default} reduce 92

State 131:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  219

State 132:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  220

State 133:
     (39) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  162
                    RSQBRACKET reduce 39  ** Parsing conflict **
                     {default} reduce 39

State 134:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  65

State 135:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (61) expr ::= funcexpr *

                    LSQBRACKET shift  134
                    LSQBRACKET reduce 61  ** Parsing conflict **
                     {default} reduce 61

State 136:
          funcexpr ::= funcName LPAREN fArgs * RPAREN

                        RPAREN shift  222

State 137:
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  224

State 138:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (57) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  28
                     {default} reduce 57

State 139:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  15

State 140:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (88) lexpr ::= lexpr LOR lexpr *

                          LAND shift  26
                     {default} reduce 88

State 141:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  231

State 142:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  141

State 143:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  142

State 144:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  232

State 145:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  144

State 146:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  145

State 147:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  233

State 148:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  147

State 149:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  148

State 150:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  234

State 151:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  150

State 152:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  151

State 153:
          expr ::= L2V * LPAREN lexpr RPAREN

                        LPAREN shift  27

State 154:
          funcexpr ::= funcName * LPAREN fArgs RPAREN

                        LPAREN shift  17

State 155:
     (50) expr ::= NAME *
     (58) funcName ::= NAME *

                        LPAREN reduce 58
                     {default} reduce 50

State 156:
     (51) expr ::= expr PERIOD NAME *
     (59) funcName ::= expr PERIOD NAME *

                        LPAREN reduce 59
                     {default} reduce 51

State 157:
          expr ::= expr PERIOD * NAME
          funcName ::= expr PERIOD * NAME

                          NAME shift  156

State 158:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (61) expr ::= funcexpr *

                    LSQBRACKET shift  165
                    LSQBRACKET reduce 61  ** Parsing conflict **
                     {default} reduce 61

State 159:
          expr ::= expr PERIOD * NAME
          funcName ::= expr PERIOD * NAME
          lvalue ::= expr PERIOD * NAME

                          NAME shift  95

State 160:
          bodyStmt ::= break_stmt * SEMICOLON

                     SEMICOLON shift  240

State 161:
          bodyStmt ::= continue_stmt * SEMICOLON

                     SEMICOLON shift  241

State 162:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  247

State 163:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  162

State 164:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  163

State 165:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  164

State 166:
          bodyStmt ::= assign_stmt * SEMICOLON

                     SEMICOLON shift  249

State 167:
          bodyStmt ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  250

State 168:
          bodyStmt ::= vdefAssign_stmt * SEMICOLON

                     SEMICOLON shift  251

State 169:
          bodyStmt ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  252

State 170:
          blockStmt ::= lbracket bodyStmtList return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  67

State 171:
          blockStmt ::= lbracket return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  68

State 172:
          stmt ::= return_stmt * SEMICOLON

                     SEMICOLON shift  261

State 173:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  263

State 174:
          function_header ::= function_start * LPAREN nameList_nonEmpty RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  59

State 175:
          function_start ::= FUNCTION * NAME

                          NAME shift  267

State 176:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  269

State 177:
      (7) import_chunk ::= FROM NAME IMPORT nameList_nonEmpty *
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  176
                     {default} reduce 7

State 178:
          import_chunk ::= FROM NAME * IMPORT nameList_nonEmpty

                        IMPORT shift  69

State 179:
          import_chunk ::= FROM * NAME IMPORT nameList_nonEmpty

                          NAME shift  178

State 180:
          chunk ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  270

State 181:
          chunk ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  271

State 182:
          chunk ::= import_chunk * SEMICOLON

                     SEMICOLON shift  273

State 183:
     (36) bodyStmtList ::= bodyStmt *

                     {default} reduce 36

State 184:
     (21) blockStmt ::= lbracket error RBRACKET *

                     {default} reduce 21

State 185:
    (109) if_stmt ::= if_block else_header stmt *

                     {default} reduce 109

State 186:
    (138) actions ::= actions action *

                     {default} reduce 138

State 187:
    (137) actions ::= action action *

                     {default} reduce 137

State 188:
    (136) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 136

State 189:
    (133) return_stmt ::= RETURN exprList *

                     {default} reduce 133

State 190:
    (132) break_stmt ::= BREAK *

                     {default} reduce 132

State 191:
    (131) continue_stmt ::= CONTINUE *

                     {default} reduce 131

State 192:
    (130) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 130

State 193:
    (129) foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN *

                     {default} reduce 129

State 194:
    (128) foreach_opener ::= FOREACH LPAREN *

                     {default} reduce 128

State 195:
    (127) for_stmt ::= for_header stmt *

                     {default} reduce 127

State 196:
    (126) for_header ::= for_header2 RPAREN *

                     {default} reduce 126

State 197:
    (125) for_header ::= for_header2 for_action_stmt_nonEmpty RPAREN *

                     {default} reduce 125

State 198:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (122) for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty *

                     {default} reduce 122

State 199:
    (121) for_action_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 121

State 200:
    (124) for_header2 ::= for_header1 lexpr SEMICOLON *

                     {default} reduce 124

State 201:
    (123) for_header1 ::= for_opener for_init_stmt SEMICOLON *

                     {default} reduce 123

State 202:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (118) for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty *

                     {default} reduce 118

State 203:
    (117) for_init_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 117

State 204:
    (116) for_init_stmt_nonEmpty ::= cdef_stmt *

                     {default} reduce 116

State 205:
    (115) for_init_stmt_nonEmpty ::= vdefAssign_stmt *

                     {default} reduce 115

State 206:
    (114) for_init_stmt_nonEmpty ::= vdef_stmt *

                     {default} reduce 114

State 207:
    (113) for_opener ::= FOR LPAREN *

                     {default} reduce 113

State 208:
    (112) while_stmt ::= while_header stmt *

                     {default} reduce 112

State 209:
    (111) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 111

State 210:
    (110) while_start ::= WHILE *

                     {default} reduce 110

State 211:
    (106) if_block ::= if_block elif_header stmt *

                     {default} reduce 106

State 212:
    (105) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 105

State 213:
    (104) elif_start ::= ELSE IF *

                     {default} reduce 104

State 214:
    (103) if_block ::= if_header stmt *

                     {default} reduce 103

State 215:
    (102) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 102

State 216:
    (101) if_start ::= IF *

                     {default} reduce 101

State 217:
     (98) lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA lvalue *

                     {default} reduce 98

State 218:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (46) exprList_nonEmpty ::= exprList_nonEmpty COMMA exprList_nonEmpty *

                     {default} reduce 46

State 219:
     (43) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 43

State 220:
     (40) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 40

State 221:
     (52) expr ::= expr LSQBRACKET expr RSQBRACKET *

                     {default} reduce 52

State 222:
     (60) funcexpr ::= funcName LPAREN fArgs RPAREN *

                     {default} reduce 60

State 223:
    (135) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 135

State 224:
    (134) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 134

State 225:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (55) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArgs_nonEmpty *

                     {default} reduce 55

State 226:
     (54) fArgs_nonEmpty ::= STRING *

                     {default} reduce 54

State 227:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (89) lexpr ::= LNOT lexpr *
     (90) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 90

State 228:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (89) lexpr ::= LNOT lexpr *

                     {default} reduce 89

State 229:
          lexpr ::= lexpr * LAND lexpr
     (87) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 87

State 230:
     (63) expr ::= L2V LPAREN lexpr RPAREN *

                     {default} reduce 63

State 231:
     (67) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 67

State 232:
     (66) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 66

State 233:
     (65) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 65

State 234:
     (64) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 64

State 235:
     (62) expr ::= LPAREN expr RPAREN *

                     {default} reduce 62

State 236:
     (95) lvalue ::= expr LSQBRACKET NAME RSQBRACKET *

                     {default} reduce 95

State 237:
     (49) expr ::= NUMBER *

                     {default} reduce 49

State 238:
     (38) bodyStmtList ::= bodyStmtList error *

                     {default} reduce 38

State 239:
     (37) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 37

State 240:
     (35) bodyStmt ::= break_stmt SEMICOLON *

                     {default} reduce 35

State 241:
     (34) bodyStmt ::= continue_stmt SEMICOLON *

                     {default} reduce 34

State 242:
     (33) bodyStmt ::= foreach_stmt *

                     {default} reduce 33

State 243:
     (32) bodyStmt ::= for_stmt *

                     {default} reduce 32

State 244:
     (31) bodyStmt ::= while_stmt *

                     {default} reduce 31

State 245:
     (30) bodyStmt ::= if_stmt *

                     {default} reduce 30

State 246:
     (29) bodyStmt ::= actionStmt *

                     {default} reduce 29

State 247:
     (44) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 44

State 248:
     (28) bodyStmt ::= funcexpr SEMICOLON *

                     {default} reduce 28

State 249:
     (27) bodyStmt ::= assign_stmt SEMICOLON *

                     {default} reduce 27

State 250:
     (26) bodyStmt ::= cdef_stmt SEMICOLON *

                     {default} reduce 26

State 251:
     (25) bodyStmt ::= vdefAssign_stmt SEMICOLON *

                     {default} reduce 25

State 252:
     (24) bodyStmt ::= vdef_stmt SEMICOLON *

                     {default} reduce 24

State 253:
     (23) bodyStmt ::= SEMICOLON *

                     {default} reduce 23

State 254:
     (22) bodyStmt ::= blockStmt *

                     {default} reduce 22

State 255:
     (20) blockStmt ::= lbracket bodyStmtList return_stmt SEMICOLON rbracket *

                     {default} reduce 20

State 256:
     (19) blockStmt ::= lbracket bodyStmtList rbracket *

                     {default} reduce 19

State 257:
     (18) blockStmt ::= lbracket return_stmt SEMICOLON rbracket *

                     {default} reduce 18

State 258:
     (16) rbracket ::= RBRACKET *

                     {default} reduce 16

State 259:
     (17) blockStmt ::= lbracket RBRACKET *

                     {default} reduce 17

State 260:
     (15) lbracket ::= LBRACKET *

                     {default} reduce 15

State 261:
     (14) stmt ::= return_stmt SEMICOLON *

                     {default} reduce 14

State 262:
     (13) stmt ::= bodyStmt *

                     {default} reduce 13

State 263:
     (12) stmt ::= error SEMICOLON *

                     {default} reduce 12

State 264:
     (11) fdef_chunk ::= function_header stmt *

                     {default} reduce 11

State 265:
     (10) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 10

State 266:
      (9) function_header ::= function_start LPAREN nameList_nonEmpty RPAREN *

                     {default} reduce 9

State 267:
      (8) function_start ::= FUNCTION NAME *

                     {default} reduce 8

State 268:
     (41) nameList_nonEmpty ::= NAME *

                     {default} reduce 41

State 269:
     (42) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 42

State 270:
      (6) chunk ::= cdef_stmt SEMICOLON *

                     {default} reduce 6

State 271:
      (5) chunk ::= vdef_stmt SEMICOLON *

                     {default} reduce 5

State 272:
      (4) chunk ::= fdef_chunk *

                     {default} reduce 4

State 273:
      (3) chunk ::= import_chunk SEMICOLON *

                     {default} reduce 3

State 274:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: ASSIGN
    2: COMMA
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: SEMICOLON
   28: FROM
   29: IMPORT
   30: FUNCTION
   31: LPAREN
   32: RPAREN
   33: LBRACKET
   34: RBRACKET
   35: LSQBRACKET
   36: RSQBRACKET
   37: PERIOD
   38: STRING
   39: FUNCCALL
   40: L2V
   41: MAPSTRING
   42: UNIT
   43: SWITCH
   44: LOCATION
   45: VAR
   46: CONST
   47: IF
   48: ELSE
   49: WHILE
   50: FOR
   51: FOREACH
   52: COLON
   53: CONTINUE
   54: BREAK
   55: RETURN
   56: CONDITIONNAME
   57: ACTIONNAME
   58: error:
   59: nt:
   60: program: <lambda> FROM FUNCTION VAR CONST
   61: chunks: <lambda> FROM FUNCTION VAR CONST
   62: chunk: FROM FUNCTION VAR CONST
   63: import_chunk: FROM
   64: fdef_chunk: FUNCTION
   65: vdef_stmt: VAR
   66: cdef_stmt: CONST
   67: nameList_nonEmpty: NAME
   68: function_start: FUNCTION
   69: function_header: FUNCTION
   70: stmt: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST IF WHILE FOR FOREACH CONTINUE BREAK RETURN ACTIONNAME
   71: bodyStmt: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST IF WHILE FOR FOREACH CONTINUE BREAK ACTIONNAME
   72: return_stmt: RETURN
   73: lbracket: LBRACKET
   74: rbracket: RBRACKET
   75: blockStmt: LBRACKET
   76: bodyStmtList: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST IF WHILE FOR FOREACH CONTINUE BREAK ACTIONNAME
   77: vdefAssign_stmt: VAR
   78: assign_stmt: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   79: funcexpr: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   80: actionStmt: ACTIONNAME
   81: if_stmt: IF
   82: while_stmt: WHILE
   83: for_stmt: FOR
   84: foreach_stmt: FOREACH
   85: continue_stmt: CONTINUE
   86: break_stmt: BREAK
   87: numList_nonEmpty: NUMBER
   88: exprList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   89: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   90: exprList: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   91: fArgs_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN STRING L2V MAPSTRING UNIT SWITCH LOCATION
   92: fArgs: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN STRING L2V MAPSTRING UNIT SWITCH LOCATION
   93: funcName: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   94: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
   95: lvalue: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   96: lvalueList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   97: if_start: IF
   98: if_header: IF
   99: if_block: IF
  100: elif_start: ELSE
  101: elif_header: ELSE
  102: else_header: ELSE
  103: while_start: WHILE
  104: while_header: WHILE
  105: for_opener: FOR
  106: for_init_stmt_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST
  107: for_init_stmt: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST
  108: for_action_stmt_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
  109: for_header1: FOR
  110: for_header2: FOR
  111: for_header: FOR
  112: foreach_opener: FOREACH
  113: foreach_header: FOREACH
  114: action: ACTIONNAME
  115: actions: ACTIONNAME
