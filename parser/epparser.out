State 0:
          program ::= * chunks
    (107) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  9
                     {default} reduce 107

State 1:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          stmtList ::= * stmt
          stmtList ::= * stmtList stmt
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= blockStart * stmtList RBRACKET
          block ::= * blockStart error RBRACKET
          block ::= blockStart * error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  52
                     SEMICOLON shift  164
                         CONST shift  53
                      LBRACKET shift  192
                            IF shift  188
                         WHILE shift  177
                           FOR shift  102
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  20
                    ACTIONNAME shift  98
                         error shift  80
                 nameListMulti shift  88
                      funcexpr shift  95
                     vdef_stmt shift  163
               vdefAssign_stmt shift  162
                     cdef_stmt shift  161
                   assign_stmt shift  160
              assignMulti_stmt shift  159
                      stmtList shift  2
                          stmt shift  191
                    blockStart shift  1
                         block shift  150
                      if_start shift  108
                     if_header shift  7
                      if_block shift  27
                       if_stmt shift  156
                   while_start shift  103
                  while_header shift  5
                    while_stmt shift  155
                foreach_header shift  4
                  foreach_stmt shift  154
                 continue_stmt shift  153
                    break_stmt shift  152
                   return_stmt shift  151
                        action shift  56
                       actions shift  55
                    actionStmt shift  157

State 2:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          stmtList ::= stmtList * stmt
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= blockStart stmtList * RBRACKET
          block ::= * blockStart error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  52
                     SEMICOLON shift  164
                         CONST shift  53
                      LBRACKET shift  192
                      RBRACKET shift  189
                            IF shift  188
                         WHILE shift  177
                           FOR shift  102
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  20
                    ACTIONNAME shift  98
                         error shift  96
                 nameListMulti shift  88
                      funcexpr shift  95
                     vdef_stmt shift  163
               vdefAssign_stmt shift  162
                     cdef_stmt shift  161
                   assign_stmt shift  160
              assignMulti_stmt shift  159
                          stmt shift  190
                    blockStart shift  1
                         block shift  150
                      if_start shift  108
                     if_header shift  7
                      if_block shift  27
                       if_stmt shift  156
                   while_start shift  103
                  while_header shift  5
                    while_stmt shift  155
                foreach_header shift  4
                  foreach_stmt shift  154
                 continue_stmt shift  153
                    break_stmt shift  152
                   return_stmt shift  151
                        action shift  56
                       actions shift  55
                    actionStmt shift  157

State 3:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= * blockStart error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  52
                     SEMICOLON shift  164
                         CONST shift  53
                      LBRACKET shift  192
                            IF shift  188
                         WHILE shift  177
                           FOR shift  102
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  20
                    ACTIONNAME shift  98
                         error shift  96
                 nameListMulti shift  88
                      funcexpr shift  95
                     vdef_stmt shift  163
               vdefAssign_stmt shift  162
                     cdef_stmt shift  161
                   assign_stmt shift  160
              assignMulti_stmt shift  159
                          stmt shift  149
                    blockStart shift  1
                         block shift  150
                      if_start shift  108
                     if_header shift  7
                      if_block shift  27
                       if_stmt shift  156
                   while_start shift  103
                  while_header shift  5
                    while_stmt shift  155
                foreach_header shift  4
                  foreach_stmt shift  154
                 continue_stmt shift  153
                    break_stmt shift  152
                   return_stmt shift  151
                        action shift  56
                       actions shift  55
                    actionStmt shift  157

State 4:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= * blockStart error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  52
                     SEMICOLON shift  164
                         CONST shift  53
                      LBRACKET shift  192
                            IF shift  188
                         WHILE shift  177
                           FOR shift  102
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  20
                    ACTIONNAME shift  98
                         error shift  96
                 nameListMulti shift  88
                      funcexpr shift  95
                     vdef_stmt shift  163
               vdefAssign_stmt shift  162
                     cdef_stmt shift  161
                   assign_stmt shift  160
              assignMulti_stmt shift  159
                          stmt shift  173
                    blockStart shift  1
                         block shift  150
                      if_start shift  108
                     if_header shift  7
                      if_block shift  27
                       if_stmt shift  156
                   while_start shift  103
                  while_header shift  5
                    while_stmt shift  155
                foreach_header shift  4
                  foreach_stmt shift  154
                 continue_stmt shift  153
                    break_stmt shift  152
                   return_stmt shift  151
                        action shift  56
                       actions shift  55
                    actionStmt shift  157

State 5:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= * blockStart error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  52
                     SEMICOLON shift  164
                         CONST shift  53
                      LBRACKET shift  192
                            IF shift  188
                         WHILE shift  177
                           FOR shift  102
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  20
                    ACTIONNAME shift  98
                         error shift  96
                 nameListMulti shift  88
                      funcexpr shift  95
                     vdef_stmt shift  163
               vdefAssign_stmt shift  162
                     cdef_stmt shift  161
                   assign_stmt shift  160
              assignMulti_stmt shift  159
                          stmt shift  175
                    blockStart shift  1
                         block shift  150
                      if_start shift  108
                     if_header shift  7
                      if_block shift  27
                       if_stmt shift  156
                   while_start shift  103
                  while_header shift  5
                    while_stmt shift  155
                foreach_header shift  4
                  foreach_stmt shift  154
                 continue_stmt shift  153
                    break_stmt shift  152
                   return_stmt shift  151
                        action shift  56
                       actions shift  55
                    actionStmt shift  157

State 6:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= * blockStart error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  52
                     SEMICOLON shift  164
                         CONST shift  53
                      LBRACKET shift  192
                            IF shift  188
                         WHILE shift  177
                           FOR shift  102
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  20
                    ACTIONNAME shift  98
                         error shift  96
                 nameListMulti shift  88
                      funcexpr shift  95
                     vdef_stmt shift  163
               vdefAssign_stmt shift  162
                     cdef_stmt shift  161
                   assign_stmt shift  160
              assignMulti_stmt shift  159
                          stmt shift  178
                    blockStart shift  1
                         block shift  150
                      if_start shift  108
                     if_header shift  7
                      if_block shift  27
                       if_stmt shift  156
                   while_start shift  103
                  while_header shift  5
                    while_stmt shift  155
                foreach_header shift  4
                  foreach_stmt shift  154
                 continue_stmt shift  153
                    break_stmt shift  152
                   return_stmt shift  151
                        action shift  56
                       actions shift  55
                    actionStmt shift  157

State 7:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= * blockStart error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  52
                     SEMICOLON shift  164
                         CONST shift  53
                      LBRACKET shift  192
                            IF shift  188
                         WHILE shift  177
                           FOR shift  102
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  20
                    ACTIONNAME shift  98
                         error shift  96
                 nameListMulti shift  88
                      funcexpr shift  95
                     vdef_stmt shift  163
               vdefAssign_stmt shift  162
                     cdef_stmt shift  161
                   assign_stmt shift  160
              assignMulti_stmt shift  159
                          stmt shift  181
                    blockStart shift  1
                         block shift  150
                      if_start shift  108
                     if_header shift  7
                      if_block shift  27
                       if_stmt shift  156
                   while_start shift  103
                  while_header shift  5
                    while_stmt shift  155
                foreach_header shift  4
                  foreach_stmt shift  154
                 continue_stmt shift  153
                    break_stmt shift  152
                   return_stmt shift  151
                        action shift  56
                       actions shift  55
                    actionStmt shift  157

State 8:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= * blockStart error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          fdef_chunk ::= function_header * stmt
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  52
                     SEMICOLON shift  164
                         CONST shift  53
                      LBRACKET shift  192
                            IF shift  188
                         WHILE shift  177
                           FOR shift  102
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  20
                    ACTIONNAME shift  98
                         error shift  96
                 nameListMulti shift  88
                      funcexpr shift  95
                     vdef_stmt shift  163
               vdefAssign_stmt shift  162
                     cdef_stmt shift  161
                   assign_stmt shift  160
              assignMulti_stmt shift  159
                          stmt shift  147
                    blockStart shift  1
                         block shift  150
                      if_start shift  108
                     if_header shift  7
                      if_block shift  27
                       if_stmt shift  156
                   while_start shift  103
                  while_header shift  5
                    while_stmt shift  155
                foreach_header shift  4
                  foreach_stmt shift  154
                 continue_stmt shift  153
                    break_stmt shift  152
                   return_stmt shift  151
                        action shift  56
                       actions shift  55
                    actionStmt shift  157

State 9:
      (0) program ::= chunks *
          vdef_stmt ::= * VAR nameList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          import_chunk ::= * FROM NAME IMPORT nameList
          chunk ::= * import_chunk
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * cdef_stmt
          chunks ::= chunks * chunk

                             $ reduce 0
                           VAR shift  54
                         CONST shift  53
                      FUNCTION shift  111
                          FROM shift  94
                     vdef_stmt shift  143
                     cdef_stmt shift  142
                function_start shift  110
               function_header shift  8
                    fdef_chunk shift  144
                  import_chunk shift  145
                         chunk shift  141

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  14
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                 CONDITIONNAME shift  106
                      funcexpr shift  128
                          expr shift  58
                         lexpr shift  74

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  14
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                 CONDITIONNAME shift  106
                      funcexpr shift  128
                          expr shift  58
                         lexpr shift  75

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        STRING shift  204
                        LPAREN shift  46
                        RPAREN shift  183
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  67
                         fArgs shift  84

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  13
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                 CONDITIONNAME shift  106
                      funcexpr shift  128
                          expr shift  58
                         lexpr shift  185

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  13
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                 CONDITIONNAME shift  106
                      funcexpr shift  128
                          expr shift  58
                         lexpr shift  186

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  14
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                 CONDITIONNAME shift  106
                      funcexpr shift  128
                          expr shift  58
                         lexpr shift  107

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  14
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                 CONDITIONNAME shift  106
                      funcexpr shift  128
                          expr shift  58
                         lexpr shift  187

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  14
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                 CONDITIONNAME shift  106
                      funcexpr shift  128
                          expr shift  58
                         lexpr shift  76

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= NAME LPAREN * fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          funcexpr ::= NAME LPAREN * RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        STRING shift  204
                        LPAREN shift  46
                        RPAREN shift  201
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  67
                         fArgs shift  90

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        STRING shift  204
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  67
                         fArgs shift  81

State 20:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * SEMICOLON
          return_stmt ::= RETURN * exprList SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                     SEMICOLON shift  169
                      exprList shift  82
                      funcexpr shift  134
                          expr shift  68

State 21:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          fArgs ::= fArgs COMMA * fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        STRING shift  204
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  67
                         fArgs shift  203

State 22:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= FOR LPAREN nameList COLON * exprList RPAREN

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      exprList shift  83
                      funcexpr shift  134
                          expr shift  68

State 23:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      exprList shift  85
                      funcexpr shift  134
                          expr shift  68

State 24:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assignMulti_stmt ::= nameListMulti ASSIGN * exprList SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      exprList shift  87
                      funcexpr shift  134
                          expr shift  68

State 25:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          exprList ::= exprList COMMA * exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      exprList shift  200
                      funcexpr shift  134
                          expr shift  68

State 26:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      exprList shift  89
                      funcexpr shift  134
                          expr shift  68

State 27:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
     (64) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  105
                          ELSE reduce 64  ** Parsing conflict **
                    elif_start shift  104
                   elif_header shift  6
                   else_header shift  3
                     {default} reduce 64

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  61

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  62

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  63

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  64

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  65

State 33:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  66

State 34:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= NAME ASSIGN * expr SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  59

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  205

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  206

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  207

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  70

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  69

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  71

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  72

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  73

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  208

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  209

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  210

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  60

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  79

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  216
                          NAME shift  124
                        LPAREN shift  46
                     MAPSTRING shift  123
                          UNIT shift  120
                        SWITCH shift  117
                      LOCATION shift  114
                      funcexpr shift  128
                          expr shift  78

State 49:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          function_header ::= function_start LPAREN * nameList RPAREN
          function_header ::= function_start LPAREN * RPAREN

                          NAME shift  140
                        RPAREN shift  196
                 nameListMulti shift  138
                      nameList shift  109

State 50:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          import_chunk ::= FROM NAME IMPORT * nameList

                          NAME shift  140
                 nameListMulti shift  138
                      nameList shift  146

State 51:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          foreach_header ::= FOR LPAREN * nameList COLON exprList RPAREN

                          NAME shift  140
                 nameListMulti shift  138
                      nameList shift  101

State 52:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          vdef_stmt ::= VAR * nameList SEMICOLON
          vdefAssign_stmt ::= VAR * nameList ASSIGN exprList SEMICOLON

                          NAME shift  140
                 nameListMulti shift  138
                      nameList shift  86

State 53:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          cdef_stmt ::= CONST * nameList ASSIGN exprList SEMICOLON

                          NAME shift  140
                 nameListMulti shift  138
                      nameList shift  135

State 54:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          vdef_stmt ::= VAR * nameList SEMICOLON

                          NAME shift  140
                 nameListMulti shift  138
                      nameList shift  136

State 55:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
     (85) actionStmt ::= actions *

                    ACTIONNAME shift  98
                    ACTIONNAME reduce 85  ** Parsing conflict **
                        action shift  166
                     {default} reduce 85

State 56:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
     (84) actionStmt ::= action *

                    ACTIONNAME shift  98
                    ACTIONNAME reduce 84  ** Parsing conflict **
                        action shift  167
                     {default} reduce 84

State 57:
          numList ::= * NUMBER COMMA NUMBER
          numList ::= * numList COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET * numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  92
                       numList shift  91

State 58:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  33
                            LE shift  31
                            LT shift  30
                            GE shift  29
                            GT shift  28
                            NE shift  32
                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43

State 59:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          assign_stmt ::= NAME ASSIGN expr * SEMICOLON

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     SEMICOLON shift  195

State 60:
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                        RPAREN shift  215

State 61:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (42) lexpr ::= expr GT expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 42

State 62:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (41) lexpr ::= expr GE expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 41

State 63:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (40) lexpr ::= expr LT expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 40

State 64:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (39) lexpr ::= expr LE expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 39

State 65:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (38) lexpr ::= expr NE expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 38

State 66:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (37) lexpr ::= expr EQ expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 37

State 67:
     (13) fArgs ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 13

State 68:
      (9) exprList ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 9

State 69:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (32) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 32

State 70:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (33) expr ::= expr BITXOR expr *

                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 33

State 71:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (31) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 31

State 72:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (30) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 30

State 73:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (29) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 29

State 74:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  15
                          LAND shift  16
                        RPAREN shift  176

State 75:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  15
                          LAND shift  16
                        RPAREN shift  179

State 76:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  15
                          LAND shift  16
                        RPAREN shift  182

State 77:
          nameListMulti ::= NAME * COMMA NAME
          funcexpr ::= NAME * LPAREN fArgs RPAREN
          funcexpr ::= NAME * LPAREN RPAREN
          assign_stmt ::= NAME * ASSIGN expr SEMICOLON

                         COMMA shift  139
                        ASSIGN shift  34
                        LPAREN shift  18

State 78:
          expr ::= expr * PLUS expr
     (24) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 24

State 79:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (25) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 25

State 80:
          block ::= blockStart error * RBRACKET
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  165
                      RBRACKET shift  148

State 81:
          fArgs ::= fArgs * COMMA fArgs
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                         COMMA shift  21
                        RPAREN shift  97

State 82:
          exprList ::= exprList * COMMA exprList
          return_stmt ::= RETURN exprList * SEMICOLON

                         COMMA shift  25
                     SEMICOLON shift  170

State 83:
          exprList ::= exprList * COMMA exprList
          foreach_header ::= FOR LPAREN nameList COLON exprList * RPAREN

                         COMMA shift  25
                        RPAREN shift  174

State 84:
          fArgs ::= fArgs * COMMA fArgs
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                         COMMA shift  21
                        RPAREN shift  184

State 85:
          exprList ::= exprList * COMMA exprList
          vdefAssign_stmt ::= VAR nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  25
                     SEMICOLON shift  193

State 86:
          vdef_stmt ::= VAR nameList * SEMICOLON
          vdefAssign_stmt ::= VAR nameList * ASSIGN exprList SEMICOLON

                        ASSIGN shift  23
                     SEMICOLON shift  221

State 87:
          exprList ::= exprList * COMMA exprList
          assignMulti_stmt ::= nameListMulti ASSIGN exprList * SEMICOLON

                         COMMA shift  25
                     SEMICOLON shift  194

State 88:
          nameListMulti ::= nameListMulti * COMMA NAME
          assignMulti_stmt ::= nameListMulti * ASSIGN exprList SEMICOLON

                         COMMA shift  137
                        ASSIGN shift  24

State 89:
          exprList ::= exprList * COMMA exprList
          cdef_stmt ::= CONST nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  25
                     SEMICOLON shift  199

State 90:
          fArgs ::= fArgs * COMMA fArgs
          funcexpr ::= NAME LPAREN fArgs * RPAREN

                         COMMA shift  21
                        RPAREN shift  202

State 91:
          numList ::= numList * COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList * RSQBRACKET RSQBRACKET

                         COMMA shift  130
                    RSQBRACKET shift  129

State 92:
          numList ::= NUMBER * COMMA NUMBER
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                         COMMA shift  132
                    RSQBRACKET shift  131

State 93:
          import_chunk ::= FROM NAME * IMPORT nameList

                        IMPORT shift  50

State 94:
          import_chunk ::= FROM * NAME IMPORT nameList

                          NAME shift  93

State 95:
          stmt ::= funcexpr * SEMICOLON

                     SEMICOLON shift  158

State 96:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  165

State 97:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  168

State 98:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  19

State 99:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  171

State 100:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  172

State 101:
          foreach_header ::= FOR LPAREN nameList * COLON exprList RPAREN

                         COLON shift  22

State 102:
          foreach_header ::= FOR * LPAREN nameList COLON exprList RPAREN

                        LPAREN shift  51

State 103:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  10

State 104:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  11

State 105:
          elif_start ::= ELSE * IF
     (63) else_header ::= ELSE *

                            IF shift  180
                            IF reduce 63  ** Parsing conflict **
                     {default} reduce 63

State 106:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  12

State 107:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (44) lexpr ::= lexpr LOR lexpr *

                          LAND shift  16
                     {default} reduce 44

State 108:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  17

State 109:
          function_header ::= function_start LPAREN nameList * RPAREN

                        RPAREN shift  197

State 110:
          function_header ::= function_start * LPAREN nameList RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  49

State 111:
          function_start ::= FUNCTION * NAME

                          NAME shift  198

State 112:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  211

State 113:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  112

State 114:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  113

State 115:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  212

State 116:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  115

State 117:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  116

State 118:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  213

State 119:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  118

State 120:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  119

State 121:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  214

State 122:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  121

State 123:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  122

State 124:
     (12) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
          funcexpr ::= NAME * LPAREN RPAREN

                        LPAREN shift  18
                     {default} reduce 12

State 125:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  131

State 126:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  125

State 127:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  126

State 128:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (18) expr ::= funcexpr *

                    LSQBRACKET shift  127
                     {default} reduce 18

State 129:
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  217

State 130:
          numList ::= numList COMMA * NUMBER

                        NUMBER shift  218

State 131:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  219

State 132:
          numList ::= NUMBER COMMA * NUMBER

                        NUMBER shift  220

State 133:
          exprList ::= funcexpr LSQBRACKET * LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  57

State 134:
          exprList ::= funcexpr * LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (18) expr ::= funcexpr *

                    LSQBRACKET shift  133
                     {default} reduce 18

State 135:
          cdef_stmt ::= CONST nameList * ASSIGN exprList SEMICOLON

                        ASSIGN shift  26

State 136:
          vdef_stmt ::= VAR nameList * SEMICOLON

                     SEMICOLON shift  221

State 137:
          nameListMulti ::= nameListMulti COMMA * NAME

                          NAME shift  222

State 138:
          nameListMulti ::= nameListMulti * COMMA NAME
      (6) nameList ::= nameListMulti *

                         COMMA shift  137
                     {default} reduce 6

State 139:
          nameListMulti ::= NAME COMMA * NAME

                          NAME shift  223

State 140:
          nameListMulti ::= NAME * COMMA NAME
      (5) nameList ::= NAME *

                         COMMA shift  139
                     {default} reduce 5

State 141:
    (108) chunks ::= chunks chunk *

                     {default} reduce 108

State 142:
    (106) chunk ::= cdef_stmt *

                     {default} reduce 106

State 143:
    (105) chunk ::= vdef_stmt *

                     {default} reduce 105

State 144:
    (104) chunk ::= fdef_chunk *

                     {default} reduce 104

State 145:
    (103) chunk ::= import_chunk *

                     {default} reduce 103

State 146:
    (102) import_chunk ::= FROM NAME IMPORT nameList *

                     {default} reduce 102

State 147:
     (76) fdef_chunk ::= function_header stmt *

                     {default} reduce 76

State 148:
     (56) block ::= blockStart error RBRACKET *

                     {default} reduce 56

State 149:
     (65) if_stmt ::= if_block else_header stmt *

                     {default} reduce 65

State 150:
    (101) stmt ::= block *

                     {default} reduce 101

State 151:
    (100) stmt ::= return_stmt *

                     {default} reduce 100

State 152:
     (99) stmt ::= break_stmt *

                     {default} reduce 99

State 153:
     (98) stmt ::= continue_stmt *

                     {default} reduce 98

State 154:
     (97) stmt ::= foreach_stmt *

                     {default} reduce 97

State 155:
     (96) stmt ::= while_stmt *

                     {default} reduce 96

State 156:
     (95) stmt ::= if_stmt *

                     {default} reduce 95

State 157:
     (94) stmt ::= actionStmt *

                     {default} reduce 94

State 158:
     (93) stmt ::= funcexpr SEMICOLON *

                     {default} reduce 93

State 159:
     (92) stmt ::= assignMulti_stmt *

                     {default} reduce 92

State 160:
     (91) stmt ::= assign_stmt *

                     {default} reduce 91

State 161:
     (90) stmt ::= cdef_stmt *

                     {default} reduce 90

State 162:
     (89) stmt ::= vdefAssign_stmt *

                     {default} reduce 89

State 163:
     (88) stmt ::= vdef_stmt *

                     {default} reduce 88

State 164:
     (87) stmt ::= SEMICOLON *

                     {default} reduce 87

State 165:
     (86) stmt ::= error SEMICOLON *

                     {default} reduce 86

State 166:
     (83) actions ::= actions action *

                     {default} reduce 83

State 167:
     (82) actions ::= action action *

                     {default} reduce 82

State 168:
     (81) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 81

State 169:
     (77) return_stmt ::= RETURN SEMICOLON *

                     {default} reduce 77

State 170:
     (78) return_stmt ::= RETURN exprList SEMICOLON *

                     {default} reduce 78

State 171:
     (72) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 72

State 172:
     (71) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 71

State 173:
     (70) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 70

State 174:
     (69) foreach_header ::= FOR LPAREN nameList COLON exprList RPAREN *

                     {default} reduce 69

State 175:
     (68) while_stmt ::= while_header stmt *

                     {default} reduce 68

State 176:
     (67) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 67

State 177:
     (66) while_start ::= WHILE *

                     {default} reduce 66

State 178:
     (62) if_block ::= if_block elif_header stmt *

                     {default} reduce 62

State 179:
     (61) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 61

State 180:
     (60) elif_start ::= ELSE IF *

                     {default} reduce 60

State 181:
     (59) if_block ::= if_header stmt *

                     {default} reduce 59

State 182:
     (58) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 58

State 183:
     (80) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 80

State 184:
     (79) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 79

State 185:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (45) lexpr ::= LNOT lexpr *
     (46) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 46

State 186:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (45) lexpr ::= LNOT lexpr *

                     {default} reduce 45

State 187:
          lexpr ::= lexpr * LAND lexpr
     (43) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 43

State 188:
     (57) if_start ::= IF *

                     {default} reduce 57

State 189:
     (55) block ::= blockStart stmtList RBRACKET *

                     {default} reduce 55

State 190:
     (53) stmtList ::= stmtList stmt *

                     {default} reduce 53

State 191:
     (52) stmtList ::= stmt *

                     {default} reduce 52

State 192:
     (54) blockStart ::= LBRACKET *

                     {default} reduce 54

State 193:
     (48) vdefAssign_stmt ::= VAR nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 48

State 194:
     (51) assignMulti_stmt ::= nameListMulti ASSIGN exprList SEMICOLON *

                     {default} reduce 51

State 195:
     (50) assign_stmt ::= NAME ASSIGN expr SEMICOLON *

                     {default} reduce 50

State 196:
     (75) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 75

State 197:
     (74) function_header ::= function_start LPAREN nameList RPAREN *

                     {default} reduce 74

State 198:
     (73) function_start ::= FUNCTION NAME *

                     {default} reduce 73

State 199:
     (49) cdef_stmt ::= CONST nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 49

State 200:
          exprList ::= exprList * COMMA exprList
     (10) exprList ::= exprList COMMA exprList *

                     {default} reduce 10

State 201:
     (17) funcexpr ::= NAME LPAREN RPAREN *

                     {default} reduce 17

State 202:
     (16) funcexpr ::= NAME LPAREN fArgs RPAREN *

                     {default} reduce 16

State 203:
          fArgs ::= fArgs * COMMA fArgs
     (15) fArgs ::= fArgs COMMA fArgs *

                     {default} reduce 15

State 204:
     (14) fArgs ::= STRING *

                     {default} reduce 14

State 205:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (36) expr ::= BITNOT expr *

                     {default} reduce 36

State 206:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (35) expr ::= MINUS expr *

                     {default} reduce 35

State 207:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (34) expr ::= PLUS expr *

                     {default} reduce 34

State 208:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (28) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 28

State 209:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (27) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 27

State 210:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (26) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 26

State 211:
     (23) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 23

State 212:
     (22) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 22

State 213:
     (21) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 21

State 214:
     (20) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 20

State 215:
     (19) expr ::= LPAREN expr RPAREN *

                     {default} reduce 19

State 216:
     (11) expr ::= NUMBER *

                     {default} reduce 11

State 217:
      (7) exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET *

                     {default} reduce 7

State 218:
      (2) numList ::= numList COMMA NUMBER *

                     {default} reduce 2

State 219:
      (8) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 8

State 220:
      (1) numList ::= NUMBER COMMA NUMBER *

                     {default} reduce 1

State 221:
     (47) vdef_stmt ::= VAR nameList SEMICOLON *

                     {default} reduce 47

State 222:
      (4) nameListMulti ::= nameListMulti COMMA NAME *

                     {default} reduce 4

State 223:
      (3) nameListMulti ::= NAME COMMA NAME *

                     {default} reduce 3

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: LSQBRACKET
   28: RSQBRACKET
   29: STRING
   30: LPAREN
   31: RPAREN
   32: FUNCCALL
   33: MAPSTRING
   34: UNIT
   35: SWITCH
   36: LOCATION
   37: VAR
   38: SEMICOLON
   39: CONST
   40: LBRACKET
   41: RBRACKET
   42: IF
   43: ELSE
   44: WHILE
   45: FOR
   46: COLON
   47: CONTINUE
   48: BREAK
   49: FUNCTION
   50: RETURN
   51: CONDITIONNAME
   52: ACTIONNAME
   53: FROM
   54: IMPORT
   55: error:
   56: nt:
   57: program: <lambda> VAR CONST FUNCTION FROM
   58: chunks: <lambda> VAR CONST FUNCTION FROM
   59: numList: NUMBER
   60: nameListMulti: NAME
   61: nameList: NAME
   62: exprList: PLUS MINUS BITNOT NUMBER NAME LPAREN MAPSTRING UNIT SWITCH LOCATION
   63: funcexpr: NAME
   64: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN MAPSTRING UNIT SWITCH LOCATION
   65: fArgs: PLUS MINUS BITNOT NUMBER NAME STRING LPAREN MAPSTRING UNIT SWITCH LOCATION
   66: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
   67: vdef_stmt: VAR
   68: vdefAssign_stmt: VAR
   69: cdef_stmt: CONST
   70: assign_stmt: NAME
   71: assignMulti_stmt: NAME
   72: stmtList: NAME VAR SEMICOLON CONST LBRACKET IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   73: stmt: NAME VAR SEMICOLON CONST LBRACKET IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   74: blockStart: LBRACKET
   75: block: LBRACKET
   76: if_start: IF
   77: if_header: IF
   78: if_block: IF
   79: elif_start: ELSE
   80: elif_header: ELSE
   81: else_header: ELSE
   82: if_stmt: IF
   83: while_start: WHILE
   84: while_header: WHILE
   85: while_stmt: WHILE
   86: foreach_header: FOR
   87: foreach_stmt: FOR
   88: continue_stmt: CONTINUE
   89: break_stmt: BREAK
   90: function_start: FUNCTION
   91: function_header: FUNCTION
   92: fdef_chunk: FUNCTION
   93: return_stmt: RETURN
   94: action: ACTIONNAME
   95: actions: ACTIONNAME
   96: actionStmt: ACTIONNAME
   97: import_chunk: FROM
   98: chunk: VAR CONST FUNCTION FROM
