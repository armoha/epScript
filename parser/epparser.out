State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  10
                     {default} reduce 1

State 1:
          lbracket ::= * LBRACKET
          rbracket ::= * RBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= lbracket bodyStmtList * rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket bodyStmtList * return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (172) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  120
                     SEMICOLON shift  311
                        LPAREN shift  64
                      LBRACKET shift  318
                      RBRACKET shift  316
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  267
                         WHILE shift  261
                           FOR shift  168
                       FOREACH shift  163
                      CONTINUE shift  243
                         BREAK shift  242
                        RETURN shift  20
                         error shift  296
                     vdef_stmt shift  217
                     blockStmt shift  312
                      bodyStmt shift  297
                   return_stmt shift  218
                      lbracket shift  2
                      rbracket shift  314
               vdefAssign_stmt shift  216
                     cdef_stmt shift  215
                   assign_stmt shift  214
                      funcexpr shift  152
                    actionStmt shift  304
                       if_stmt shift  303
                    while_stmt shift  302
                      for_stmt shift  301
                  foreach_stmt shift  300
                 continue_stmt shift  209
                    break_stmt shift  208
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  172
                     if_header shift  8
                      if_block shift  40
                   while_start shift  169
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 172

State 2:
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= lbracket * RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket * return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= lbracket * bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket * bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmt ::= lbracket * error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= * error
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (172) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  120
                     SEMICOLON shift  311
                        LPAREN shift  64
                      LBRACKET shift  318
                      RBRACKET shift  317
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  267
                         WHILE shift  261
                           FOR shift  168
                       FOREACH shift  163
                      CONTINUE shift  243
                         BREAK shift  242
                        RETURN shift  20
                         error shift  159
                     vdef_stmt shift  217
                     blockStmt shift  312
                      bodyStmt shift  235
                   return_stmt shift  219
                      lbracket shift  2
                  bodyStmtList shift  1
               vdefAssign_stmt shift  216
                     cdef_stmt shift  215
                   assign_stmt shift  214
                      funcexpr shift  152
                    actionStmt shift  304
                       if_stmt shift  303
                    while_stmt shift  302
                      for_stmt shift  301
                  foreach_stmt shift  300
                 continue_stmt shift  209
                    break_stmt shift  208
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  172
                     if_header shift  8
                      if_block shift  40
                   while_start shift  169
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 172

State 3:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (172) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  120
                     SEMICOLON shift  311
                        LPAREN shift  64
                      LBRACKET shift  318
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  267
                         WHILE shift  261
                           FOR shift  168
                       FOREACH shift  163
                      CONTINUE shift  243
                         BREAK shift  242
                        RETURN shift  20
                         error shift  221
                     vdef_stmt shift  217
                     blockStmt shift  312
                          stmt shift  237
                      bodyStmt shift  320
                   return_stmt shift  220
                      lbracket shift  2
               vdefAssign_stmt shift  216
                     cdef_stmt shift  215
                   assign_stmt shift  214
                      funcexpr shift  152
                    actionStmt shift  304
                       if_stmt shift  303
                    while_stmt shift  302
                      for_stmt shift  301
                  foreach_stmt shift  300
                 continue_stmt shift  209
                    break_stmt shift  208
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  172
                     if_header shift  8
                      if_block shift  40
                   while_start shift  169
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 172

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (172) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  120
                     SEMICOLON shift  311
                        LPAREN shift  64
                      LBRACKET shift  318
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  267
                         WHILE shift  261
                           FOR shift  168
                       FOREACH shift  163
                      CONTINUE shift  243
                         BREAK shift  242
                        RETURN shift  20
                         error shift  221
                     vdef_stmt shift  217
                     blockStmt shift  312
                          stmt shift  244
                      bodyStmt shift  320
                   return_stmt shift  220
                      lbracket shift  2
               vdefAssign_stmt shift  216
                     cdef_stmt shift  215
                   assign_stmt shift  214
                      funcexpr shift  152
                    actionStmt shift  304
                       if_stmt shift  303
                    while_stmt shift  302
                      for_stmt shift  301
                  foreach_stmt shift  300
                 continue_stmt shift  209
                    break_stmt shift  208
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  172
                     if_header shift  8
                      if_block shift  40
                   while_start shift  169
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 172

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          for_stmt ::= for_header * stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (172) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  120
                     SEMICOLON shift  311
                        LPAREN shift  64
                      LBRACKET shift  318
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  267
                         WHILE shift  261
                           FOR shift  168
                       FOREACH shift  163
                      CONTINUE shift  243
                         BREAK shift  242
                        RETURN shift  20
                         error shift  221
                     vdef_stmt shift  217
                     blockStmt shift  312
                          stmt shift  247
                      bodyStmt shift  320
                   return_stmt shift  220
                      lbracket shift  2
               vdefAssign_stmt shift  216
                     cdef_stmt shift  215
                   assign_stmt shift  214
                      funcexpr shift  152
                    actionStmt shift  304
                       if_stmt shift  303
                    while_stmt shift  302
                      for_stmt shift  301
                  foreach_stmt shift  300
                 continue_stmt shift  209
                    break_stmt shift  208
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  172
                     if_header shift  8
                      if_block shift  40
                   while_start shift  169
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 172

State 6:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (172) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  120
                     SEMICOLON shift  311
                        LPAREN shift  64
                      LBRACKET shift  318
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  267
                         WHILE shift  261
                           FOR shift  168
                       FOREACH shift  163
                      CONTINUE shift  243
                         BREAK shift  242
                        RETURN shift  20
                         error shift  221
                     vdef_stmt shift  217
                     blockStmt shift  312
                          stmt shift  259
                      bodyStmt shift  320
                   return_stmt shift  220
                      lbracket shift  2
               vdefAssign_stmt shift  216
                     cdef_stmt shift  215
                   assign_stmt shift  214
                      funcexpr shift  152
                    actionStmt shift  304
                       if_stmt shift  303
                    while_stmt shift  302
                      for_stmt shift  301
                  foreach_stmt shift  300
                 continue_stmt shift  209
                    break_stmt shift  208
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  172
                     if_header shift  8
                      if_block shift  40
                   while_start shift  169
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 172

State 7:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (172) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  120
                     SEMICOLON shift  311
                        LPAREN shift  64
                      LBRACKET shift  318
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  267
                         WHILE shift  261
                           FOR shift  168
                       FOREACH shift  163
                      CONTINUE shift  243
                         BREAK shift  242
                        RETURN shift  20
                         error shift  221
                     vdef_stmt shift  217
                     blockStmt shift  312
                          stmt shift  262
                      bodyStmt shift  320
                   return_stmt shift  220
                      lbracket shift  2
               vdefAssign_stmt shift  216
                     cdef_stmt shift  215
                   assign_stmt shift  214
                      funcexpr shift  152
                    actionStmt shift  304
                       if_stmt shift  303
                    while_stmt shift  302
                      for_stmt shift  301
                  foreach_stmt shift  300
                 continue_stmt shift  209
                    break_stmt shift  208
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  172
                     if_header shift  8
                      if_block shift  40
                   while_start shift  169
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 172

State 8:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (172) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  120
                     SEMICOLON shift  311
                        LPAREN shift  64
                      LBRACKET shift  318
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  267
                         WHILE shift  261
                           FOR shift  168
                       FOREACH shift  163
                      CONTINUE shift  243
                         BREAK shift  242
                        RETURN shift  20
                         error shift  221
                     vdef_stmt shift  217
                     blockStmt shift  312
                          stmt shift  265
                      bodyStmt shift  320
                   return_stmt shift  220
                      lbracket shift  2
               vdefAssign_stmt shift  216
                     cdef_stmt shift  215
                   assign_stmt shift  214
                      funcexpr shift  152
                    actionStmt shift  304
                       if_stmt shift  303
                    while_stmt shift  302
                      for_stmt shift  301
                  foreach_stmt shift  300
                 continue_stmt shift  209
                    break_stmt shift  208
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  172
                     if_header shift  8
                      if_block shift  40
                   while_start shift  169
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 172

State 9:
          fdef_chunk ::= fdef_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (172) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  120
                     SEMICOLON shift  311
                        LPAREN shift  64
                      LBRACKET shift  318
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  267
                         WHILE shift  261
                           FOR shift  168
                       FOREACH shift  163
                      CONTINUE shift  243
                         BREAK shift  242
                        RETURN shift  20
                         error shift  221
                     vdef_stmt shift  217
                     blockStmt shift  312
                          stmt shift  322
                      bodyStmt shift  320
                   return_stmt shift  220
                      lbracket shift  2
               vdefAssign_stmt shift  216
                     cdef_stmt shift  215
                   assign_stmt shift  214
                      funcexpr shift  152
                    actionStmt shift  304
                       if_stmt shift  303
                    while_stmt shift  302
                      for_stmt shift  301
                  foreach_stmt shift  300
                 continue_stmt shift  209
                    break_stmt shift  208
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  172
                     if_header shift  8
                      if_block shift  40
                   while_start shift  169
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 172

State 10:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunk ::= * import_chunk SEMICOLON
          chunk ::= * fdef_chunk
          chunk ::= * fdecl_chunk
          chunk ::= * object_chunk
          chunk ::= * vdef_stmt SEMICOLON
          chunk ::= * vdefAssign_global_stmt SEMICOLON
          chunk ::= * cdef_global_stmt SEMICOLON
          chunk ::= * blockStmt
          import_chunk ::= * IMPORT dottedName AS NAME
          import_chunk ::= * IMPORT dottedName
          fdef_header ::= * FUNCTION NAME LPAREN nameList RPAREN
          fdef_chunk ::= * fdef_header stmt
          fdecl_chunk ::= * FUNCTION NAME LPAREN nameList RPAREN SEMICOLON
          object_chunk ::= * OBJECT NAME LBRACKET RBRACKET
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_global_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_global_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty

                             $ reduce 0
                        IMPORT shift  90
                      FUNCTION shift  227
                        OBJECT shift  158
                      LBRACKET shift  318
                           VAR shift  80
                         CONST shift  79
                         chunk shift  337
                  import_chunk shift  233
                    fdef_chunk shift  335
                   fdecl_chunk shift  334
                  object_chunk shift  333
                     vdef_stmt shift  232
        vdefAssign_global_stmt shift  231
              cdef_global_stmt shift  230
                     blockStmt shift  329
                   fdef_header shift  9
                      lbracket shift  2

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt ::= * for_init_stmt_nonEmpty
    (151) for_init_stmt ::= *
          for_header1 ::= for_opener * for_init_stmt SEMICOLON

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  120
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                     vdef_stmt shift  257
               vdefAssign_stmt shift  256
                     cdef_stmt shift  255
                   assign_stmt shift  254
                      funcexpr shift  207
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
        for_init_stmt_nonEmpty shift  167
                 for_init_stmt shift  166
                     {default} reduce 151

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA * for_init_stmt_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  120
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                     vdef_stmt shift  257
               vdefAssign_stmt shift  256
                     cdef_stmt shift  255
                   assign_stmt shift  254
                      funcexpr shift  207
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
        for_init_stmt_nonEmpty shift  253

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
    (154) for_action_stmt ::= *
          for_action_stmt ::= * for_action_stmt_nonEmpty
          for_header ::= for_header2 * for_action_stmt RPAREN

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  120
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                           INC shift  42
                           DEC shift  41
                   assign_stmt shift  250
                      funcexpr shift  207
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
      for_action_stmt_nonEmpty shift  165
               for_action_stmt shift  164
                     {default} reduce 154

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA * for_action_stmt_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  120
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                           INC shift  42
                           DEC shift  41
                   assign_stmt shift  250
                      funcexpr shift  207
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
      for_action_stmt_nonEmpty shift  249

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (68) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  151
                        LPAREN shift  64
                        RPAREN shift  276
                    LSQBRACKET shift  21
                         KILLS shift  294
                        STRING shift  287
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  118
                fArgs_nonEmpty shift  196
                         fArgs shift  180

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (68) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  151
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                        STRING shift  287
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  118
                fArgs_nonEmpty shift  196
                         fArgs shift  161
                     {default} reduce 68

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (68) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= KILLS LPAREN * fArgs RPAREN

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  151
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                        STRING shift  287
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  118
                fArgs_nonEmpty shift  196
                         fArgs shift  183
                     {default} reduce 68

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (68) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          funcexpr ::= expr LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  151
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                        STRING shift  287
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  118
                fArgs_nonEmpty shift  196
                         fArgs shift  178
                     {default} reduce 68

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (68) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= NAME LPAREN * fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  151
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                        STRING shift  287
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  118
                fArgs_nonEmpty shift  196
                         fArgs shift  177
                     {default} reduce 68

State 20:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
     (57) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * exprList

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  204
             exprList_nonEmpty shift  199
                          expr shift  117
                      exprList shift  241
                     {default} reduce 57

State 21:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
     (57) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= LSQBRACKET * exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  204
             exprList_nonEmpty shift  199
                          expr shift  117
                      exprList shift  86
                     {default} reduce 57

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          for_header2 ::= for_header1 * lexpr SEMICOLON
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  197
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                 CONDITIONNAME shift  181
                      funcexpr shift  207
                          expr shift  92
                         lexpr shift  131

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  197
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                 CONDITIONNAME shift  181
                      funcexpr shift  207
                          expr shift  92
                         lexpr shift  132

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  197
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                 CONDITIONNAME shift  181
                      funcexpr shift  207
                          expr shift  92
                         lexpr shift  133

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  197
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                 CONDITIONNAME shift  181
                      funcexpr shift  207
                          expr shift  92
                         lexpr shift  134

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  197
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                 CONDITIONNAME shift  181
                      funcexpr shift  207
                          expr shift  92
                         lexpr shift  278

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  197
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                 CONDITIONNAME shift  181
                      funcexpr shift  207
                          expr shift  92
                         lexpr shift  182

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  197
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                 CONDITIONNAME shift  181
                      funcexpr shift  207
                          expr shift  92
                         lexpr shift  279

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= LPAREN * lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  197
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                 CONDITIONNAME shift  181
                      funcexpr shift  207
                          expr shift  91
                         lexpr shift  136

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= L2V LPAREN * lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  197
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                 CONDITIONNAME shift  181
                      funcexpr shift  207
                          expr shift  92
                         lexpr shift  135

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  151
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                        STRING shift  287
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  118
                fArgs_nonEmpty shift  286

State 32:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  204
             exprList_nonEmpty shift  154
                          expr shift  117

State 33:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  204
             exprList_nonEmpty shift  155
                          expr shift  117

State 34:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= foreach_opener nameList_nonEmpty COLON * exprList_nonEmpty RPAREN

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  204
             exprList_nonEmpty shift  145
                          expr shift  117

State 35:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalueList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  204
             exprList_nonEmpty shift  173
                          expr shift  117

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA * lvalue

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  120
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  99
                        lvalue shift  268

State 37:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  204
             exprList_nonEmpty shift  174
                          expr shift  117

State 38:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  204
             exprList_nonEmpty shift  175
                          expr shift  117

State 39:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  204
             exprList_nonEmpty shift  288
                          expr shift  117

State 40:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
    (139) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  171
                    elif_start shift  170
                   elif_header shift  7
                   else_header shift  3
                     {default} reduce 139

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= DEC * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  97

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= INC * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  98

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBXR * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  100

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBOR * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  101

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBND * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  102

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IRSH * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  103

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ILSH * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  104

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IMOD * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  105

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IDIV * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  106

State 50:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IMUL * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  107

State 51:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ISUB * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  108

State 52:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IADD * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  109

State 53:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ASSIGN * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  110

State 54:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= expr LSQBRACKET * expr RSQBRACKET

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  94

State 55:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  111

State 56:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  112

State 57:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  113

State 58:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  114

State 59:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  115

State 60:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  116

State 61:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  137

State 62:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  138

State 63:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  139

State 64:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  95

State 65:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  125

State 66:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  123

State 67:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  126

State 68:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  127

State 69:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  128

State 70:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  140

State 71:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  141

State 72:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  142

State 73:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  129

State 74:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  130

State 75:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  96

State 76:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= NAME ASSIGN * expr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  295
                          NAME shift  206
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  294
                           L2V shift  198
                     MAPSTRING shift  195
                          UNIT shift  192
                        SWITCH shift  189
                      LOCATION shift  186
                      funcexpr shift  207
                          expr shift  119

State 77:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= actionStmt_start * action
          actionStmt ::= actionStmt_start * actions

                    ACTIONNAME shift  162
                        action shift  82
                       actions shift  81

State 78:
          fdef_header ::= FUNCTION NAME LPAREN * nameList RPAREN
          fdecl_chunk ::= FUNCTION NAME LPAREN * nameList RPAREN SEMICOLON
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
     (51) nameList ::= *
          nameList ::= * nameList_nonEmpty

                          NAME shift  324
                      nameList shift  225
             nameList_nonEmpty shift  223
                     {default} reduce 51

State 79:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_global_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  324
             nameList_nonEmpty shift  143

State 80:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_global_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  324
             nameList_nonEmpty shift  144

State 81:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
    (174) actionStmt ::= actionStmt_start actions *

                    ACTIONNAME shift  162
                        action shift  238
                     {default} reduce 174

State 82:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
    (173) actionStmt ::= actionStmt_start action *

                    ACTIONNAME shift  162
                        action shift  239
                     {default} reduce 173

State 83:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= foreach_opener * nameList_nonEmpty COLON exprList_nonEmpty RPAREN

                          NAME shift  324
             nameList_nonEmpty shift  146

State 84:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  324
             nameList_nonEmpty shift  148

State 85:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  324
             nameList_nonEmpty shift  149

State 86:
          commaSkippable ::= * COMMA
     (75) commaSkippable ::= *
          expr ::= LSQBRACKET exprList * commaSkippable RSQBRACKET

                         COMMA shift  274
                commaSkippable shift  179
                     {default} reduce 75

State 87:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  202
              numList_nonEmpty shift  150

State 88:
          rbracket ::= * RBRACKET
          blockStmt ::= lbracket bodyStmtList return_stmt SEMICOLON * rbracket

                      RBRACKET shift  316
                      rbracket shift  313

State 89:
          rbracket ::= * RBRACKET
          blockStmt ::= lbracket return_stmt SEMICOLON * rbracket

                      RBRACKET shift  316
                      rbracket shift  315

State 90:
          dottedName ::= * NAME
          dottedName ::= * dottedName PERIOD NAME
          import_chunk ::= IMPORT * dottedName AS NAME
          import_chunk ::= IMPORT * dottedName

                          NAME shift  328
                    dottedName shift  153

State 91:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (95) lexpr ::= expr *
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  60
                            LE shift  58
                            LT shift  57
                            GE shift  56
                            GT shift  55
                            NE shift  59
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                        RPAREN shift  291
                    LSQBRACKET shift  75
                     {default} reduce 95

State 92:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (95) lexpr ::= expr *
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  60
                            LE shift  58
                            LT shift  57
                            GE shift  56
                            GT shift  55
                            NE shift  59
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 95

State 93:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lvalue ::= expr * LSQBRACKET expr RSQBRACKET
          lvalue ::= expr * PERIOD NAME
          assign_stmt ::= expr * INC
          assign_stmt ::= expr * DEC

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  176
                        LPAREN shift  18
                    LSQBRACKET shift  54
                           INC shift  270
                           DEC shift  269

State 94:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lvalue ::= expr LSQBRACKET expr * RSQBRACKET

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                    RSQBRACKET shift  121

State 95:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                        RPAREN shift  291
                    LSQBRACKET shift  75

State 96:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                    RSQBRACKET shift  292

State 97:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (120) assign_stmt ::= DEC expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 120

State 98:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (118) assign_stmt ::= INC expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 118

State 99:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lvalue ::= expr * LSQBRACKET expr RSQBRACKET
          lvalue ::= expr * PERIOD NAME

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  176
                        LPAREN shift  18
                    LSQBRACKET shift  54

State 100:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (131) assign_stmt ::= lvalue IBXR expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 131

State 101:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (130) assign_stmt ::= lvalue IBOR expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 130

State 102:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (129) assign_stmt ::= lvalue IBND expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 129

State 103:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (128) assign_stmt ::= lvalue IRSH expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 128

State 104:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (127) assign_stmt ::= lvalue ILSH expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 127

State 105:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (126) assign_stmt ::= lvalue IMOD expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 126

State 106:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (125) assign_stmt ::= lvalue IDIV expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 125

State 107:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (124) assign_stmt ::= lvalue IMUL expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 124

State 108:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (123) assign_stmt ::= lvalue ISUB expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 123

State 109:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (122) assign_stmt ::= lvalue IADD expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 122

State 110:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (116) assign_stmt ::= lvalue ASSIGN expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 116

State 111:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (102) lexpr ::= expr GT expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 102

State 112:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (101) lexpr ::= expr GE expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 101

State 113:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (100) lexpr ::= expr LT expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 100

State 114:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (99) lexpr ::= expr LE expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 99

State 115:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (98) lexpr ::= expr NE expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 98

State 116:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (97) lexpr ::= expr EQ expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 97

State 117:
     (55) exprList_nonEmpty ::= expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 55

State 118:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (64) fArgs_nonEmpty ::= expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 64

State 119:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (66) fArgs_nonEmpty ::= NAME ASSIGN expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 66

State 120:
     (61) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
    (111) lvalue ::= NAME *

                        ASSIGN reduce 111
                         COMMA reduce 111
                        LPAREN shift  19
                          IADD reduce 111
                          ISUB reduce 111
                          IMUL reduce 111
                          IDIV reduce 111
                          IMOD reduce 111
                          ILSH reduce 111
                          IRSH reduce 111
                          IBND reduce 111
                          IBOR reduce 111
                          IBXR reduce 111
                     {default} reduce 61

State 121:
     (63) expr ::= expr LSQBRACKET expr RSQBRACKET *
    (112) lvalue ::= expr LSQBRACKET expr RSQBRACKET *

                        ASSIGN reduce 112
                         COMMA reduce 112
                          IADD reduce 112
                          ISUB reduce 112
                          IMUL reduce 112
                          IDIV reduce 112
                          IMOD reduce 112
                          ILSH reduce 112
                          IRSH reduce 112
                          IBND reduce 112
                          IBOR reduce 112
                          IBXR reduce 112
                     {default} reduce 63

State 122:
     (62) expr ::= expr PERIOD NAME *
    (113) lvalue ::= expr PERIOD NAME *

                        ASSIGN reduce 113
                         COMMA reduce 113
                          IADD reduce 113
                          ISUB reduce 113
                          IMUL reduce 113
                          IDIV reduce 113
                          IMOD reduce 113
                          ILSH reduce 113
                          IRSH reduce 113
                          IBND reduce 113
                          IBOR reduce 113
                          IBXR reduce 113
                     {default} reduce 62

State 123:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (90) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 90

State 124:
    (114) lvalueList_nonEmpty ::= lvalue *
          assign_stmt ::= lvalue * ASSIGN expr
          assign_stmt ::= lvalue * IADD expr
          assign_stmt ::= lvalue * ISUB expr
          assign_stmt ::= lvalue * IMUL expr
          assign_stmt ::= lvalue * IDIV expr
          assign_stmt ::= lvalue * IMOD expr
          assign_stmt ::= lvalue * ILSH expr
          assign_stmt ::= lvalue * IRSH expr
          assign_stmt ::= lvalue * IBND expr
          assign_stmt ::= lvalue * IBOR expr
          assign_stmt ::= lvalue * IBXR expr

                        ASSIGN shift  53
                          IADD shift  52
                          ISUB shift  51
                          IMUL shift  50
                          IDIV shift  49
                          IMOD shift  48
                          ILSH shift  47
                          IRSH shift  46
                          IBND shift  45
                          IBOR shift  44
                          IBXR shift  43
                     {default} reduce 114

State 125:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (91) expr ::= expr BITXOR expr *

                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 91

State 126:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (89) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 89

State 127:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (88) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 88

State 128:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (87) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 87

State 129:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (83) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 83

State 130:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
     (82) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 82

State 131:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          for_header2 ::= for_header1 lexpr * SEMICOLON

                           LOR shift  27
                          LAND shift  28
                     SEMICOLON shift  251

State 132:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  260

State 133:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  263

State 134:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  266

State 135:
          expr ::= L2V LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  275

State 136:
          lexpr ::= LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  280

State 137:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (94) expr ::= BITNOT expr *

                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 94

State 138:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (93) expr ::= MINUS expr *

                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 93

State 139:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (92) expr ::= PLUS expr *

                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 92

State 140:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (86) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 86

State 141:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (85) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 85

State 142:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (84) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        PERIOD shift  205
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 84

State 143:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_global_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  32
                         COMMA shift  222

State 144:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (106) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  33
                         COMMA shift  222
                     {default} reduce 106

State 145:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty * RPAREN

                         COMMA shift  39
                        RPAREN shift  245

State 146:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= foreach_opener nameList_nonEmpty * COLON exprList_nonEmpty RPAREN

                         COMMA shift  222
                         COLON shift  34

State 147:
          lvalueList_nonEmpty ::= lvalueList_nonEmpty * COMMA lvalue
          assign_stmt ::= lvalueList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  35
                         COMMA shift  36

State 148:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  37
                         COMMA shift  222

State 149:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (106) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  38
                         COMMA shift  222
                     {default} reduce 106

State 150:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  201
                    RSQBRACKET shift  200

State 151:
     (61) expr ::= NAME *
          fArgs_nonEmpty ::= NAME * ASSIGN expr
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        ASSIGN shift  76
                        LPAREN shift  19
                     {default} reduce 61

State 152:
          bodyStmt ::= funcexpr * SEMICOLON
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (72) expr ::= funcexpr *

                     SEMICOLON shift  306
                    LSQBRACKET shift  213
                     {default} reduce 72

State 153:
          dottedName ::= dottedName * PERIOD NAME
          import_chunk ::= IMPORT dottedName * AS NAME
     (14) import_chunk ::= IMPORT dottedName *

                        PERIOD shift  229
                            AS shift  228
                     {default} reduce 14

State 154:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (110) cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 110

State 155:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (108) vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 108

State 156:
          object_chunk ::= OBJECT NAME LBRACKET * RBRACKET

                      RBRACKET shift  234

State 157:
          object_chunk ::= OBJECT NAME * LBRACKET RBRACKET

                      LBRACKET shift  156

State 158:
          object_chunk ::= OBJECT * NAME LBRACKET RBRACKET

                          NAME shift  157

State 159:
          blockStmt ::= lbracket error * RBRACKET
     (43) bodyStmtList ::= error *

                      RBRACKET shift  236
                     {default} reduce 43

State 160:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  240

State 161:
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                        RPAREN shift  160

State 162:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  16

State 163:
          foreach_opener ::= FOREACH * LPAREN

                        LPAREN shift  246

State 164:
          for_header ::= for_header2 for_action_stmt * RPAREN

                        RPAREN shift  248

State 165:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (155) for_action_stmt ::= for_action_stmt_nonEmpty *

                         COMMA shift  14
                     {default} reduce 155

State 166:
          for_header1 ::= for_opener for_init_stmt * SEMICOLON

                     SEMICOLON shift  252

State 167:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (150) for_init_stmt ::= for_init_stmt_nonEmpty *

                         COMMA shift  12
                     {default} reduce 150

State 168:
          for_opener ::= FOR * LPAREN

                        LPAREN shift  258

State 169:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  23

State 170:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  24

State 171:
          elif_start ::= ELSE * IF
    (138) else_header ::= ELSE *

                            IF shift  264
                     {default} reduce 138

State 172:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  25

State 173:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (117) assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 117

State 174:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (109) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 109

State 175:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (107) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 107

State 176:
          expr ::= expr PERIOD * NAME
          lvalue ::= expr PERIOD * NAME

                          NAME shift  122

State 177:
          funcexpr ::= NAME LPAREN fArgs * RPAREN

                        RPAREN shift  271

State 178:
          funcexpr ::= expr LPAREN fArgs * RPAREN

                        RPAREN shift  272

State 179:
          expr ::= LSQBRACKET exprList commaSkippable * RSQBRACKET

                    RSQBRACKET shift  273

State 180:
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  277

State 181:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  15

State 182:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
    (104) lexpr ::= lexpr LOR lexpr *

                          LAND shift  28
                     {default} reduce 104

State 183:
          lexpr ::= KILLS LPAREN fArgs * RPAREN

                        RPAREN shift  281

State 184:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  282

State 185:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  184

State 186:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  185

State 187:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  283

State 188:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  187

State 189:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  188

State 190:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  284

State 191:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  190

State 192:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  191

State 193:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  285

State 194:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  193

State 195:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  194

State 196:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (69) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  31
                     {default} reduce 69

State 197:
     (60) expr ::= KILLS *
          lexpr ::= KILLS * LPAREN fArgs RPAREN

                        LPAREN shift  17
                     {default} reduce 60

State 198:
          expr ::= L2V * LPAREN lexpr RPAREN

                        LPAREN shift  30

State 199:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (58) exprList ::= exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 58

State 200:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  289

State 201:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  290

State 202:
     (47) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  210
                     {default} reduce 47

State 203:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  87

State 204:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (72) expr ::= funcexpr *

                    LSQBRACKET shift  203
                     {default} reduce 72

State 205:
          expr ::= expr PERIOD * NAME

                          NAME shift  293

State 206:
     (61) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        LPAREN shift  19
                     {default} reduce 61

State 207:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (72) expr ::= funcexpr *

                    LSQBRACKET shift  213
                     {default} reduce 72

State 208:
          bodyStmt ::= break_stmt * SEMICOLON

                     SEMICOLON shift  298

State 209:
          bodyStmt ::= continue_stmt * SEMICOLON

                     SEMICOLON shift  299

State 210:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  305

State 211:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  210

State 212:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  211

State 213:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  212

State 214:
          bodyStmt ::= assign_stmt * SEMICOLON

                     SEMICOLON shift  307

State 215:
          bodyStmt ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  308

State 216:
          bodyStmt ::= vdefAssign_stmt * SEMICOLON

                     SEMICOLON shift  309

State 217:
          bodyStmt ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  310

State 218:
          blockStmt ::= lbracket bodyStmtList return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  88

State 219:
          blockStmt ::= lbracket return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  89

State 220:
          stmt ::= return_stmt * SEMICOLON

                     SEMICOLON shift  319

State 221:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  321

State 222:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  323

State 223:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
     (52) nameList ::= nameList_nonEmpty *

                         COMMA shift  222
                     {default} reduce 52

State 224:
     (15) fdef_header ::= FUNCTION NAME LPAREN nameList RPAREN *
          fdecl_chunk ::= FUNCTION NAME LPAREN nameList RPAREN * SEMICOLON

                     SEMICOLON shift  325
                     {default} reduce 15

State 225:
          fdef_header ::= FUNCTION NAME LPAREN nameList * RPAREN
          fdecl_chunk ::= FUNCTION NAME LPAREN nameList * RPAREN SEMICOLON

                        RPAREN shift  224

State 226:
          fdef_header ::= FUNCTION NAME * LPAREN nameList RPAREN
          fdecl_chunk ::= FUNCTION NAME * LPAREN nameList RPAREN SEMICOLON

                        LPAREN shift  78

State 227:
          fdef_header ::= FUNCTION * NAME LPAREN nameList RPAREN
          fdecl_chunk ::= FUNCTION * NAME LPAREN nameList RPAREN SEMICOLON

                          NAME shift  226

State 228:
          import_chunk ::= IMPORT dottedName AS * NAME

                          NAME shift  326

State 229:
          dottedName ::= dottedName PERIOD * NAME

                          NAME shift  327

State 230:
          chunk ::= cdef_global_stmt * SEMICOLON

                     SEMICOLON shift  330

State 231:
          chunk ::= vdefAssign_global_stmt * SEMICOLON

                     SEMICOLON shift  331

State 232:
          chunk ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  332

State 233:
          chunk ::= import_chunk * SEMICOLON

                     SEMICOLON shift  336

State 234:
     (18) object_chunk ::= OBJECT NAME LBRACKET RBRACKET *

                     {default} reduce 18

State 235:
     (44) bodyStmtList ::= bodyStmt *

                     {default} reduce 44

State 236:
     (28) blockStmt ::= lbracket error RBRACKET *

                     {default} reduce 28

State 237:
    (140) if_stmt ::= if_block else_header stmt *

                     {default} reduce 140

State 238:
    (171) actions ::= actions action *

                     {default} reduce 171

State 239:
    (170) actions ::= action action *

                     {default} reduce 170

State 240:
    (169) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 169

State 241:
    (165) return_stmt ::= RETURN exprList *

                     {default} reduce 165

State 242:
    (164) break_stmt ::= BREAK *

                     {default} reduce 164

State 243:
    (163) continue_stmt ::= CONTINUE *

                     {default} reduce 163

State 244:
    (162) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 162

State 245:
    (161) foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN *

                     {default} reduce 161

State 246:
    (160) foreach_opener ::= FOREACH LPAREN *

                     {default} reduce 160

State 247:
    (159) for_stmt ::= for_header stmt *

                     {default} reduce 159

State 248:
    (158) for_header ::= for_header2 for_action_stmt RPAREN *

                     {default} reduce 158

State 249:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (153) for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty *

                     {default} reduce 153

State 250:
    (152) for_action_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 152

State 251:
    (157) for_header2 ::= for_header1 lexpr SEMICOLON *

                     {default} reduce 157

State 252:
    (156) for_header1 ::= for_opener for_init_stmt SEMICOLON *

                     {default} reduce 156

State 253:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (149) for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty *

                     {default} reduce 149

State 254:
    (148) for_init_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 148

State 255:
    (147) for_init_stmt_nonEmpty ::= cdef_stmt *

                     {default} reduce 147

State 256:
    (146) for_init_stmt_nonEmpty ::= vdefAssign_stmt *

                     {default} reduce 146

State 257:
    (145) for_init_stmt_nonEmpty ::= vdef_stmt *

                     {default} reduce 145

State 258:
    (144) for_opener ::= FOR LPAREN *

                     {default} reduce 144

State 259:
    (143) while_stmt ::= while_header stmt *

                     {default} reduce 143

State 260:
    (142) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 142

State 261:
    (141) while_start ::= WHILE *

                     {default} reduce 141

State 262:
    (137) if_block ::= if_block elif_header stmt *

                     {default} reduce 137

State 263:
    (136) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 136

State 264:
    (135) elif_start ::= ELSE IF *

                     {default} reduce 135

State 265:
    (134) if_block ::= if_header stmt *

                     {default} reduce 134

State 266:
    (133) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 133

State 267:
    (132) if_start ::= IF *

                     {default} reduce 132

State 268:
    (115) lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA lvalue *

                     {default} reduce 115

State 269:
    (121) assign_stmt ::= expr DEC *

                     {default} reduce 121

State 270:
    (119) assign_stmt ::= expr INC *

                     {default} reduce 119

State 271:
     (70) funcexpr ::= NAME LPAREN fArgs RPAREN *

                     {default} reduce 70

State 272:
     (71) funcexpr ::= expr LPAREN fArgs RPAREN *

                     {default} reduce 71

State 273:
     (76) expr ::= LSQBRACKET exprList commaSkippable RSQBRACKET *

                     {default} reduce 76

State 274:
     (74) commaSkippable ::= COMMA *

                     {default} reduce 74

State 275:
     (77) expr ::= L2V LPAREN lexpr RPAREN *

                     {default} reduce 77

State 276:
    (168) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 168

State 277:
    (166) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 166

State 278:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
    (105) lexpr ::= LNOT lexpr *

                     {default} reduce 105

State 279:
          lexpr ::= lexpr * LAND lexpr
    (103) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 103

State 280:
     (96) lexpr ::= LPAREN lexpr RPAREN *

                     {default} reduce 96

State 281:
    (167) lexpr ::= KILLS LPAREN fArgs RPAREN *

                     {default} reduce 167

State 282:
     (81) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 81

State 283:
     (80) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 80

State 284:
     (79) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 79

State 285:
     (78) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 78

State 286:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (67) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArgs_nonEmpty *

                     {default} reduce 67

State 287:
     (65) fArgs_nonEmpty ::= STRING *

                     {default} reduce 65

State 288:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (56) exprList_nonEmpty ::= exprList_nonEmpty COMMA exprList_nonEmpty *

                     {default} reduce 56

State 289:
     (53) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 53

State 290:
     (48) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 48

State 291:
     (73) expr ::= LPAREN expr RPAREN *

                     {default} reduce 73

State 292:
     (63) expr ::= expr LSQBRACKET expr RSQBRACKET *

                     {default} reduce 63

State 293:
     (62) expr ::= expr PERIOD NAME *

                     {default} reduce 62

State 294:
     (60) expr ::= KILLS *

                     {default} reduce 60

State 295:
     (59) expr ::= NUMBER *

                     {default} reduce 59

State 296:
     (46) bodyStmtList ::= bodyStmtList error *

                     {default} reduce 46

State 297:
     (45) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 45

State 298:
     (42) bodyStmt ::= break_stmt SEMICOLON *

                     {default} reduce 42

State 299:
     (41) bodyStmt ::= continue_stmt SEMICOLON *

                     {default} reduce 41

State 300:
     (40) bodyStmt ::= foreach_stmt *

                     {default} reduce 40

State 301:
     (39) bodyStmt ::= for_stmt *

                     {default} reduce 39

State 302:
     (38) bodyStmt ::= while_stmt *

                     {default} reduce 38

State 303:
     (37) bodyStmt ::= if_stmt *

                     {default} reduce 37

State 304:
     (36) bodyStmt ::= actionStmt *

                     {default} reduce 36

State 305:
     (54) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 54

State 306:
     (35) bodyStmt ::= funcexpr SEMICOLON *

                     {default} reduce 35

State 307:
     (34) bodyStmt ::= assign_stmt SEMICOLON *

                     {default} reduce 34

State 308:
     (33) bodyStmt ::= cdef_stmt SEMICOLON *

                     {default} reduce 33

State 309:
     (32) bodyStmt ::= vdefAssign_stmt SEMICOLON *

                     {default} reduce 32

State 310:
     (31) bodyStmt ::= vdef_stmt SEMICOLON *

                     {default} reduce 31

State 311:
     (30) bodyStmt ::= SEMICOLON *

                     {default} reduce 30

State 312:
     (29) bodyStmt ::= blockStmt *

                     {default} reduce 29

State 313:
     (27) blockStmt ::= lbracket bodyStmtList return_stmt SEMICOLON rbracket *

                     {default} reduce 27

State 314:
     (26) blockStmt ::= lbracket bodyStmtList rbracket *

                     {default} reduce 26

State 315:
     (25) blockStmt ::= lbracket return_stmt SEMICOLON rbracket *

                     {default} reduce 25

State 316:
     (23) rbracket ::= RBRACKET *

                     {default} reduce 23

State 317:
     (24) blockStmt ::= lbracket RBRACKET *

                     {default} reduce 24

State 318:
     (22) lbracket ::= LBRACKET *

                     {default} reduce 22

State 319:
     (21) stmt ::= return_stmt SEMICOLON *

                     {default} reduce 21

State 320:
     (20) stmt ::= bodyStmt *

                     {default} reduce 20

State 321:
     (19) stmt ::= error SEMICOLON *

                     {default} reduce 19

State 322:
     (16) fdef_chunk ::= fdef_header stmt *

                     {default} reduce 16

State 323:
     (50) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 50

State 324:
     (49) nameList_nonEmpty ::= NAME *

                     {default} reduce 49

State 325:
     (17) fdecl_chunk ::= FUNCTION NAME LPAREN nameList RPAREN SEMICOLON *

                     {default} reduce 17

State 326:
     (13) import_chunk ::= IMPORT dottedName AS NAME *

                     {default} reduce 13

State 327:
     (12) dottedName ::= dottedName PERIOD NAME *

                     {default} reduce 12

State 328:
     (11) dottedName ::= NAME *

                     {default} reduce 11

State 329:
     (10) chunk ::= blockStmt *

                     {default} reduce 10

State 330:
      (9) chunk ::= cdef_global_stmt SEMICOLON *

                     {default} reduce 9

State 331:
      (8) chunk ::= vdefAssign_global_stmt SEMICOLON *

                     {default} reduce 8

State 332:
      (7) chunk ::= vdef_stmt SEMICOLON *

                     {default} reduce 7

State 333:
      (6) chunk ::= object_chunk *

                     {default} reduce 6

State 334:
      (5) chunk ::= fdecl_chunk *

                     {default} reduce 5

State 335:
      (4) chunk ::= fdef_chunk *

                     {default} reduce 4

State 336:
      (3) chunk ::= import_chunk SEMICOLON *

                     {default} reduce 3

State 337:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: ASSIGN
    2: COMMA
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: SEMICOLON
   28: PERIOD
   29: IMPORT
   30: AS
   31: FUNCTION
   32: LPAREN
   33: RPAREN
   34: OBJECT
   35: LBRACKET
   36: RBRACKET
   37: LSQBRACKET
   38: RSQBRACKET
   39: KILLS
   40: STRING
   41: FUNCCALL
   42: L2V
   43: MAPSTRING
   44: UNIT
   45: SWITCH
   46: LOCATION
   47: VAR
   48: CONST
   49: INC
   50: DEC
   51: IADD
   52: ISUB
   53: IMUL
   54: IDIV
   55: IMOD
   56: ILSH
   57: IRSH
   58: IBND
   59: IBOR
   60: IBXR
   61: IF
   62: ELSE
   63: WHILE
   64: FOR
   65: FOREACH
   66: COLON
   67: CONTINUE
   68: BREAK
   69: RETURN
   70: CONDITIONNAME
   71: ACTIONNAME
   72: error:
   73: nt:
   74: program: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   75: chunks: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   76: chunk: IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   77: import_chunk: IMPORT
   78: fdef_chunk: FUNCTION
   79: fdecl_chunk: FUNCTION
   80: object_chunk: OBJECT
   81: vdef_stmt: VAR
   82: vdefAssign_global_stmt: VAR
   83: cdef_global_stmt: CONST
   84: blockStmt: LBRACKET
   85: dottedName: NAME
   86: fdef_header: FUNCTION
   87: nameList: <lambda> NAME
   88: stmt: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK RETURN ACTIONNAME
   89: bodyStmt: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK ACTIONNAME
   90: return_stmt: RETURN
   91: lbracket: LBRACKET
   92: rbracket: RBRACKET
   93: bodyStmtList: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK ACTIONNAME
   94: vdefAssign_stmt: VAR
   95: cdef_stmt: CONST
   96: assign_stmt: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC
   97: funcexpr: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
   98: actionStmt: ACTIONNAME
   99: if_stmt: IF
  100: while_stmt: WHILE
  101: for_stmt: FOR
  102: foreach_stmt: FOREACH
  103: continue_stmt: CONTINUE
  104: break_stmt: BREAK
  105: numList_nonEmpty: NUMBER
  106: nameList_nonEmpty: NAME
  107: exprList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  108: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  109: exprList: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  110: fArgs_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION
  111: fArgs: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION
  112: commaSkippable: <lambda> COMMA
  113: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
  114: lvalue: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  115: lvalueList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  116: if_start: IF
  117: if_header: IF
  118: if_block: IF
  119: elif_start: ELSE
  120: elif_header: ELSE
  121: else_header: ELSE
  122: while_start: WHILE
  123: while_header: WHILE
  124: for_opener: FOR
  125: for_init_stmt_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST INC DEC
  126: for_init_stmt: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST INC DEC
  127: for_action_stmt_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC
  128: for_action_stmt: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC
  129: for_header1: FOR
  130: for_header2: FOR
  131: for_header: FOR
  132: foreach_opener: FOREACH
  133: foreach_header: FOREACH
  134: action: ACTIONNAME
  135: actions: ACTIONNAME
  136: actionStmt_start: <lambda>
