State 0:
          program ::= * chunks
    (115) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  9
                     {default} reduce 115

State 1:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          lbracket ::= * LBRACKET
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  180
                         CONST shift  54
                            IF shift  199
                         WHILE shift  193
                           FOR shift  105
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  21
                    ACTIONNAME shift  101
                      LBRACKET shift  167
                         error shift  98
                 nameListMulti shift  89
                      funcexpr shift  97
                      funcName shift  131
                     vdef_stmt shift  179
               vdefAssign_stmt shift  178
                     cdef_stmt shift  177
                   assign_stmt shift  176
              assignMulti_stmt shift  175
                      if_start shift  109
                     if_header shift  5
                      if_block shift  49
                          stmt shift  156
                       if_stmt shift  172
                   while_start shift  106
                  while_header shift  3
                    while_stmt shift  171
                foreach_header shift  2
                  foreach_stmt shift  170
                 continue_stmt shift  169
                    break_stmt shift  168
                   return_stmt shift  165
                        action shift  59
                       actions shift  58
                    actionStmt shift  173
                      bodyStmt shift  166
                      lbracket shift  7

State 2:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          lbracket ::= * LBRACKET
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  180
                         CONST shift  54
                            IF shift  199
                         WHILE shift  193
                           FOR shift  105
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  21
                    ACTIONNAME shift  101
                      LBRACKET shift  167
                         error shift  98
                 nameListMulti shift  89
                      funcexpr shift  97
                      funcName shift  131
                     vdef_stmt shift  179
               vdefAssign_stmt shift  178
                     cdef_stmt shift  177
                   assign_stmt shift  176
              assignMulti_stmt shift  175
                      if_start shift  109
                     if_header shift  5
                      if_block shift  49
                          stmt shift  189
                       if_stmt shift  172
                   while_start shift  106
                  while_header shift  3
                    while_stmt shift  171
                foreach_header shift  2
                  foreach_stmt shift  170
                 continue_stmt shift  169
                    break_stmt shift  168
                   return_stmt shift  165
                        action shift  59
                       actions shift  58
                    actionStmt shift  173
                      bodyStmt shift  166
                      lbracket shift  7

State 3:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          lbracket ::= * LBRACKET
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  180
                         CONST shift  54
                            IF shift  199
                         WHILE shift  193
                           FOR shift  105
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  21
                    ACTIONNAME shift  101
                      LBRACKET shift  167
                         error shift  98
                 nameListMulti shift  89
                      funcexpr shift  97
                      funcName shift  131
                     vdef_stmt shift  179
               vdefAssign_stmt shift  178
                     cdef_stmt shift  177
                   assign_stmt shift  176
              assignMulti_stmt shift  175
                      if_start shift  109
                     if_header shift  5
                      if_block shift  49
                          stmt shift  191
                       if_stmt shift  172
                   while_start shift  106
                  while_header shift  3
                    while_stmt shift  171
                foreach_header shift  2
                  foreach_stmt shift  170
                 continue_stmt shift  169
                    break_stmt shift  168
                   return_stmt shift  165
                        action shift  59
                       actions shift  58
                    actionStmt shift  173
                      bodyStmt shift  166
                      lbracket shift  7

State 4:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          lbracket ::= * LBRACKET
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  180
                         CONST shift  54
                            IF shift  199
                         WHILE shift  193
                           FOR shift  105
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  21
                    ACTIONNAME shift  101
                      LBRACKET shift  167
                         error shift  98
                 nameListMulti shift  89
                      funcexpr shift  97
                      funcName shift  131
                     vdef_stmt shift  179
               vdefAssign_stmt shift  178
                     cdef_stmt shift  177
                   assign_stmt shift  176
              assignMulti_stmt shift  175
                      if_start shift  109
                     if_header shift  5
                      if_block shift  49
                          stmt shift  194
                       if_stmt shift  172
                   while_start shift  106
                  while_header shift  3
                    while_stmt shift  171
                foreach_header shift  2
                  foreach_stmt shift  170
                 continue_stmt shift  169
                    break_stmt shift  168
                   return_stmt shift  165
                        action shift  59
                       actions shift  58
                    actionStmt shift  173
                      bodyStmt shift  166
                      lbracket shift  7

State 5:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          lbracket ::= * LBRACKET
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  180
                         CONST shift  54
                            IF shift  199
                         WHILE shift  193
                           FOR shift  105
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  21
                    ACTIONNAME shift  101
                      LBRACKET shift  167
                         error shift  98
                 nameListMulti shift  89
                      funcexpr shift  97
                      funcName shift  131
                     vdef_stmt shift  179
               vdefAssign_stmt shift  178
                     cdef_stmt shift  177
                   assign_stmt shift  176
              assignMulti_stmt shift  175
                      if_start shift  109
                     if_header shift  5
                      if_block shift  49
                          stmt shift  197
                       if_stmt shift  172
                   while_start shift  106
                  while_header shift  3
                    while_stmt shift  171
                foreach_header shift  2
                  foreach_stmt shift  170
                 continue_stmt shift  169
                    break_stmt shift  168
                   return_stmt shift  165
                        action shift  59
                       actions shift  58
                    actionStmt shift  173
                      bodyStmt shift  166
                      lbracket shift  7

State 6:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          fdef_chunk ::= function_header * stmt
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          lbracket ::= * LBRACKET
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  180
                         CONST shift  54
                            IF shift  199
                         WHILE shift  193
                           FOR shift  105
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  21
                    ACTIONNAME shift  101
                      LBRACKET shift  167
                         error shift  98
                 nameListMulti shift  89
                      funcexpr shift  97
                      funcName shift  131
                     vdef_stmt shift  179
               vdefAssign_stmt shift  178
                     cdef_stmt shift  177
                   assign_stmt shift  176
              assignMulti_stmt shift  175
                      if_start shift  109
                     if_header shift  5
                      if_block shift  49
                          stmt shift  155
                       if_stmt shift  172
                   while_start shift  106
                  while_header shift  3
                    while_stmt shift  171
                foreach_header shift  2
                  foreach_stmt shift  170
                 continue_stmt shift  169
                    break_stmt shift  168
                   return_stmt shift  165
                        action shift  59
                       actions shift  58
                    actionStmt shift  173
                      bodyStmt shift  166
                      lbracket shift  7

State 7:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          stmt ::= lbracket * RBRACKET
          stmt ::= lbracket * return_stmt rbracket
          stmt ::= lbracket * bodyStmtList rbracket
          stmt ::= lbracket * bodyStmtList return_stmt rbracket
          stmt ::= lbracket * error RBRACKET

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  180
                         CONST shift  54
                            IF shift  199
                         WHILE shift  193
                           FOR shift  105
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  21
                    ACTIONNAME shift  101
                      RBRACKET shift  159
                         error shift  96
                 nameListMulti shift  89
                      funcexpr shift  97
                      funcName shift  131
                     vdef_stmt shift  179
               vdefAssign_stmt shift  178
                     cdef_stmt shift  177
                   assign_stmt shift  176
              assignMulti_stmt shift  175
                      if_start shift  109
                     if_header shift  5
                      if_block shift  49
                       if_stmt shift  172
                   while_start shift  106
                  while_header shift  3
                    while_stmt shift  171
                foreach_header shift  2
                  foreach_stmt shift  170
                 continue_stmt shift  169
                    break_stmt shift  168
                   return_stmt shift  56
                        action shift  59
                       actions shift  58
                    actionStmt shift  173
                      bodyStmt shift  164
                  bodyStmtList shift  8

State 8:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          bodyStmtList ::= bodyStmtList * bodyStmt
          rbracket ::= * RBRACKET
          stmt ::= lbracket bodyStmtList * rbracket
          stmt ::= lbracket bodyStmtList * return_stmt rbracket

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  180
                         CONST shift  54
                            IF shift  199
                         WHILE shift  193
                           FOR shift  105
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  21
                    ACTIONNAME shift  101
                      RBRACKET shift  162
                 nameListMulti shift  89
                      funcexpr shift  97
                      funcName shift  131
                     vdef_stmt shift  179
               vdefAssign_stmt shift  178
                     cdef_stmt shift  177
                   assign_stmt shift  176
              assignMulti_stmt shift  175
                      if_start shift  109
                     if_header shift  5
                      if_block shift  49
                       if_stmt shift  172
                   while_start shift  106
                  while_header shift  3
                    while_stmt shift  171
                foreach_header shift  2
                  foreach_stmt shift  170
                 continue_stmt shift  169
                    break_stmt shift  168
                   return_stmt shift  57
                        action shift  59
                       actions shift  58
                    actionStmt shift  173
                      bodyStmt shift  163
                      rbracket shift  161

State 9:
      (0) program ::= chunks *
          vdef_stmt ::= * VAR nameList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          import_chunk ::= * FROM NAME IMPORT nameList
          chunk ::= * import_chunk
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * cdef_stmt
          chunks ::= chunks * chunk

                             $ reduce 0
                           VAR shift  55
                         CONST shift  54
                      FUNCTION shift  112
                          FROM shift  95
                     vdef_stmt shift  151
                     cdef_stmt shift  150
                function_start shift  111
               function_header shift  6
                    fdef_chunk shift  152
                  import_chunk shift  153
                         chunk shift  149

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
     (13) fArgs ::= *
          fArgsAny ::= * expr
          fArgsAny ::= * STRING
          fArgsAny ::= * fArgsAny COMMA fArgsAny
          fArgs ::= * fArgsAny
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        STRING shift  213
                        LPAREN shift  46
                        RPAREN shift  210
                        RPAREN reduce 13  ** Parsing conflict **
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  70
                         fArgs shift  114
                      fArgsAny shift  115
                      funcName shift  131

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
     (13) fArgs ::= *
          fArgsAny ::= * expr
          fArgsAny ::= * STRING
          fArgsAny ::= * fArgsAny COMMA fArgsAny
          fArgs ::= * fArgsAny
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        STRING shift  213
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  70
                         fArgs shift  100
                      fArgsAny shift  115
                      funcName shift  131
                     {default} reduce 13

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
     (13) fArgs ::= *
          fArgsAny ::= * expr
          fArgsAny ::= * STRING
          fArgsAny ::= * fArgsAny COMMA fArgsAny
          fArgs ::= * fArgsAny
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          funcexpr ::= funcName LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        STRING shift  213
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  70
                         fArgs shift  113
                      fArgsAny shift  115
                      funcName shift  131
                     {default} reduce 13

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                 CONDITIONNAME shift  116
                      funcexpr shift  136
                          expr shift  61
                      funcName shift  131
                         lexpr shift  77

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                 CONDITIONNAME shift  116
                      funcexpr shift  136
                          expr shift  61
                      funcName shift  131
                         lexpr shift  78

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                 CONDITIONNAME shift  116
                      funcexpr shift  136
                          expr shift  61
                      funcName shift  131
                         lexpr shift  79

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  16
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                 CONDITIONNAME shift  116
                      funcexpr shift  136
                          expr shift  61
                      funcName shift  131
                         lexpr shift  214

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  16
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                 CONDITIONNAME shift  116
                      funcexpr shift  136
                          expr shift  61
                      funcName shift  131
                         lexpr shift  215

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                 CONDITIONNAME shift  116
                      funcexpr shift  136
                          expr shift  61
                      funcName shift  131
                         lexpr shift  117

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                 CONDITIONNAME shift  116
                      funcexpr shift  136
                          expr shift  61
                      funcName shift  131
                         lexpr shift  216

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= L2V LPAREN * lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                 CONDITIONNAME shift  116
                      funcexpr shift  136
                          expr shift  61
                      funcName shift  131
                         lexpr shift  83

State 21:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * SEMICOLON
          return_stmt ::= RETURN * exprList SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                     SEMICOLON shift  185
                      exprList shift  84
                      funcexpr shift  142
                          expr shift  71
                      funcName shift  131

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgsAny ::= * expr
          fArgsAny ::= * STRING
          fArgsAny ::= * fArgsAny COMMA fArgsAny
          fArgsAny ::= fArgsAny COMMA * fArgsAny
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        STRING shift  213
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  70
                      fArgsAny shift  212
                      funcName shift  131

State 23:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= FOR LPAREN nameList COLON * exprList RPAREN

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      exprList shift  85
                      funcexpr shift  142
                          expr shift  71
                      funcName shift  131

State 24:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      exprList shift  86
                      funcexpr shift  142
                          expr shift  71
                      funcName shift  131

State 25:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assignMulti_stmt ::= nameListMulti ASSIGN * exprList SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      exprList shift  88
                      funcexpr shift  142
                          expr shift  71
                      funcName shift  131

State 26:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          exprList ::= exprList COMMA * exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      exprList shift  207
                      funcexpr shift  142
                          expr shift  71
                      funcName shift  131

State 27:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      exprList shift  90
                      funcexpr shift  142
                          expr shift  71
                      funcName shift  131

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= NAME ASSIGN * expr SEMICOLON

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  62
                      funcName shift  131

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  64
                      funcName shift  131

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  65
                      funcName shift  131

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  66
                      funcName shift  131

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  67
                      funcName shift  131

State 33:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  68
                      funcName shift  131

State 34:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  69
                      funcName shift  131

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  217
                      funcName shift  131

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  218
                      funcName shift  131

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  219
                      funcName shift  131

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  73
                      funcName shift  131

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  72
                      funcName shift  131

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  74
                      funcName shift  131

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  75
                      funcName shift  131

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  76
                      funcName shift  131

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  220
                      funcName shift  131

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  221
                      funcName shift  131

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  209
                      funcName shift  131

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  63
                      funcName shift  131

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  82
                      funcName shift  131

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  37
                         MINUS shift  36
                        BITNOT shift  35
                        NUMBER shift  229
                          NAME shift  91
                        LPAREN shift  46
                           L2V shift  130
                     MAPSTRING shift  129
                          UNIT shift  126
                        SWITCH shift  123
                      LOCATION shift  120
                      funcexpr shift  136
                          expr shift  81
                      funcName shift  131

State 49:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
     (63) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  108
                          ELSE reduce 63  ** Parsing conflict **
                    elif_start shift  107
                   elif_header shift  4
                   else_header shift  1
                     {default} reduce 63

State 50:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          function_header ::= function_start LPAREN * nameList RPAREN
          function_header ::= function_start LPAREN * RPAREN

                          NAME shift  148
                        RPAREN shift  203
                 nameListMulti shift  146
                      nameList shift  110

State 51:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          import_chunk ::= FROM NAME IMPORT * nameList

                          NAME shift  148
                 nameListMulti shift  146
                      nameList shift  154

State 52:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          foreach_header ::= FOR LPAREN * nameList COLON exprList RPAREN

                          NAME shift  148
                 nameListMulti shift  146
                      nameList shift  104

State 53:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          vdef_stmt ::= VAR * nameList SEMICOLON
          vdefAssign_stmt ::= VAR * nameList ASSIGN exprList SEMICOLON

                          NAME shift  148
                 nameListMulti shift  146
                      nameList shift  87

State 54:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          cdef_stmt ::= CONST * nameList ASSIGN exprList SEMICOLON

                          NAME shift  148
                 nameListMulti shift  146
                      nameList shift  143

State 55:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          vdef_stmt ::= VAR * nameList SEMICOLON

                          NAME shift  148
                 nameListMulti shift  146
                      nameList shift  144

State 56:
          rbracket ::= * RBRACKET
          stmt ::= lbracket return_stmt * rbracket

                      RBRACKET shift  162
                      rbracket shift  158

State 57:
          rbracket ::= * RBRACKET
          stmt ::= lbracket bodyStmtList return_stmt * rbracket

                      RBRACKET shift  162
                      rbracket shift  160

State 58:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
     (84) actionStmt ::= actions *

                    ACTIONNAME shift  101
                    ACTIONNAME reduce 84  ** Parsing conflict **
                        action shift  182
                     {default} reduce 84

State 59:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
     (83) actionStmt ::= action *

                    ACTIONNAME shift  101
                    ACTIONNAME reduce 83  ** Parsing conflict **
                        action shift  183
                     {default} reduce 83

State 60:
          numList ::= * NUMBER COMMA NUMBER
          numList ::= * numList COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET * numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  93
                       numList shift  92

State 61:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  34
                            LE shift  32
                            LT shift  31
                            GE shift  30
                            GT shift  29
                            NE shift  33
                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43

State 62:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          assign_stmt ::= NAME ASSIGN expr * SEMICOLON

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     SEMICOLON shift  202

State 63:
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                        RPAREN shift  227

State 64:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (46) lexpr ::= expr GT expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 46

State 65:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (45) lexpr ::= expr GE expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 45

State 66:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (44) lexpr ::= expr LT expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 44

State 67:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (43) lexpr ::= expr LE expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 43

State 68:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (42) lexpr ::= expr NE expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 42

State 69:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (41) lexpr ::= expr EQ expr *

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 41

State 70:
     (14) fArgsAny ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 14

State 71:
      (9) exprList ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  39
                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 9

State 72:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (36) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  38
                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 36

State 73:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (37) expr ::= expr BITXOR expr *

                        BITAND shift  40
                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 37

State 74:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (35) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  42
                        RSHIFT shift  41
                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 35

State 75:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (34) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 34

State 76:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (33) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  48
                         MINUS shift  47
                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 33

State 77:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  18
                          LAND shift  19
                        RPAREN shift  192

State 78:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  18
                          LAND shift  19
                        RPAREN shift  195

State 79:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  18
                          LAND shift  19
                        RPAREN shift  198

State 80:
          nameListMulti ::= NAME * COMMA NAME
     (18) funcName ::= NAME *
          funcName ::= NAME * PERIOD NAME
          assign_stmt ::= NAME * ASSIGN expr SEMICOLON

                         COMMA shift  147
                        ASSIGN shift  28
                        PERIOD shift  132
                     {default} reduce 18

State 81:
          expr ::= expr * PLUS expr
     (28) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 28

State 82:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (29) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  44
                      MULTIPLY shift  45
                           MOD shift  43
                     {default} reduce 29

State 83:
          expr ::= L2V LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  18
                          LAND shift  19
                        RPAREN shift  226

State 84:
          exprList ::= exprList * COMMA exprList
          return_stmt ::= RETURN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  186

State 85:
          exprList ::= exprList * COMMA exprList
          foreach_header ::= FOR LPAREN nameList COLON exprList * RPAREN

                         COMMA shift  26
                        RPAREN shift  190

State 86:
          exprList ::= exprList * COMMA exprList
          vdefAssign_stmt ::= VAR nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  200

State 87:
          vdef_stmt ::= VAR nameList * SEMICOLON
          vdefAssign_stmt ::= VAR nameList * ASSIGN exprList SEMICOLON

                        ASSIGN shift  24
                     SEMICOLON shift  234

State 88:
          exprList ::= exprList * COMMA exprList
          assignMulti_stmt ::= nameListMulti ASSIGN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  201

State 89:
          nameListMulti ::= nameListMulti * COMMA NAME
          assignMulti_stmt ::= nameListMulti * ASSIGN exprList SEMICOLON

                         COMMA shift  145
                        ASSIGN shift  25

State 90:
          exprList ::= exprList * COMMA exprList
          cdef_stmt ::= CONST nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  206

State 91:
     (12) expr ::= NAME *
     (18) funcName ::= NAME *
          funcName ::= NAME * PERIOD NAME

                        PERIOD shift  132
                        LPAREN reduce 18
                     {default} reduce 12

State 92:
          numList ::= numList * COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList * RSQBRACKET RSQBRACKET

                         COMMA shift  138
                    RSQBRACKET shift  137

State 93:
          numList ::= NUMBER * COMMA NUMBER
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                         COMMA shift  140
                    RSQBRACKET shift  139

State 94:
          import_chunk ::= FROM NAME * IMPORT nameList

                        IMPORT shift  51

State 95:
          import_chunk ::= FROM * NAME IMPORT nameList

                          NAME shift  94

State 96:
          stmt ::= lbracket error * RBRACKET

                      RBRACKET shift  157

State 97:
          bodyStmt ::= funcexpr * SEMICOLON

                     SEMICOLON shift  174

State 98:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  181

State 99:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  184

State 100:
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                        RPAREN shift  99

State 101:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  11

State 102:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  187

State 103:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  188

State 104:
          foreach_header ::= FOR LPAREN nameList * COLON exprList RPAREN

                         COLON shift  23

State 105:
          foreach_header ::= FOR * LPAREN nameList COLON exprList RPAREN

                        LPAREN shift  52

State 106:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  13

State 107:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  14

State 108:
          elif_start ::= ELSE * IF
     (62) else_header ::= ELSE *

                            IF shift  196
                            IF reduce 62  ** Parsing conflict **
                     {default} reduce 62

State 109:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  15

State 110:
          function_header ::= function_start LPAREN nameList * RPAREN

                        RPAREN shift  204

State 111:
          function_header ::= function_start * LPAREN nameList RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  50

State 112:
          function_start ::= FUNCTION * NAME

                          NAME shift  205

State 113:
          funcexpr ::= funcName LPAREN fArgs * RPAREN

                        RPAREN shift  208

State 114:
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  211

State 115:
          fArgsAny ::= fArgsAny * COMMA fArgsAny
     (17) fArgs ::= fArgsAny *

                         COMMA shift  22
                     {default} reduce 17

State 116:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  10

State 117:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (48) lexpr ::= lexpr LOR lexpr *

                          LAND shift  19
                     {default} reduce 48

State 118:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  222

State 119:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  118

State 120:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  119

State 121:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  223

State 122:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  121

State 123:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  122

State 124:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  224

State 125:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  124

State 126:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  125

State 127:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  225

State 128:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  127

State 129:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  128

State 130:
          expr ::= L2V * LPAREN lexpr RPAREN

                        LPAREN shift  20

State 131:
          funcexpr ::= funcName * LPAREN fArgs RPAREN

                        LPAREN shift  12

State 132:
          funcName ::= NAME PERIOD * NAME

                          NAME shift  228

State 133:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  139

State 134:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  133

State 135:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  134

State 136:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (21) expr ::= funcexpr *

                    LSQBRACKET shift  135
                     {default} reduce 21

State 137:
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  230

State 138:
          numList ::= numList COMMA * NUMBER

                        NUMBER shift  231

State 139:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  232

State 140:
          numList ::= NUMBER COMMA * NUMBER

                        NUMBER shift  233

State 141:
          exprList ::= funcexpr LSQBRACKET * LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  60

State 142:
          exprList ::= funcexpr * LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (21) expr ::= funcexpr *

                    LSQBRACKET shift  141
                     {default} reduce 21

State 143:
          cdef_stmt ::= CONST nameList * ASSIGN exprList SEMICOLON

                        ASSIGN shift  27

State 144:
          vdef_stmt ::= VAR nameList * SEMICOLON

                     SEMICOLON shift  234

State 145:
          nameListMulti ::= nameListMulti COMMA * NAME

                          NAME shift  235

State 146:
          nameListMulti ::= nameListMulti * COMMA NAME
      (6) nameList ::= nameListMulti *

                         COMMA shift  145
                     {default} reduce 6

State 147:
          nameListMulti ::= NAME COMMA * NAME

                          NAME shift  236

State 148:
          nameListMulti ::= NAME * COMMA NAME
      (5) nameList ::= NAME *

                         COMMA shift  147
                     {default} reduce 5

State 149:
    (116) chunks ::= chunks chunk *

                     {default} reduce 116

State 150:
    (114) chunk ::= cdef_stmt *

                     {default} reduce 114

State 151:
    (113) chunk ::= vdef_stmt *

                     {default} reduce 113

State 152:
    (112) chunk ::= fdef_chunk *

                     {default} reduce 112

State 153:
    (111) chunk ::= import_chunk *

                     {default} reduce 111

State 154:
    (110) import_chunk ::= FROM NAME IMPORT nameList *

                     {default} reduce 110

State 155:
     (75) fdef_chunk ::= function_header stmt *

                     {default} reduce 75

State 156:
     (64) if_stmt ::= if_block else_header stmt *

                     {default} reduce 64

State 157:
    (109) stmt ::= lbracket error RBRACKET *

                     {default} reduce 109

State 158:
    (106) stmt ::= lbracket return_stmt rbracket *

                     {default} reduce 106

State 159:
    (105) stmt ::= lbracket RBRACKET *

                     {default} reduce 105

State 160:
    (108) stmt ::= lbracket bodyStmtList return_stmt rbracket *

                     {default} reduce 108

State 161:
    (107) stmt ::= lbracket bodyStmtList rbracket *

                     {default} reduce 107

State 162:
    (102) rbracket ::= RBRACKET *

                     {default} reduce 102

State 163:
    (100) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 100

State 164:
     (99) bodyStmtList ::= bodyStmt *

                     {default} reduce 99

State 165:
    (104) stmt ::= return_stmt *

                     {default} reduce 104

State 166:
    (103) stmt ::= bodyStmt *

                     {default} reduce 103

State 167:
    (101) lbracket ::= LBRACKET *

                     {default} reduce 101

State 168:
     (98) bodyStmt ::= break_stmt *

                     {default} reduce 98

State 169:
     (97) bodyStmt ::= continue_stmt *

                     {default} reduce 97

State 170:
     (96) bodyStmt ::= foreach_stmt *

                     {default} reduce 96

State 171:
     (95) bodyStmt ::= while_stmt *

                     {default} reduce 95

State 172:
     (94) bodyStmt ::= if_stmt *

                     {default} reduce 94

State 173:
     (93) bodyStmt ::= actionStmt *

                     {default} reduce 93

State 174:
     (92) bodyStmt ::= funcexpr SEMICOLON *

                     {default} reduce 92

State 175:
     (91) bodyStmt ::= assignMulti_stmt *

                     {default} reduce 91

State 176:
     (90) bodyStmt ::= assign_stmt *

                     {default} reduce 90

State 177:
     (89) bodyStmt ::= cdef_stmt *

                     {default} reduce 89

State 178:
     (88) bodyStmt ::= vdefAssign_stmt *

                     {default} reduce 88

State 179:
     (87) bodyStmt ::= vdef_stmt *

                     {default} reduce 87

State 180:
     (86) bodyStmt ::= SEMICOLON *

                     {default} reduce 86

State 181:
     (85) stmt ::= error SEMICOLON *

                     {default} reduce 85

State 182:
     (82) actions ::= actions action *

                     {default} reduce 82

State 183:
     (81) actions ::= action action *

                     {default} reduce 81

State 184:
     (80) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 80

State 185:
     (76) return_stmt ::= RETURN SEMICOLON *

                     {default} reduce 76

State 186:
     (77) return_stmt ::= RETURN exprList SEMICOLON *

                     {default} reduce 77

State 187:
     (71) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 71

State 188:
     (70) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 70

State 189:
     (69) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 69

State 190:
     (68) foreach_header ::= FOR LPAREN nameList COLON exprList RPAREN *

                     {default} reduce 68

State 191:
     (67) while_stmt ::= while_header stmt *

                     {default} reduce 67

State 192:
     (66) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 66

State 193:
     (65) while_start ::= WHILE *

                     {default} reduce 65

State 194:
     (61) if_block ::= if_block elif_header stmt *

                     {default} reduce 61

State 195:
     (60) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 60

State 196:
     (59) elif_start ::= ELSE IF *

                     {default} reduce 59

State 197:
     (58) if_block ::= if_header stmt *

                     {default} reduce 58

State 198:
     (57) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 57

State 199:
     (56) if_start ::= IF *

                     {default} reduce 56

State 200:
     (52) vdefAssign_stmt ::= VAR nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 52

State 201:
     (55) assignMulti_stmt ::= nameListMulti ASSIGN exprList SEMICOLON *

                     {default} reduce 55

State 202:
     (54) assign_stmt ::= NAME ASSIGN expr SEMICOLON *

                     {default} reduce 54

State 203:
     (74) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 74

State 204:
     (73) function_header ::= function_start LPAREN nameList RPAREN *

                     {default} reduce 73

State 205:
     (72) function_start ::= FUNCTION NAME *

                     {default} reduce 72

State 206:
     (53) cdef_stmt ::= CONST nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 53

State 207:
          exprList ::= exprList * COMMA exprList
     (10) exprList ::= exprList COMMA exprList *

                     {default} reduce 10

State 208:
     (20) funcexpr ::= funcName LPAREN fArgs RPAREN *

                     {default} reduce 20

State 209:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (30) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 30

State 210:
     (79) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 79

State 211:
     (78) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 78

State 212:
          fArgsAny ::= fArgsAny * COMMA fArgsAny
     (16) fArgsAny ::= fArgsAny COMMA fArgsAny *

                     {default} reduce 16

State 213:
     (15) fArgsAny ::= STRING *

                     {default} reduce 15

State 214:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (49) lexpr ::= LNOT lexpr *
     (50) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 50

State 215:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (49) lexpr ::= LNOT lexpr *

                     {default} reduce 49

State 216:
          lexpr ::= lexpr * LAND lexpr
     (47) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 47

State 217:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (40) expr ::= BITNOT expr *

                     {default} reduce 40

State 218:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (39) expr ::= MINUS expr *

                     {default} reduce 39

State 219:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (38) expr ::= PLUS expr *

                     {default} reduce 38

State 220:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (32) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 32

State 221:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (31) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 31

State 222:
     (27) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 27

State 223:
     (26) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 26

State 224:
     (25) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 25

State 225:
     (24) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 24

State 226:
     (23) expr ::= L2V LPAREN lexpr RPAREN *

                     {default} reduce 23

State 227:
     (22) expr ::= LPAREN expr RPAREN *

                     {default} reduce 22

State 228:
     (19) funcName ::= NAME PERIOD NAME *

                     {default} reduce 19

State 229:
     (11) expr ::= NUMBER *

                     {default} reduce 11

State 230:
      (7) exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET *

                     {default} reduce 7

State 231:
      (2) numList ::= numList COMMA NUMBER *

                     {default} reduce 2

State 232:
      (8) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 8

State 233:
      (1) numList ::= NUMBER COMMA NUMBER *

                     {default} reduce 1

State 234:
     (51) vdef_stmt ::= VAR nameList SEMICOLON *

                     {default} reduce 51

State 235:
      (4) nameListMulti ::= nameListMulti COMMA NAME *

                     {default} reduce 4

State 236:
      (3) nameListMulti ::= NAME COMMA NAME *

                     {default} reduce 3

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: LSQBRACKET
   28: RSQBRACKET
   29: STRING
   30: PERIOD
   31: LPAREN
   32: RPAREN
   33: FUNCCALL
   34: L2V
   35: MAPSTRING
   36: UNIT
   37: SWITCH
   38: LOCATION
   39: VAR
   40: SEMICOLON
   41: CONST
   42: IF
   43: ELSE
   44: WHILE
   45: FOR
   46: COLON
   47: CONTINUE
   48: BREAK
   49: FUNCTION
   50: RETURN
   51: CONDITIONNAME
   52: ACTIONNAME
   53: LBRACKET
   54: RBRACKET
   55: FROM
   56: IMPORT
   57: error:
   58: nt:
   59: program: <lambda> VAR CONST FUNCTION FROM
   60: chunks: <lambda> VAR CONST FUNCTION FROM
   61: numList: NUMBER
   62: nameListMulti: NAME
   63: nameList: NAME
   64: exprList: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   65: funcexpr: NAME
   66: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   67: fArgs: <lambda> PLUS MINUS BITNOT NUMBER NAME STRING LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   68: fArgsAny: PLUS MINUS BITNOT NUMBER NAME STRING LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   69: funcName: NAME
   70: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
   71: vdef_stmt: VAR
   72: vdefAssign_stmt: VAR
   73: cdef_stmt: CONST
   74: assign_stmt: NAME
   75: assignMulti_stmt: NAME
   76: if_start: IF
   77: if_header: IF
   78: if_block: IF
   79: stmt: NAME VAR SEMICOLON CONST IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME LBRACKET
   80: elif_start: ELSE
   81: elif_header: ELSE
   82: else_header: ELSE
   83: if_stmt: IF
   84: while_start: WHILE
   85: while_header: WHILE
   86: while_stmt: WHILE
   87: foreach_header: FOR
   88: foreach_stmt: FOR
   89: continue_stmt: CONTINUE
   90: break_stmt: BREAK
   91: function_start: FUNCTION
   92: function_header: FUNCTION
   93: fdef_chunk: FUNCTION
   94: return_stmt: RETURN
   95: action: ACTIONNAME
   96: actions: ACTIONNAME
   97: actionStmt: ACTIONNAME
   98: bodyStmt: NAME VAR SEMICOLON CONST IF WHILE FOR CONTINUE BREAK ACTIONNAME
   99: bodyStmtList: NAME VAR SEMICOLON CONST IF WHILE FOR CONTINUE BREAK ACTIONNAME
  100: lbracket: LBRACKET
  101: rbracket: RBRACKET
  102: import_chunk: FROM
  103: chunk: VAR CONST FUNCTION FROM
