State 0:
          program ::= * chunks
     (87) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  8
                     {default} reduce 87

State 1:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          stmtList ::= * stmt
          stmtList ::= * stmtList stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET * stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          block ::= LBRACKET * error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          actionStmt ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  73
                        LPAREN shift  42
                           VAR shift  46
                     SEMICOLON shift  134
                      LBRACKET shift  1
                            IF shift  152
                         WHILE shift  145
                           FOR shift  93
                      CONTINUE shift  92
                         BREAK shift  91
                        RETURN shift  9
                    ACTIONNAME shift  90
                         error shift  74
                      nameList shift  81
                      funcexpr shift  102
                          expr shift  51
                     vdef_stmt shift  133
               vdefAssign_stmt shift  132
                vdefMulti_stmt shift  130
          vdefMultiAssign_stmt shift  131
                   assign_stmt shift  129
              assignMulti_stmt shift  128
                      stmtList shift  2
                          stmt shift  155
                         block shift  120
                      if_start shift  97
                     if_header shift  6
                       if_stmt shift  126
                   else_header shift  5
                   while_start shift  94
                  while_header shift  4
                    while_stmt shift  125
                foreach_header shift  3
                  foreach_stmt shift  124
                 continue_stmt shift  123
                    break_stmt shift  122
                   return_stmt shift  121
                    actionStmt shift  127

State 2:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          stmtList ::= stmtList * stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET stmtList * RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          actionStmt ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  73
                        LPAREN shift  42
                           VAR shift  46
                     SEMICOLON shift  134
                      LBRACKET shift  1
                      RBRACKET shift  153
                            IF shift  152
                         WHILE shift  145
                           FOR shift  93
                      CONTINUE shift  92
                         BREAK shift  91
                        RETURN shift  9
                    ACTIONNAME shift  90
                         error shift  88
                      nameList shift  81
                      funcexpr shift  102
                          expr shift  51
                     vdef_stmt shift  133
               vdefAssign_stmt shift  132
                vdefMulti_stmt shift  130
          vdefMultiAssign_stmt shift  131
                   assign_stmt shift  129
              assignMulti_stmt shift  128
                          stmt shift  154
                         block shift  120
                      if_start shift  97
                     if_header shift  6
                       if_stmt shift  126
                   else_header shift  5
                   while_start shift  94
                  while_header shift  4
                    while_stmt shift  125
                foreach_header shift  3
                  foreach_stmt shift  124
                 continue_stmt shift  123
                    break_stmt shift  122
                   return_stmt shift  121
                    actionStmt shift  127

State 3:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          actionStmt ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  73
                        LPAREN shift  42
                           VAR shift  46
                     SEMICOLON shift  134
                      LBRACKET shift  1
                            IF shift  152
                         WHILE shift  145
                           FOR shift  93
                      CONTINUE shift  92
                         BREAK shift  91
                        RETURN shift  9
                    ACTIONNAME shift  90
                         error shift  88
                      nameList shift  81
                      funcexpr shift  102
                          expr shift  51
                     vdef_stmt shift  133
               vdefAssign_stmt shift  132
                vdefMulti_stmt shift  130
          vdefMultiAssign_stmt shift  131
                   assign_stmt shift  129
              assignMulti_stmt shift  128
                          stmt shift  141
                         block shift  120
                      if_start shift  97
                     if_header shift  6
                       if_stmt shift  126
                   else_header shift  5
                   while_start shift  94
                  while_header shift  4
                    while_stmt shift  125
                foreach_header shift  3
                  foreach_stmt shift  124
                 continue_stmt shift  123
                    break_stmt shift  122
                   return_stmt shift  121
                    actionStmt shift  127

State 4:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          actionStmt ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  73
                        LPAREN shift  42
                           VAR shift  46
                     SEMICOLON shift  134
                      LBRACKET shift  1
                            IF shift  152
                         WHILE shift  145
                           FOR shift  93
                      CONTINUE shift  92
                         BREAK shift  91
                        RETURN shift  9
                    ACTIONNAME shift  90
                         error shift  88
                      nameList shift  81
                      funcexpr shift  102
                          expr shift  51
                     vdef_stmt shift  133
               vdefAssign_stmt shift  132
                vdefMulti_stmt shift  130
          vdefMultiAssign_stmt shift  131
                   assign_stmt shift  129
              assignMulti_stmt shift  128
                          stmt shift  143
                         block shift  120
                      if_start shift  97
                     if_header shift  6
                       if_stmt shift  126
                   else_header shift  5
                   while_start shift  94
                  while_header shift  4
                    while_stmt shift  125
                foreach_header shift  3
                  foreach_stmt shift  124
                 continue_stmt shift  123
                    break_stmt shift  122
                   return_stmt shift  121
                    actionStmt shift  127

State 5:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          if_stmt ::= else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          actionStmt ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  73
                        LPAREN shift  42
                           VAR shift  46
                     SEMICOLON shift  134
                      LBRACKET shift  1
                            IF shift  152
                         WHILE shift  145
                           FOR shift  93
                      CONTINUE shift  92
                         BREAK shift  91
                        RETURN shift  9
                    ACTIONNAME shift  90
                         error shift  88
                      nameList shift  81
                      funcexpr shift  102
                          expr shift  51
                     vdef_stmt shift  133
               vdefAssign_stmt shift  132
                vdefMulti_stmt shift  130
          vdefMultiAssign_stmt shift  131
                   assign_stmt shift  129
              assignMulti_stmt shift  128
                          stmt shift  146
                         block shift  120
                      if_start shift  97
                     if_header shift  6
                       if_stmt shift  126
                   else_header shift  5
                   while_start shift  94
                  while_header shift  4
                    while_stmt shift  125
                foreach_header shift  3
                  foreach_stmt shift  124
                 continue_stmt shift  123
                    break_stmt shift  122
                   return_stmt shift  121
                    actionStmt shift  127

State 6:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          if_stmt ::= if_header * stmt
          else_header ::= * if_header stmt ELSE
          else_header ::= if_header * stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          actionStmt ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  73
                        LPAREN shift  42
                           VAR shift  46
                     SEMICOLON shift  134
                      LBRACKET shift  1
                            IF shift  152
                         WHILE shift  145
                           FOR shift  93
                      CONTINUE shift  92
                         BREAK shift  91
                        RETURN shift  9
                    ACTIONNAME shift  90
                         error shift  88
                      nameList shift  81
                      funcexpr shift  102
                          expr shift  51
                     vdef_stmt shift  133
               vdefAssign_stmt shift  132
                vdefMulti_stmt shift  130
          vdefMultiAssign_stmt shift  131
                   assign_stmt shift  129
              assignMulti_stmt shift  128
                          stmt shift  95
                         block shift  120
                      if_start shift  97
                     if_header shift  6
                       if_stmt shift  126
                   else_header shift  5
                   while_start shift  94
                  while_header shift  4
                    while_stmt shift  125
                foreach_header shift  3
                  foreach_stmt shift  124
                 continue_stmt shift  123
                    break_stmt shift  122
                   return_stmt shift  121
                    actionStmt shift  127

State 7:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          fdef_chunk ::= function_header * stmt
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          actionStmt ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  73
                        LPAREN shift  42
                           VAR shift  46
                     SEMICOLON shift  134
                      LBRACKET shift  1
                            IF shift  152
                         WHILE shift  145
                           FOR shift  93
                      CONTINUE shift  92
                         BREAK shift  91
                        RETURN shift  9
                    ACTIONNAME shift  90
                         error shift  88
                      nameList shift  81
                      funcexpr shift  102
                          expr shift  51
                     vdef_stmt shift  133
               vdefAssign_stmt shift  132
                vdefMulti_stmt shift  130
          vdefMultiAssign_stmt shift  131
                   assign_stmt shift  129
              assignMulti_stmt shift  128
                          stmt shift  118
                         block shift  120
                      if_start shift  97
                     if_header shift  6
                       if_stmt shift  126
                   else_header shift  5
                   while_start shift  94
                  while_header shift  4
                    while_stmt shift  125
                foreach_header shift  3
                  foreach_stmt shift  124
                 continue_stmt shift  123
                    break_stmt shift  122
                   return_stmt shift  121
                    actionStmt shift  127

State 8:
      (0) program ::= chunks *
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * vdefMulti_stmt
          chunks ::= chunks * chunk

                             $ reduce 0
                           VAR shift  48
                      FUNCTION shift  111
                     vdef_stmt shift  116
                vdefMulti_stmt shift  115
                function_start shift  110
               function_header shift  7
                    fdef_chunk shift  117
                         chunk shift  114

State 9:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * SEMICOLON
          return_stmt ::= RETURN * exprList SEMICOLON

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                     SEMICOLON shift  137
                      exprList shift  76
                      funcexpr shift  108
                          expr shift  61

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN

                          LNOT shift  12
                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  49
                         lexpr shift  67

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr

                          LNOT shift  11
                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  49
                         lexpr shift  149

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr

                          LNOT shift  11
                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  49
                         lexpr shift  150

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr

                          LNOT shift  12
                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  49
                         lexpr shift  96

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr

                          LNOT shift  12
                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  49
                         lexpr shift  151

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN

                          LNOT shift  12
                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  49
                         lexpr shift  68

State 16:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= NAME LPAREN * exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          funcexpr ::= NAME LPAREN * RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                        RPAREN shift  161
                      exprList shift  82
                      funcexpr shift  108
                          expr shift  61

State 17:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          actionStmt ::= ACTIONNAME LPAREN * exprList RPAREN SEMICOLON

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      exprList shift  75
                      funcexpr shift  108
                          expr shift  61

State 18:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= FOR LPAREN nameList COLON * exprList RPAREN

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      exprList shift  77
                      funcexpr shift  108
                          expr shift  61

State 19:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefMultiAssign_stmt ::= VAR nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      exprList shift  79
                      funcexpr shift  108
                          expr shift  61

State 20:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assignMulti_stmt ::= nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      exprList shift  80
                      funcexpr shift  108
                          expr shift  61

State 21:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  54

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  55

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  56

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  57

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  58

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  59

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR NAME ASSIGN * expr SEMICOLON

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  50

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= NAME ASSIGN * expr SEMICOLON

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  52

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= exprList COMMA * expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  60

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  163

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  164

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  165

State 33:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  63

State 34:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  62

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  64

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  65

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  66

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  166

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  167

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  168

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  72

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  53

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  31
                        BITNOT shift  30
                        NUMBER shift  170
                          NAME shift  98
                        LPAREN shift  42
                      funcexpr shift  102
                          expr shift  71

State 44:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          function_header ::= function_start LPAREN * nameList RPAREN
          function_header ::= function_start LPAREN * RPAREN

                          NAME shift  109
                        RPAREN shift  175
                      nameList shift  85

State 45:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          foreach_header ::= FOR LPAREN * nameList COLON exprList RPAREN

                          NAME shift  109
                      nameList shift  78

State 46:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefAssign_stmt ::= VAR * NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= VAR * nameList SEMICOLON
          vdefMultiAssign_stmt ::= VAR * nameList ASSIGN exprList SEMICOLON

                          NAME shift  70
                      nameList shift  69

State 47:
          numList ::= * NUMBER COMMA NUMBER
          numList ::= * numList COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET * numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  84
                       numList shift  83

State 48:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefMulti_stmt ::= VAR * nameList SEMICOLON

                          NAME shift  87
                      nameList shift  86

State 49:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  26
                            LE shift  24
                            LT shift  23
                            GE shift  22
                            GT shift  21
                            NE shift  25
                         BITOR shift  34
                        BITXOR shift  33
                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38

State 50:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          vdefAssign_stmt ::= VAR NAME ASSIGN expr * SEMICOLON

                         BITOR shift  34
                        BITXOR shift  33
                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     SEMICOLON shift  157

State 51:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          stmt ::= expr * SEMICOLON

                         BITOR shift  34
                        BITXOR shift  33
                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     SEMICOLON shift  158

State 52:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          assign_stmt ::= NAME ASSIGN expr * SEMICOLON

                         BITOR shift  34
                        BITXOR shift  33
                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     SEMICOLON shift  160

State 53:
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  34
                        BITXOR shift  33
                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                        RPAREN shift  169

State 54:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (33) lexpr ::= expr GT expr *

                         BITOR shift  34
                        BITXOR shift  33
                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 33

State 55:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (32) lexpr ::= expr GE expr *

                         BITOR shift  34
                        BITXOR shift  33
                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 32

State 56:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (31) lexpr ::= expr LT expr *

                         BITOR shift  34
                        BITXOR shift  33
                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 31

State 57:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (30) lexpr ::= expr LE expr *

                         BITOR shift  34
                        BITXOR shift  33
                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 30

State 58:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (29) lexpr ::= expr NE expr *

                         BITOR shift  34
                        BITXOR shift  33
                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 29

State 59:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (28) lexpr ::= expr EQ expr *

                         BITOR shift  34
                        BITXOR shift  33
                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 28

State 60:
      (8) exprList ::= exprList COMMA expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  34
                        BITXOR shift  33
                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 8

State 61:
      (7) exprList ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  34
                        BITXOR shift  33
                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 7

State 62:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (23) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  33
                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 23

State 63:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (24) expr ::= expr BITXOR expr *

                        BITAND shift  35
                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 24

State 64:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (22) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  37
                        RSHIFT shift  36
                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 22

State 65:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (21) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 21

State 66:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (20) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  43
                         MINUS shift  41
                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 20

State 67:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  13
                          LAND shift  14
                        RPAREN shift  144

State 68:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  13
                          LAND shift  14
                        RPAREN shift  148

State 69:
          nameList ::= nameList * COMMA NAME
          vdefMulti_stmt ::= VAR nameList * SEMICOLON
          vdefMultiAssign_stmt ::= VAR nameList * ASSIGN exprList SEMICOLON

                         COMMA shift  112
                        ASSIGN shift  19
                     SEMICOLON shift  178

State 70:
          nameList ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON
          vdefAssign_stmt ::= VAR NAME * ASSIGN expr SEMICOLON

                         COMMA shift  113
                        ASSIGN shift  27
                     SEMICOLON shift  180

State 71:
          expr ::= expr * PLUS expr
     (15) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 15

State 72:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (16) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  39
                      MULTIPLY shift  40
                           MOD shift  38
                     {default} reduce 16

State 73:
          nameList ::= NAME * COMMA NAME
     (10) expr ::= NAME *
          funcexpr ::= NAME * LPAREN exprList RPAREN
          funcexpr ::= NAME * LPAREN RPAREN
          assign_stmt ::= NAME * ASSIGN expr SEMICOLON

                         COMMA shift  113
                        ASSIGN shift  28
                        LPAREN shift  16
                     {default} reduce 10

State 74:
          block ::= LBRACKET error * RBRACKET
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  135
                      RBRACKET shift  119

State 75:
          exprList ::= exprList * COMMA expr
          actionStmt ::= ACTIONNAME LPAREN exprList * RPAREN SEMICOLON

                         COMMA shift  29
                        RPAREN shift  89

State 76:
          exprList ::= exprList * COMMA expr
          return_stmt ::= RETURN exprList * SEMICOLON

                         COMMA shift  29
                     SEMICOLON shift  138

State 77:
          exprList ::= exprList * COMMA expr
          foreach_header ::= FOR LPAREN nameList COLON exprList * RPAREN

                         COMMA shift  29
                        RPAREN shift  142

State 78:
          nameList ::= nameList * COMMA NAME
          foreach_header ::= FOR LPAREN nameList * COLON exprList RPAREN

                         COMMA shift  112
                         COLON shift  18

State 79:
          exprList ::= exprList * COMMA expr
          vdefMultiAssign_stmt ::= VAR nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  29
                     SEMICOLON shift  156

State 80:
          exprList ::= exprList * COMMA expr
          assignMulti_stmt ::= nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  29
                     SEMICOLON shift  159

State 81:
          nameList ::= nameList * COMMA NAME
          assignMulti_stmt ::= nameList * ASSIGN exprList SEMICOLON

                         COMMA shift  112
                        ASSIGN shift  20

State 82:
          exprList ::= exprList * COMMA expr
          funcexpr ::= NAME LPAREN exprList * RPAREN

                         COMMA shift  29
                        RPAREN shift  162

State 83:
          numList ::= numList * COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList * RSQBRACKET RSQBRACKET

                         COMMA shift  104
                    RSQBRACKET shift  103

State 84:
          numList ::= NUMBER * COMMA NUMBER
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                         COMMA shift  106
                    RSQBRACKET shift  105

State 85:
          nameList ::= nameList * COMMA NAME
          function_header ::= function_start LPAREN nameList * RPAREN

                         COMMA shift  112
                        RPAREN shift  176

State 86:
          nameList ::= nameList * COMMA NAME
          vdefMulti_stmt ::= VAR nameList * SEMICOLON

                         COMMA shift  112
                     SEMICOLON shift  178

State 87:
          nameList ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON

                         COMMA shift  113
                     SEMICOLON shift  180

State 88:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  135

State 89:
          actionStmt ::= ACTIONNAME LPAREN exprList RPAREN * SEMICOLON

                     SEMICOLON shift  136

State 90:
          actionStmt ::= ACTIONNAME * LPAREN exprList RPAREN SEMICOLON

                        LPAREN shift  17

State 91:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  139

State 92:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  140

State 93:
          foreach_header ::= FOR * LPAREN nameList COLON exprList RPAREN

                        LPAREN shift  45

State 94:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  10

State 95:
     (50) if_stmt ::= if_header stmt *
          else_header ::= if_header stmt * ELSE

                          ELSE shift  147
                          ELSE reduce 50  ** Parsing conflict **
                     {default} reduce 50

State 96:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (35) lexpr ::= lexpr LOR lexpr *

                          LAND shift  14
                     {default} reduce 35

State 97:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  15

State 98:
     (10) expr ::= NAME *
          funcexpr ::= NAME * LPAREN exprList RPAREN
          funcexpr ::= NAME * LPAREN RPAREN

                        LPAREN shift  16
                     {default} reduce 10

State 99:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  105

State 100:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  99

State 101:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  100

State 102:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (13) expr ::= funcexpr *

                    LSQBRACKET shift  101
                     {default} reduce 13

State 103:
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  171

State 104:
          numList ::= numList COMMA * NUMBER

                        NUMBER shift  172

State 105:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  173

State 106:
          numList ::= NUMBER COMMA * NUMBER

                        NUMBER shift  174

State 107:
          exprList ::= funcexpr LSQBRACKET * LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  47

State 108:
          exprList ::= funcexpr * LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (13) expr ::= funcexpr *

                    LSQBRACKET shift  107
                     {default} reduce 13

State 109:
          nameList ::= NAME * COMMA NAME

                         COMMA shift  113

State 110:
          function_header ::= function_start * LPAREN nameList RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  44

State 111:
          function_start ::= FUNCTION * NAME

                          NAME shift  177

State 112:
          nameList ::= nameList COMMA * NAME

                          NAME shift  179

State 113:
          nameList ::= NAME COMMA * NAME

                          NAME shift  181

State 114:
     (88) chunks ::= chunks chunk *

                     {default} reduce 88

State 115:
     (86) chunk ::= vdefMulti_stmt *

                     {default} reduce 86

State 116:
     (85) chunk ::= vdef_stmt *

                     {default} reduce 85

State 117:
     (84) chunk ::= fdef_chunk *

                     {default} reduce 84

State 118:
     (63) fdef_chunk ::= function_header stmt *

                     {default} reduce 63

State 119:
     (47) block ::= LBRACKET error RBRACKET *

                     {default} reduce 47

State 120:
     (83) stmt ::= block *

                     {default} reduce 83

State 121:
     (82) stmt ::= return_stmt *

                     {default} reduce 82

State 122:
     (81) stmt ::= break_stmt *

                     {default} reduce 81

State 123:
     (80) stmt ::= continue_stmt *

                     {default} reduce 80

State 124:
     (79) stmt ::= foreach_stmt *

                     {default} reduce 79

State 125:
     (78) stmt ::= while_stmt *

                     {default} reduce 78

State 126:
     (77) stmt ::= if_stmt *

                     {default} reduce 77

State 127:
     (76) stmt ::= actionStmt *

                     {default} reduce 76

State 128:
     (74) stmt ::= assignMulti_stmt *

                     {default} reduce 74

State 129:
     (73) stmt ::= assign_stmt *

                     {default} reduce 73

State 130:
     (72) stmt ::= vdefMulti_stmt *

                     {default} reduce 72

State 131:
     (71) stmt ::= vdefMultiAssign_stmt *

                     {default} reduce 71

State 132:
     (70) stmt ::= vdefAssign_stmt *

                     {default} reduce 70

State 133:
     (69) stmt ::= vdef_stmt *

                     {default} reduce 69

State 134:
     (68) stmt ::= SEMICOLON *

                     {default} reduce 68

State 135:
     (67) stmt ::= error SEMICOLON *

                     {default} reduce 67

State 136:
     (66) actionStmt ::= ACTIONNAME LPAREN exprList RPAREN SEMICOLON *

                     {default} reduce 66

State 137:
     (64) return_stmt ::= RETURN SEMICOLON *

                     {default} reduce 64

State 138:
     (65) return_stmt ::= RETURN exprList SEMICOLON *

                     {default} reduce 65

State 139:
     (59) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 59

State 140:
     (58) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 58

State 141:
     (57) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 57

State 142:
     (56) foreach_header ::= FOR LPAREN nameList COLON exprList RPAREN *

                     {default} reduce 56

State 143:
     (55) while_stmt ::= while_header stmt *

                     {default} reduce 55

State 144:
     (54) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 54

State 145:
     (53) while_start ::= WHILE *

                     {default} reduce 53

State 146:
     (52) if_stmt ::= else_header stmt *

                     {default} reduce 52

State 147:
     (51) else_header ::= if_header stmt ELSE *

                     {default} reduce 51

State 148:
     (49) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 49

State 149:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (36) lexpr ::= LNOT lexpr *
     (37) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 37

State 150:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (36) lexpr ::= LNOT lexpr *

                     {default} reduce 36

State 151:
          lexpr ::= lexpr * LAND lexpr
     (34) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 34

State 152:
     (48) if_start ::= IF *

                     {default} reduce 48

State 153:
     (46) block ::= LBRACKET stmtList RBRACKET *

                     {default} reduce 46

State 154:
     (45) stmtList ::= stmtList stmt *

                     {default} reduce 45

State 155:
     (44) stmtList ::= stmt *

                     {default} reduce 44

State 156:
     (41) vdefMultiAssign_stmt ::= VAR nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 41

State 157:
     (39) vdefAssign_stmt ::= VAR NAME ASSIGN expr SEMICOLON *

                     {default} reduce 39

State 158:
     (75) stmt ::= expr SEMICOLON *

                     {default} reduce 75

State 159:
     (43) assignMulti_stmt ::= nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 43

State 160:
     (42) assign_stmt ::= NAME ASSIGN expr SEMICOLON *

                     {default} reduce 42

State 161:
     (12) funcexpr ::= NAME LPAREN RPAREN *

                     {default} reduce 12

State 162:
     (11) funcexpr ::= NAME LPAREN exprList RPAREN *

                     {default} reduce 11

State 163:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (27) expr ::= BITNOT expr *

                     {default} reduce 27

State 164:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (26) expr ::= MINUS expr *

                     {default} reduce 26

State 165:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (25) expr ::= PLUS expr *

                     {default} reduce 25

State 166:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (19) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 19

State 167:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (18) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 18

State 168:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (17) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 17

State 169:
     (14) expr ::= LPAREN expr RPAREN *

                     {default} reduce 14

State 170:
      (9) expr ::= NUMBER *

                     {default} reduce 9

State 171:
      (5) exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET *

                     {default} reduce 5

State 172:
      (2) numList ::= numList COMMA NUMBER *

                     {default} reduce 2

State 173:
      (6) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 6

State 174:
      (1) numList ::= NUMBER COMMA NUMBER *

                     {default} reduce 1

State 175:
     (62) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 62

State 176:
     (61) function_header ::= function_start LPAREN nameList RPAREN *

                     {default} reduce 61

State 177:
     (60) function_start ::= FUNCTION NAME *

                     {default} reduce 60

State 178:
     (40) vdefMulti_stmt ::= VAR nameList SEMICOLON *

                     {default} reduce 40

State 179:
      (4) nameList ::= nameList COMMA NAME *

                     {default} reduce 4

State 180:
     (38) vdef_stmt ::= VAR NAME SEMICOLON *

                     {default} reduce 38

State 181:
      (3) nameList ::= NAME COMMA NAME *

                     {default} reduce 3

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: LSQBRACKET
   28: RSQBRACKET
   29: LPAREN
   30: RPAREN
   31: FUNCCALL
   32: VAR
   33: SEMICOLON
   34: LBRACKET
   35: RBRACKET
   36: IF
   37: IFX
   38: ELSE
   39: WHILE
   40: FOR
   41: COLON
   42: CONTINUE
   43: BREAK
   44: FUNCTION
   45: RETURN
   46: ACTIONNAME
   47: error:
   48: nt:
   49: program: <lambda> VAR FUNCTION
   50: chunks: <lambda> VAR FUNCTION
   51: numList: NUMBER
   52: nameList: NAME
   53: exprList: PLUS MINUS BITNOT NUMBER NAME LPAREN
   54: funcexpr: NAME
   55: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN
   56: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN
   57: vdef_stmt: VAR
   58: vdefAssign_stmt: VAR
   59: vdefMulti_stmt: VAR
   60: vdefMultiAssign_stmt: VAR
   61: assign_stmt: NAME
   62: assignMulti_stmt: NAME
   63: stmtList: PLUS MINUS BITNOT NUMBER NAME LPAREN VAR SEMICOLON LBRACKET IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   64: stmt: PLUS MINUS BITNOT NUMBER NAME LPAREN VAR SEMICOLON LBRACKET IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   65: block: LBRACKET
   66: if_start: IF
   67: if_header: IF
   68: if_stmt: IF
   69: else_header: IF
   70: while_start: WHILE
   71: while_header: WHILE
   72: while_stmt: WHILE
   73: foreach_header: FOR
   74: foreach_stmt: FOR
   75: continue_stmt: CONTINUE
   76: break_stmt: BREAK
   77: function_start: FUNCTION
   78: function_header: FUNCTION
   79: fdef_chunk: FUNCTION
   80: return_stmt: RETURN
   81: actionStmt: ACTIONNAME
   82: chunk: VAR FUNCTION
