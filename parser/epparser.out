State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  11
                     {default} reduce 1

State 1:
          lbracket ::= * LBRACKET
          rbracket ::= * RBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= lbracket bodyStmtList * rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket bodyStmtList * return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (170) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  120
                     SEMICOLON shift  307
                        LPAREN shift  64
                      LBRACKET shift  314
                      RBRACKET shift  312
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  263
                         WHILE shift  257
                           FOR shift  165
                       FOREACH shift  160
                      CONTINUE shift  239
                         BREAK shift  238
                        RETURN shift  20
                         error shift  292
                     vdef_stmt shift  214
                     blockStmt shift  308
                      bodyStmt shift  293
                   return_stmt shift  215
                      lbracket shift  2
                      rbracket shift  310
               vdefAssign_stmt shift  213
                     cdef_stmt shift  212
                   assign_stmt shift  211
                      funcexpr shift  152
                    actionStmt shift  300
                       if_stmt shift  299
                    while_stmt shift  298
                      for_stmt shift  297
                  foreach_stmt shift  296
                 continue_stmt shift  206
                    break_stmt shift  205
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  169
                     if_header shift  8
                      if_block shift  40
                   while_start shift  166
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 170

State 2:
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= lbracket * RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket * return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= lbracket * bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket * bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmt ::= lbracket * error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= * error
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (170) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  120
                     SEMICOLON shift  307
                        LPAREN shift  64
                      LBRACKET shift  314
                      RBRACKET shift  313
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  263
                         WHILE shift  257
                           FOR shift  165
                       FOREACH shift  160
                      CONTINUE shift  239
                         BREAK shift  238
                        RETURN shift  20
                         error shift  156
                     vdef_stmt shift  214
                     blockStmt shift  308
                      bodyStmt shift  231
                   return_stmt shift  216
                      lbracket shift  2
                  bodyStmtList shift  1
               vdefAssign_stmt shift  213
                     cdef_stmt shift  212
                   assign_stmt shift  211
                      funcexpr shift  152
                    actionStmt shift  300
                       if_stmt shift  299
                    while_stmt shift  298
                      for_stmt shift  297
                  foreach_stmt shift  296
                 continue_stmt shift  206
                    break_stmt shift  205
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  169
                     if_header shift  8
                      if_block shift  40
                   while_start shift  166
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 170

State 3:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (170) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  120
                     SEMICOLON shift  307
                        LPAREN shift  64
                      LBRACKET shift  314
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  263
                         WHILE shift  257
                           FOR shift  165
                       FOREACH shift  160
                      CONTINUE shift  239
                         BREAK shift  238
                        RETURN shift  20
                         error shift  218
                     vdef_stmt shift  214
                     blockStmt shift  308
                          stmt shift  233
                      bodyStmt shift  316
                   return_stmt shift  217
                      lbracket shift  2
               vdefAssign_stmt shift  213
                     cdef_stmt shift  212
                   assign_stmt shift  211
                      funcexpr shift  152
                    actionStmt shift  300
                       if_stmt shift  299
                    while_stmt shift  298
                      for_stmt shift  297
                  foreach_stmt shift  296
                 continue_stmt shift  206
                    break_stmt shift  205
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  169
                     if_header shift  8
                      if_block shift  40
                   while_start shift  166
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 170

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (170) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  120
                     SEMICOLON shift  307
                        LPAREN shift  64
                      LBRACKET shift  314
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  263
                         WHILE shift  257
                           FOR shift  165
                       FOREACH shift  160
                      CONTINUE shift  239
                         BREAK shift  238
                        RETURN shift  20
                         error shift  218
                     vdef_stmt shift  214
                     blockStmt shift  308
                          stmt shift  240
                      bodyStmt shift  316
                   return_stmt shift  217
                      lbracket shift  2
               vdefAssign_stmt shift  213
                     cdef_stmt shift  212
                   assign_stmt shift  211
                      funcexpr shift  152
                    actionStmt shift  300
                       if_stmt shift  299
                    while_stmt shift  298
                      for_stmt shift  297
                  foreach_stmt shift  296
                 continue_stmt shift  206
                    break_stmt shift  205
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  169
                     if_header shift  8
                      if_block shift  40
                   while_start shift  166
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 170

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          for_stmt ::= for_header * stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (170) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  120
                     SEMICOLON shift  307
                        LPAREN shift  64
                      LBRACKET shift  314
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  263
                         WHILE shift  257
                           FOR shift  165
                       FOREACH shift  160
                      CONTINUE shift  239
                         BREAK shift  238
                        RETURN shift  20
                         error shift  218
                     vdef_stmt shift  214
                     blockStmt shift  308
                          stmt shift  243
                      bodyStmt shift  316
                   return_stmt shift  217
                      lbracket shift  2
               vdefAssign_stmt shift  213
                     cdef_stmt shift  212
                   assign_stmt shift  211
                      funcexpr shift  152
                    actionStmt shift  300
                       if_stmt shift  299
                    while_stmt shift  298
                      for_stmt shift  297
                  foreach_stmt shift  296
                 continue_stmt shift  206
                    break_stmt shift  205
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  169
                     if_header shift  8
                      if_block shift  40
                   while_start shift  166
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 170

State 6:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (170) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  120
                     SEMICOLON shift  307
                        LPAREN shift  64
                      LBRACKET shift  314
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  263
                         WHILE shift  257
                           FOR shift  165
                       FOREACH shift  160
                      CONTINUE shift  239
                         BREAK shift  238
                        RETURN shift  20
                         error shift  218
                     vdef_stmt shift  214
                     blockStmt shift  308
                          stmt shift  255
                      bodyStmt shift  316
                   return_stmt shift  217
                      lbracket shift  2
               vdefAssign_stmt shift  213
                     cdef_stmt shift  212
                   assign_stmt shift  211
                      funcexpr shift  152
                    actionStmt shift  300
                       if_stmt shift  299
                    while_stmt shift  298
                      for_stmt shift  297
                  foreach_stmt shift  296
                 continue_stmt shift  206
                    break_stmt shift  205
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  169
                     if_header shift  8
                      if_block shift  40
                   while_start shift  166
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 170

State 7:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (170) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  120
                     SEMICOLON shift  307
                        LPAREN shift  64
                      LBRACKET shift  314
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  263
                         WHILE shift  257
                           FOR shift  165
                       FOREACH shift  160
                      CONTINUE shift  239
                         BREAK shift  238
                        RETURN shift  20
                         error shift  218
                     vdef_stmt shift  214
                     blockStmt shift  308
                          stmt shift  258
                      bodyStmt shift  316
                   return_stmt shift  217
                      lbracket shift  2
               vdefAssign_stmt shift  213
                     cdef_stmt shift  212
                   assign_stmt shift  211
                      funcexpr shift  152
                    actionStmt shift  300
                       if_stmt shift  299
                    while_stmt shift  298
                      for_stmt shift  297
                  foreach_stmt shift  296
                 continue_stmt shift  206
                    break_stmt shift  205
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  169
                     if_header shift  8
                      if_block shift  40
                   while_start shift  166
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 170

State 8:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (170) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  120
                     SEMICOLON shift  307
                        LPAREN shift  64
                      LBRACKET shift  314
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  263
                         WHILE shift  257
                           FOR shift  165
                       FOREACH shift  160
                      CONTINUE shift  239
                         BREAK shift  238
                        RETURN shift  20
                         error shift  218
                     vdef_stmt shift  214
                     blockStmt shift  308
                          stmt shift  261
                      bodyStmt shift  316
                   return_stmt shift  217
                      lbracket shift  2
               vdefAssign_stmt shift  213
                     cdef_stmt shift  212
                   assign_stmt shift  211
                      funcexpr shift  152
                    actionStmt shift  300
                       if_stmt shift  299
                    while_stmt shift  298
                      for_stmt shift  297
                  foreach_stmt shift  296
                 continue_stmt shift  206
                    break_stmt shift  205
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  169
                     if_header shift  8
                      if_block shift  40
                   while_start shift  166
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 170

State 9:
          fdef_chunk ::= fdef_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (170) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  120
                     SEMICOLON shift  307
                        LPAREN shift  64
                      LBRACKET shift  314
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                            IF shift  263
                         WHILE shift  257
                           FOR shift  165
                       FOREACH shift  160
                      CONTINUE shift  239
                         BREAK shift  238
                        RETURN shift  20
                         error shift  218
                     vdef_stmt shift  214
                     blockStmt shift  308
                          stmt shift  318
                      bodyStmt shift  316
                   return_stmt shift  217
                      lbracket shift  2
               vdefAssign_stmt shift  213
                     cdef_stmt shift  212
                   assign_stmt shift  211
                      funcexpr shift  152
                    actionStmt shift  300
                       if_stmt shift  299
                    while_stmt shift  298
                      for_stmt shift  297
                  foreach_stmt shift  296
                 continue_stmt shift  206
                    break_stmt shift  205
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
                      if_start shift  169
                     if_header shift  8
                      if_block shift  40
                   while_start shift  166
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  83
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 170

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt ::= * for_init_stmt_nonEmpty
    (149) for_init_stmt ::= *
          for_header1 ::= for_opener * for_init_stmt SEMICOLON

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  120
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                     vdef_stmt shift  253
               vdefAssign_stmt shift  252
                     cdef_stmt shift  251
                   assign_stmt shift  250
                      funcexpr shift  204
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
        for_init_stmt_nonEmpty shift  164
                 for_init_stmt shift  163
                     {default} reduce 149

State 11:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunk ::= * import_chunk SEMICOLON
          chunk ::= * fdef_chunk
          chunk ::= * fdecl_chunk
          chunk ::= * vdef_stmt SEMICOLON
          chunk ::= * vdefAssign_global_stmt SEMICOLON
          chunk ::= * cdef_global_stmt SEMICOLON
          chunk ::= * blockStmt
          import_chunk ::= * IMPORT dottedName AS NAME
          import_chunk ::= * IMPORT dottedName
          fdef_header ::= * FUNCTION NAME LPAREN nameList RPAREN
          fdef_chunk ::= * fdef_header stmt
          fdecl_chunk ::= * FUNCTION NAME LPAREN nameList RPAREN SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_global_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_global_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty

                             $ reduce 0
                        IMPORT shift  90
                      FUNCTION shift  224
                      LBRACKET shift  314
                           VAR shift  80
                         CONST shift  79
                         chunk shift  332
                  import_chunk shift  230
                    fdef_chunk shift  330
                   fdecl_chunk shift  329
                     vdef_stmt shift  229
        vdefAssign_global_stmt shift  228
              cdef_global_stmt shift  227
                     blockStmt shift  325
                   fdef_header shift  9
                      lbracket shift  2

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA * for_init_stmt_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  120
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                           VAR shift  85
                         CONST shift  84
                           INC shift  42
                           DEC shift  41
                     vdef_stmt shift  253
               vdefAssign_stmt shift  252
                     cdef_stmt shift  251
                   assign_stmt shift  250
                      funcexpr shift  204
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
        for_init_stmt_nonEmpty shift  249

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
    (152) for_action_stmt ::= *
          for_action_stmt ::= * for_action_stmt_nonEmpty
          for_header ::= for_header2 * for_action_stmt RPAREN

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  120
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                           INC shift  42
                           DEC shift  41
                   assign_stmt shift  246
                      funcexpr shift  204
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
      for_action_stmt_nonEmpty shift  162
               for_action_stmt shift  161
                     {default} reduce 152

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA * for_action_stmt_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  120
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                           INC shift  42
                           DEC shift  41
                   assign_stmt shift  246
                      funcexpr shift  204
                          expr shift  93
                        lvalue shift  124
           lvalueList_nonEmpty shift  147
      for_action_stmt_nonEmpty shift  245

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (66) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  151
                        LPAREN shift  64
                        RPAREN shift  272
                        RPAREN reduce 66  ** Parsing conflict **
                    LSQBRACKET shift  21
                         KILLS shift  290
                        STRING shift  283
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  118
                fArgs_nonEmpty shift  193
                         fArgs shift  177

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (66) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  151
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                        STRING shift  283
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  118
                fArgs_nonEmpty shift  193
                         fArgs shift  158
                     {default} reduce 66

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (66) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= KILLS LPAREN * fArgs RPAREN

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  151
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                        STRING shift  283
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  118
                fArgs_nonEmpty shift  193
                         fArgs shift  180
                     {default} reduce 66

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (66) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          funcexpr ::= expr LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  151
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                        STRING shift  283
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  118
                fArgs_nonEmpty shift  193
                         fArgs shift  175
                     {default} reduce 66

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (66) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= NAME LPAREN * fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  151
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                        STRING shift  283
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  118
                fArgs_nonEmpty shift  193
                         fArgs shift  174
                     {default} reduce 66

State 20:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
     (55) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * exprList

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  201
             exprList_nonEmpty shift  196
                          expr shift  117
                      exprList shift  237
                     {default} reduce 55

State 21:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
     (55) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= LSQBRACKET * exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  201
             exprList_nonEmpty shift  196
                          expr shift  117
                      exprList shift  86
                     {default} reduce 55

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          for_header2 ::= for_header1 * lexpr SEMICOLON
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  194
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                 CONDITIONNAME shift  178
                      funcexpr shift  204
                          expr shift  92
                         lexpr shift  131

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  194
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                 CONDITIONNAME shift  178
                      funcexpr shift  204
                          expr shift  92
                         lexpr shift  132

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  194
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                 CONDITIONNAME shift  178
                      funcexpr shift  204
                          expr shift  92
                         lexpr shift  133

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  194
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                 CONDITIONNAME shift  178
                      funcexpr shift  204
                          expr shift  92
                         lexpr shift  134

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  194
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                 CONDITIONNAME shift  178
                      funcexpr shift  204
                          expr shift  92
                         lexpr shift  274

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  194
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                 CONDITIONNAME shift  178
                      funcexpr shift  204
                          expr shift  92
                         lexpr shift  179

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  194
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                 CONDITIONNAME shift  178
                      funcexpr shift  204
                          expr shift  92
                         lexpr shift  275

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= LPAREN * lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  194
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                 CONDITIONNAME shift  178
                      funcexpr shift  204
                          expr shift  91
                         lexpr shift  136

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= L2V LPAREN * lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  194
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                 CONDITIONNAME shift  178
                      funcexpr shift  204
                          expr shift  92
                         lexpr shift  135

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  151
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                        STRING shift  283
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  118
                fArgs_nonEmpty shift  282

State 32:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  201
             exprList_nonEmpty shift  154
                          expr shift  117

State 33:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  201
             exprList_nonEmpty shift  155
                          expr shift  117

State 34:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= foreach_opener nameList_nonEmpty COLON * exprList_nonEmpty RPAREN

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  201
             exprList_nonEmpty shift  145
                          expr shift  117

State 35:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalueList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  201
             exprList_nonEmpty shift  170
                          expr shift  117

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA * lvalue

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  120
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  99
                        lvalue shift  264

State 37:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  201
             exprList_nonEmpty shift  171
                          expr shift  117

State 38:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  201
             exprList_nonEmpty shift  172
                          expr shift  117

State 39:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  201
             exprList_nonEmpty shift  284
                          expr shift  117

State 40:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
    (137) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  168
                          ELSE reduce 137 ** Parsing conflict **
                    elif_start shift  167
                   elif_header shift  7
                   else_header shift  3
                     {default} reduce 137

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= DEC * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  97

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= INC * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  98

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBXR * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  100

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBOR * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  101

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBND * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  102

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IRSH * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  103

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ILSH * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  104

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IMOD * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  105

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IDIV * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  106

State 50:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IMUL * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  107

State 51:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ISUB * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  108

State 52:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IADD * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  109

State 53:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ASSIGN * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  110

State 54:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= expr LSQBRACKET * expr RSQBRACKET

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  94

State 55:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  111

State 56:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  112

State 57:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  113

State 58:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  114

State 59:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  115

State 60:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  116

State 61:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  137

State 62:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  138

State 63:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  139

State 64:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  95

State 65:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  125

State 66:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  123

State 67:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  126

State 68:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  127

State 69:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  128

State 70:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  140

State 71:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  141

State 72:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  142

State 73:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  129

State 74:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  130

State 75:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  96

State 76:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= NAME ASSIGN * expr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  291
                          NAME shift  203
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  290
                           L2V shift  195
                     MAPSTRING shift  192
                          UNIT shift  189
                        SWITCH shift  186
                      LOCATION shift  183
                      funcexpr shift  204
                          expr shift  119

State 77:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= actionStmt_start * action
          actionStmt ::= actionStmt_start * actions

                    ACTIONNAME shift  159
                        action shift  82
                       actions shift  81

State 78:
          fdef_header ::= FUNCTION NAME LPAREN * nameList RPAREN
          fdecl_chunk ::= FUNCTION NAME LPAREN * nameList RPAREN SEMICOLON
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
     (49) nameList ::= *
          nameList ::= * nameList_nonEmpty

                          NAME shift  320
                      nameList shift  222
             nameList_nonEmpty shift  220
                     {default} reduce 49

State 79:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_global_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  320
             nameList_nonEmpty shift  143

State 80:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_global_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  320
             nameList_nonEmpty shift  144

State 81:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
    (172) actionStmt ::= actionStmt_start actions *

                    ACTIONNAME shift  159
                    ACTIONNAME reduce 172 ** Parsing conflict **
                        action shift  234
                     {default} reduce 172

State 82:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
    (171) actionStmt ::= actionStmt_start action *

                    ACTIONNAME shift  159
                    ACTIONNAME reduce 171 ** Parsing conflict **
                        action shift  235
                     {default} reduce 171

State 83:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= foreach_opener * nameList_nonEmpty COLON exprList_nonEmpty RPAREN

                          NAME shift  320
             nameList_nonEmpty shift  146

State 84:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  320
             nameList_nonEmpty shift  148

State 85:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  320
             nameList_nonEmpty shift  149

State 86:
          commaSkippable ::= * COMMA
     (73) commaSkippable ::= *
          expr ::= LSQBRACKET exprList * commaSkippable RSQBRACKET

                         COMMA shift  270
                commaSkippable shift  176
                     {default} reduce 73

State 87:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  199
              numList_nonEmpty shift  150

State 88:
          rbracket ::= * RBRACKET
          blockStmt ::= lbracket bodyStmtList return_stmt SEMICOLON * rbracket

                      RBRACKET shift  312
                      rbracket shift  309

State 89:
          rbracket ::= * RBRACKET
          blockStmt ::= lbracket return_stmt SEMICOLON * rbracket

                      RBRACKET shift  312
                      rbracket shift  311

State 90:
          dottedName ::= * NAME
          dottedName ::= * dottedName PERIOD NAME
          import_chunk ::= IMPORT * dottedName AS NAME
          import_chunk ::= IMPORT * dottedName

                          NAME shift  324
                    dottedName shift  153

State 91:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (93) lexpr ::= expr *
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  60
                            LE shift  58
                            LT shift  57
                            GE shift  56
                            GT shift  55
                            NE shift  59
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                        RPAREN shift  287
                        RPAREN reduce 93  ** Parsing conflict **
                    LSQBRACKET shift  75
                     {default} reduce 93

State 92:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (93) lexpr ::= expr *
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  60
                            LE shift  58
                            LT shift  57
                            GE shift  56
                            GT shift  55
                            NE shift  59
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 93

State 93:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lvalue ::= expr * LSQBRACKET expr RSQBRACKET
          lvalue ::= expr * PERIOD NAME
          assign_stmt ::= expr * INC
          assign_stmt ::= expr * DEC

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  173
                        LPAREN shift  18
                    LSQBRACKET shift  54
                           INC shift  266
                           DEC shift  265

State 94:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lvalue ::= expr LSQBRACKET expr * RSQBRACKET

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                    RSQBRACKET shift  121

State 95:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                        RPAREN shift  287
                    LSQBRACKET shift  75

State 96:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                    RSQBRACKET shift  288

State 97:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (118) assign_stmt ::= DEC expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 118

State 98:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (116) assign_stmt ::= INC expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 116

State 99:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lvalue ::= expr * LSQBRACKET expr RSQBRACKET
          lvalue ::= expr * PERIOD NAME

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  173
                        LPAREN shift  18
                    LSQBRACKET shift  54

State 100:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (129) assign_stmt ::= lvalue IBXR expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 129

State 101:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (128) assign_stmt ::= lvalue IBOR expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 128

State 102:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (127) assign_stmt ::= lvalue IBND expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 127

State 103:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (126) assign_stmt ::= lvalue IRSH expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 126

State 104:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (125) assign_stmt ::= lvalue ILSH expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 125

State 105:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (124) assign_stmt ::= lvalue IMOD expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 124

State 106:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (123) assign_stmt ::= lvalue IDIV expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 123

State 107:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (122) assign_stmt ::= lvalue IMUL expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 122

State 108:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (121) assign_stmt ::= lvalue ISUB expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 121

State 109:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (120) assign_stmt ::= lvalue IADD expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 120

State 110:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (114) assign_stmt ::= lvalue ASSIGN expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 114

State 111:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (100) lexpr ::= expr GT expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 100

State 112:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (99) lexpr ::= expr GE expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 99

State 113:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (98) lexpr ::= expr LT expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 98

State 114:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (97) lexpr ::= expr LE expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 97

State 115:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (96) lexpr ::= expr NE expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 96

State 116:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (95) lexpr ::= expr EQ expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 95

State 117:
     (53) exprList_nonEmpty ::= expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 53

State 118:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (62) fArgs_nonEmpty ::= expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 62

State 119:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (64) fArgs_nonEmpty ::= NAME ASSIGN expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 64

State 120:
     (59) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
    (109) lvalue ::= NAME *

                        ASSIGN reduce 109
                         COMMA reduce 109
                        LPAREN shift  19
                        LPAREN reduce 59  ** Parsing conflict **
                          IADD reduce 109
                          ISUB reduce 109
                          IMUL reduce 109
                          IDIV reduce 109
                          IMOD reduce 109
                          ILSH reduce 109
                          IRSH reduce 109
                          IBND reduce 109
                          IBOR reduce 109
                          IBXR reduce 109
                     {default} reduce 59

State 121:
     (61) expr ::= expr LSQBRACKET expr RSQBRACKET *
    (110) lvalue ::= expr LSQBRACKET expr RSQBRACKET *

                        ASSIGN reduce 110
                         COMMA reduce 110
                          IADD reduce 110
                          ISUB reduce 110
                          IMUL reduce 110
                          IDIV reduce 110
                          IMOD reduce 110
                          ILSH reduce 110
                          IRSH reduce 110
                          IBND reduce 110
                          IBOR reduce 110
                          IBXR reduce 110
                     {default} reduce 61

State 122:
     (60) expr ::= expr PERIOD NAME *
    (111) lvalue ::= expr PERIOD NAME *

                        ASSIGN reduce 111
                         COMMA reduce 111
                          IADD reduce 111
                          ISUB reduce 111
                          IMUL reduce 111
                          IDIV reduce 111
                          IMOD reduce 111
                          ILSH reduce 111
                          IRSH reduce 111
                          IBND reduce 111
                          IBOR reduce 111
                          IBXR reduce 111
                     {default} reduce 60

State 123:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (88) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        PERIOD reduce 88  ** Parsing conflict **
                        LPAREN shift  18
                        LPAREN reduce 88  ** Parsing conflict **
                    LSQBRACKET shift  75
                    LSQBRACKET reduce 88  ** Parsing conflict **
                     {default} reduce 88

State 124:
    (112) lvalueList_nonEmpty ::= lvalue *
          assign_stmt ::= lvalue * ASSIGN expr
          assign_stmt ::= lvalue * IADD expr
          assign_stmt ::= lvalue * ISUB expr
          assign_stmt ::= lvalue * IMUL expr
          assign_stmt ::= lvalue * IDIV expr
          assign_stmt ::= lvalue * IMOD expr
          assign_stmt ::= lvalue * ILSH expr
          assign_stmt ::= lvalue * IRSH expr
          assign_stmt ::= lvalue * IBND expr
          assign_stmt ::= lvalue * IBOR expr
          assign_stmt ::= lvalue * IBXR expr

                        ASSIGN shift  53
                        ASSIGN reduce 112 ** Parsing conflict **
                          IADD shift  52
                          ISUB shift  51
                          IMUL shift  50
                          IDIV shift  49
                          IMOD shift  48
                          ILSH shift  47
                          IRSH shift  46
                          IBND shift  45
                          IBOR shift  44
                          IBXR shift  43
                     {default} reduce 112

State 125:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (89) expr ::= expr BITXOR expr *

                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        PERIOD reduce 89  ** Parsing conflict **
                        LPAREN shift  18
                        LPAREN reduce 89  ** Parsing conflict **
                    LSQBRACKET shift  75
                    LSQBRACKET reduce 89  ** Parsing conflict **
                     {default} reduce 89

State 126:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (87) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        PERIOD reduce 87  ** Parsing conflict **
                        LPAREN shift  18
                        LPAREN reduce 87  ** Parsing conflict **
                    LSQBRACKET shift  75
                    LSQBRACKET reduce 87  ** Parsing conflict **
                     {default} reduce 87

State 127:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (86) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        PERIOD reduce 86  ** Parsing conflict **
                        LPAREN shift  18
                        LPAREN reduce 86  ** Parsing conflict **
                    LSQBRACKET shift  75
                    LSQBRACKET reduce 86  ** Parsing conflict **
                     {default} reduce 86

State 128:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (85) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        PERIOD reduce 85  ** Parsing conflict **
                        LPAREN shift  18
                        LPAREN reduce 85  ** Parsing conflict **
                    LSQBRACKET shift  75
                    LSQBRACKET reduce 85  ** Parsing conflict **
                     {default} reduce 85

State 129:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (81) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        PERIOD reduce 81  ** Parsing conflict **
                        LPAREN shift  18
                        LPAREN reduce 81  ** Parsing conflict **
                    LSQBRACKET shift  75
                    LSQBRACKET reduce 81  ** Parsing conflict **
                     {default} reduce 81

State 130:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
     (80) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  202
                        PERIOD reduce 80  ** Parsing conflict **
                        LPAREN shift  18
                        LPAREN reduce 80  ** Parsing conflict **
                    LSQBRACKET shift  75
                    LSQBRACKET reduce 80  ** Parsing conflict **
                     {default} reduce 80

State 131:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          for_header2 ::= for_header1 lexpr * SEMICOLON

                           LOR shift  27
                          LAND shift  28
                     SEMICOLON shift  247

State 132:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  256

State 133:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  259

State 134:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  262

State 135:
          expr ::= L2V LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  271

State 136:
          lexpr ::= LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  276

State 137:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (92) expr ::= BITNOT expr *

                        PERIOD shift  202
                        PERIOD reduce 92  ** Parsing conflict **
                        LPAREN shift  18
                        LPAREN reduce 92  ** Parsing conflict **
                    LSQBRACKET shift  75
                    LSQBRACKET reduce 92  ** Parsing conflict **
                     {default} reduce 92

State 138:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (91) expr ::= MINUS expr *

                        PERIOD shift  202
                        PERIOD reduce 91  ** Parsing conflict **
                        LPAREN shift  18
                        LPAREN reduce 91  ** Parsing conflict **
                    LSQBRACKET shift  75
                    LSQBRACKET reduce 91  ** Parsing conflict **
                     {default} reduce 91

State 139:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (90) expr ::= PLUS expr *

                        PERIOD shift  202
                        PERIOD reduce 90  ** Parsing conflict **
                        LPAREN shift  18
                        LPAREN reduce 90  ** Parsing conflict **
                    LSQBRACKET shift  75
                    LSQBRACKET reduce 90  ** Parsing conflict **
                     {default} reduce 90

State 140:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (84) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        PERIOD shift  202
                        PERIOD reduce 84  ** Parsing conflict **
                        LPAREN shift  18
                        LPAREN reduce 84  ** Parsing conflict **
                    LSQBRACKET shift  75
                    LSQBRACKET reduce 84  ** Parsing conflict **
                     {default} reduce 84

State 141:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (83) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        PERIOD shift  202
                        PERIOD reduce 83  ** Parsing conflict **
                        LPAREN shift  18
                        LPAREN reduce 83  ** Parsing conflict **
                    LSQBRACKET shift  75
                    LSQBRACKET reduce 83  ** Parsing conflict **
                     {default} reduce 83

State 142:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (82) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        PERIOD shift  202
                        PERIOD reduce 82  ** Parsing conflict **
                        LPAREN shift  18
                        LPAREN reduce 82  ** Parsing conflict **
                    LSQBRACKET shift  75
                    LSQBRACKET reduce 82  ** Parsing conflict **
                     {default} reduce 82

State 143:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_global_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  32
                         COMMA shift  219

State 144:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (104) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  33
                         COMMA shift  219
                     {default} reduce 104

State 145:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty * RPAREN

                         COMMA shift  39
                        RPAREN shift  241

State 146:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= foreach_opener nameList_nonEmpty * COLON exprList_nonEmpty RPAREN

                         COMMA shift  219
                         COLON shift  34

State 147:
          lvalueList_nonEmpty ::= lvalueList_nonEmpty * COMMA lvalue
          assign_stmt ::= lvalueList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  35
                         COMMA shift  36

State 148:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  37
                         COMMA shift  219

State 149:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (104) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  38
                         COMMA shift  219
                         COMMA reduce 104 ** Parsing conflict **
                     {default} reduce 104

State 150:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  198
                    RSQBRACKET shift  197

State 151:
     (59) expr ::= NAME *
          fArgs_nonEmpty ::= NAME * ASSIGN expr
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        ASSIGN shift  76
                        LPAREN shift  19
                        LPAREN reduce 59  ** Parsing conflict **
                     {default} reduce 59

State 152:
          bodyStmt ::= funcexpr * SEMICOLON
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (70) expr ::= funcexpr *

                     SEMICOLON shift  302
                    LSQBRACKET shift  210
                    LSQBRACKET reduce 70  ** Parsing conflict **
                     {default} reduce 70

State 153:
          dottedName ::= dottedName * PERIOD NAME
          import_chunk ::= IMPORT dottedName * AS NAME
     (13) import_chunk ::= IMPORT dottedName *

                        PERIOD shift  226
                            AS shift  225
                     {default} reduce 13

State 154:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (108) cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 108

State 155:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (106) vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 106

State 156:
          blockStmt ::= lbracket error * RBRACKET
     (41) bodyStmtList ::= error *

                      RBRACKET shift  232
                      RBRACKET reduce 41  ** Parsing conflict **
                     {default} reduce 41

State 157:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  236

State 158:
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                        RPAREN shift  157

State 159:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  16

State 160:
          foreach_opener ::= FOREACH * LPAREN

                        LPAREN shift  242

State 161:
          for_header ::= for_header2 for_action_stmt * RPAREN

                        RPAREN shift  244

State 162:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (153) for_action_stmt ::= for_action_stmt_nonEmpty *

                         COMMA shift  14
                     {default} reduce 153

State 163:
          for_header1 ::= for_opener for_init_stmt * SEMICOLON

                     SEMICOLON shift  248

State 164:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (148) for_init_stmt ::= for_init_stmt_nonEmpty *

                         COMMA shift  12
                     {default} reduce 148

State 165:
          for_opener ::= FOR * LPAREN

                        LPAREN shift  254

State 166:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  23

State 167:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  24

State 168:
          elif_start ::= ELSE * IF
    (136) else_header ::= ELSE *

                            IF shift  260
                            IF reduce 136 ** Parsing conflict **
                     {default} reduce 136

State 169:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  25

State 170:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (115) assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 115

State 171:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (107) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 107

State 172:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (105) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 105

State 173:
          expr ::= expr PERIOD * NAME
          lvalue ::= expr PERIOD * NAME

                          NAME shift  122

State 174:
          funcexpr ::= NAME LPAREN fArgs * RPAREN

                        RPAREN shift  267

State 175:
          funcexpr ::= expr LPAREN fArgs * RPAREN

                        RPAREN shift  268

State 176:
          expr ::= LSQBRACKET exprList commaSkippable * RSQBRACKET

                    RSQBRACKET shift  269

State 177:
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  273

State 178:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  15

State 179:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
    (102) lexpr ::= lexpr LOR lexpr *

                          LAND shift  28
                     {default} reduce 102

State 180:
          lexpr ::= KILLS LPAREN fArgs * RPAREN

                        RPAREN shift  277

State 181:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  278

State 182:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  181

State 183:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  182

State 184:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  279

State 185:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  184

State 186:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  185

State 187:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  280

State 188:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  187

State 189:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  188

State 190:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  281

State 191:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  190

State 192:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  191

State 193:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (67) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  31
                     {default} reduce 67

State 194:
     (58) expr ::= KILLS *
          lexpr ::= KILLS * LPAREN fArgs RPAREN

                        LPAREN shift  17
                        LPAREN reduce 58  ** Parsing conflict **
                     {default} reduce 58

State 195:
          expr ::= L2V * LPAREN lexpr RPAREN

                        LPAREN shift  30

State 196:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (56) exprList ::= exprList_nonEmpty *

                         COMMA shift  39
                         COMMA reduce 56  ** Parsing conflict **
                     {default} reduce 56

State 197:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  285

State 198:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  286

State 199:
     (45) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  207
                    RSQBRACKET reduce 45  ** Parsing conflict **
                     {default} reduce 45

State 200:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  87

State 201:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (70) expr ::= funcexpr *

                    LSQBRACKET shift  200
                    LSQBRACKET reduce 70  ** Parsing conflict **
                     {default} reduce 70

State 202:
          expr ::= expr PERIOD * NAME

                          NAME shift  289

State 203:
     (59) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        LPAREN shift  19
                        LPAREN reduce 59  ** Parsing conflict **
                     {default} reduce 59

State 204:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (70) expr ::= funcexpr *

                    LSQBRACKET shift  210
                    LSQBRACKET reduce 70  ** Parsing conflict **
                     {default} reduce 70

State 205:
          bodyStmt ::= break_stmt * SEMICOLON

                     SEMICOLON shift  294

State 206:
          bodyStmt ::= continue_stmt * SEMICOLON

                     SEMICOLON shift  295

State 207:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  301

State 208:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  207

State 209:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  208

State 210:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  209

State 211:
          bodyStmt ::= assign_stmt * SEMICOLON

                     SEMICOLON shift  303

State 212:
          bodyStmt ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  304

State 213:
          bodyStmt ::= vdefAssign_stmt * SEMICOLON

                     SEMICOLON shift  305

State 214:
          bodyStmt ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  306

State 215:
          blockStmt ::= lbracket bodyStmtList return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  88

State 216:
          blockStmt ::= lbracket return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  89

State 217:
          stmt ::= return_stmt * SEMICOLON

                     SEMICOLON shift  315

State 218:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  317

State 219:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  319

State 220:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
     (50) nameList ::= nameList_nonEmpty *

                         COMMA shift  219
                     {default} reduce 50

State 221:
     (14) fdef_header ::= FUNCTION NAME LPAREN nameList RPAREN *
          fdecl_chunk ::= FUNCTION NAME LPAREN nameList RPAREN * SEMICOLON

                     SEMICOLON shift  321
                     SEMICOLON reduce 14  ** Parsing conflict **
                     {default} reduce 14

State 222:
          fdef_header ::= FUNCTION NAME LPAREN nameList * RPAREN
          fdecl_chunk ::= FUNCTION NAME LPAREN nameList * RPAREN SEMICOLON

                        RPAREN shift  221

State 223:
          fdef_header ::= FUNCTION NAME * LPAREN nameList RPAREN
          fdecl_chunk ::= FUNCTION NAME * LPAREN nameList RPAREN SEMICOLON

                        LPAREN shift  78

State 224:
          fdef_header ::= FUNCTION * NAME LPAREN nameList RPAREN
          fdecl_chunk ::= FUNCTION * NAME LPAREN nameList RPAREN SEMICOLON

                          NAME shift  223

State 225:
          import_chunk ::= IMPORT dottedName AS * NAME

                          NAME shift  322

State 226:
          dottedName ::= dottedName PERIOD * NAME

                          NAME shift  323

State 227:
          chunk ::= cdef_global_stmt * SEMICOLON

                     SEMICOLON shift  326

State 228:
          chunk ::= vdefAssign_global_stmt * SEMICOLON

                     SEMICOLON shift  327

State 229:
          chunk ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  328

State 230:
          chunk ::= import_chunk * SEMICOLON

                     SEMICOLON shift  331

State 231:
     (42) bodyStmtList ::= bodyStmt *

                     {default} reduce 42

State 232:
     (26) blockStmt ::= lbracket error RBRACKET *

                     {default} reduce 26

State 233:
    (138) if_stmt ::= if_block else_header stmt *

                     {default} reduce 138

State 234:
    (169) actions ::= actions action *

                     {default} reduce 169

State 235:
    (168) actions ::= action action *

                     {default} reduce 168

State 236:
    (167) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 167

State 237:
    (163) return_stmt ::= RETURN exprList *

                     {default} reduce 163

State 238:
    (162) break_stmt ::= BREAK *

                     {default} reduce 162

State 239:
    (161) continue_stmt ::= CONTINUE *

                     {default} reduce 161

State 240:
    (160) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 160

State 241:
    (159) foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN *

                     {default} reduce 159

State 242:
    (158) foreach_opener ::= FOREACH LPAREN *

                     {default} reduce 158

State 243:
    (157) for_stmt ::= for_header stmt *

                     {default} reduce 157

State 244:
    (156) for_header ::= for_header2 for_action_stmt RPAREN *

                     {default} reduce 156

State 245:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (151) for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty *

                     {default} reduce 151

State 246:
    (150) for_action_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 150

State 247:
    (155) for_header2 ::= for_header1 lexpr SEMICOLON *

                     {default} reduce 155

State 248:
    (154) for_header1 ::= for_opener for_init_stmt SEMICOLON *

                     {default} reduce 154

State 249:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (147) for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty *

                     {default} reduce 147

State 250:
    (146) for_init_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 146

State 251:
    (145) for_init_stmt_nonEmpty ::= cdef_stmt *

                     {default} reduce 145

State 252:
    (144) for_init_stmt_nonEmpty ::= vdefAssign_stmt *

                     {default} reduce 144

State 253:
    (143) for_init_stmt_nonEmpty ::= vdef_stmt *

                     {default} reduce 143

State 254:
    (142) for_opener ::= FOR LPAREN *

                     {default} reduce 142

State 255:
    (141) while_stmt ::= while_header stmt *

                     {default} reduce 141

State 256:
    (140) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 140

State 257:
    (139) while_start ::= WHILE *

                     {default} reduce 139

State 258:
    (135) if_block ::= if_block elif_header stmt *

                     {default} reduce 135

State 259:
    (134) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 134

State 260:
    (133) elif_start ::= ELSE IF *

                     {default} reduce 133

State 261:
    (132) if_block ::= if_header stmt *

                     {default} reduce 132

State 262:
    (131) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 131

State 263:
    (130) if_start ::= IF *

                     {default} reduce 130

State 264:
    (113) lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA lvalue *

                     {default} reduce 113

State 265:
    (119) assign_stmt ::= expr DEC *

                     {default} reduce 119

State 266:
    (117) assign_stmt ::= expr INC *

                     {default} reduce 117

State 267:
     (68) funcexpr ::= NAME LPAREN fArgs RPAREN *

                     {default} reduce 68

State 268:
     (69) funcexpr ::= expr LPAREN fArgs RPAREN *

                     {default} reduce 69

State 269:
     (74) expr ::= LSQBRACKET exprList commaSkippable RSQBRACKET *

                     {default} reduce 74

State 270:
     (72) commaSkippable ::= COMMA *

                     {default} reduce 72

State 271:
     (75) expr ::= L2V LPAREN lexpr RPAREN *

                     {default} reduce 75

State 272:
    (166) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 166

State 273:
    (164) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 164

State 274:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
    (103) lexpr ::= LNOT lexpr *

                     {default} reduce 103

State 275:
          lexpr ::= lexpr * LAND lexpr
    (101) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 101

State 276:
     (94) lexpr ::= LPAREN lexpr RPAREN *

                     {default} reduce 94

State 277:
    (165) lexpr ::= KILLS LPAREN fArgs RPAREN *

                     {default} reduce 165

State 278:
     (79) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 79

State 279:
     (78) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 78

State 280:
     (77) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 77

State 281:
     (76) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 76

State 282:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (65) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArgs_nonEmpty *

                     {default} reduce 65

State 283:
     (63) fArgs_nonEmpty ::= STRING *

                     {default} reduce 63

State 284:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (54) exprList_nonEmpty ::= exprList_nonEmpty COMMA exprList_nonEmpty *

                     {default} reduce 54

State 285:
     (51) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 51

State 286:
     (46) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 46

State 287:
     (71) expr ::= LPAREN expr RPAREN *

                     {default} reduce 71

State 288:
     (61) expr ::= expr LSQBRACKET expr RSQBRACKET *

                     {default} reduce 61

State 289:
     (60) expr ::= expr PERIOD NAME *

                     {default} reduce 60

State 290:
     (58) expr ::= KILLS *

                     {default} reduce 58

State 291:
     (57) expr ::= NUMBER *

                     {default} reduce 57

State 292:
     (44) bodyStmtList ::= bodyStmtList error *

                     {default} reduce 44

State 293:
     (43) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 43

State 294:
     (40) bodyStmt ::= break_stmt SEMICOLON *

                     {default} reduce 40

State 295:
     (39) bodyStmt ::= continue_stmt SEMICOLON *

                     {default} reduce 39

State 296:
     (38) bodyStmt ::= foreach_stmt *

                     {default} reduce 38

State 297:
     (37) bodyStmt ::= for_stmt *

                     {default} reduce 37

State 298:
     (36) bodyStmt ::= while_stmt *

                     {default} reduce 36

State 299:
     (35) bodyStmt ::= if_stmt *

                     {default} reduce 35

State 300:
     (34) bodyStmt ::= actionStmt *

                     {default} reduce 34

State 301:
     (52) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 52

State 302:
     (33) bodyStmt ::= funcexpr SEMICOLON *

                     {default} reduce 33

State 303:
     (32) bodyStmt ::= assign_stmt SEMICOLON *

                     {default} reduce 32

State 304:
     (31) bodyStmt ::= cdef_stmt SEMICOLON *

                     {default} reduce 31

State 305:
     (30) bodyStmt ::= vdefAssign_stmt SEMICOLON *

                     {default} reduce 30

State 306:
     (29) bodyStmt ::= vdef_stmt SEMICOLON *

                     {default} reduce 29

State 307:
     (28) bodyStmt ::= SEMICOLON *

                     {default} reduce 28

State 308:
     (27) bodyStmt ::= blockStmt *

                     {default} reduce 27

State 309:
     (25) blockStmt ::= lbracket bodyStmtList return_stmt SEMICOLON rbracket *

                     {default} reduce 25

State 310:
     (24) blockStmt ::= lbracket bodyStmtList rbracket *

                     {default} reduce 24

State 311:
     (23) blockStmt ::= lbracket return_stmt SEMICOLON rbracket *

                     {default} reduce 23

State 312:
     (21) rbracket ::= RBRACKET *

                     {default} reduce 21

State 313:
     (22) blockStmt ::= lbracket RBRACKET *

                     {default} reduce 22

State 314:
     (20) lbracket ::= LBRACKET *

                     {default} reduce 20

State 315:
     (19) stmt ::= return_stmt SEMICOLON *

                     {default} reduce 19

State 316:
     (18) stmt ::= bodyStmt *

                     {default} reduce 18

State 317:
     (17) stmt ::= error SEMICOLON *

                     {default} reduce 17

State 318:
     (15) fdef_chunk ::= fdef_header stmt *

                     {default} reduce 15

State 319:
     (48) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 48

State 320:
     (47) nameList_nonEmpty ::= NAME *

                     {default} reduce 47

State 321:
     (16) fdecl_chunk ::= FUNCTION NAME LPAREN nameList RPAREN SEMICOLON *

                     {default} reduce 16

State 322:
     (12) import_chunk ::= IMPORT dottedName AS NAME *

                     {default} reduce 12

State 323:
     (11) dottedName ::= dottedName PERIOD NAME *

                     {default} reduce 11

State 324:
     (10) dottedName ::= NAME *

                     {default} reduce 10

State 325:
      (9) chunk ::= blockStmt *

                     {default} reduce 9

State 326:
      (8) chunk ::= cdef_global_stmt SEMICOLON *

                     {default} reduce 8

State 327:
      (7) chunk ::= vdefAssign_global_stmt SEMICOLON *

                     {default} reduce 7

State 328:
      (6) chunk ::= vdef_stmt SEMICOLON *

                     {default} reduce 6

State 329:
      (5) chunk ::= fdecl_chunk *

                     {default} reduce 5

State 330:
      (4) chunk ::= fdef_chunk *

                     {default} reduce 4

State 331:
      (3) chunk ::= import_chunk SEMICOLON *

                     {default} reduce 3

State 332:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: ASSIGN
    2: COMMA
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: SEMICOLON
   28: PERIOD
   29: IMPORT
   30: AS
   31: FUNCTION
   32: LPAREN
   33: RPAREN
   34: LBRACKET
   35: RBRACKET
   36: LSQBRACKET
   37: RSQBRACKET
   38: KILLS
   39: STRING
   40: FUNCCALL
   41: L2V
   42: MAPSTRING
   43: UNIT
   44: SWITCH
   45: LOCATION
   46: VAR
   47: CONST
   48: INC
   49: DEC
   50: IADD
   51: ISUB
   52: IMUL
   53: IDIV
   54: IMOD
   55: ILSH
   56: IRSH
   57: IBND
   58: IBOR
   59: IBXR
   60: IF
   61: ELSE
   62: WHILE
   63: FOR
   64: FOREACH
   65: COLON
   66: CONTINUE
   67: BREAK
   68: RETURN
   69: CONDITIONNAME
   70: ACTIONNAME
   71: error:
   72: nt:
   73: program: <lambda> IMPORT FUNCTION LBRACKET VAR CONST
   74: chunks: <lambda> IMPORT FUNCTION LBRACKET VAR CONST
   75: chunk: IMPORT FUNCTION LBRACKET VAR CONST
   76: import_chunk: IMPORT
   77: fdef_chunk: FUNCTION
   78: fdecl_chunk: FUNCTION
   79: vdef_stmt: VAR
   80: vdefAssign_global_stmt: VAR
   81: cdef_global_stmt: CONST
   82: blockStmt: LBRACKET
   83: dottedName: NAME
   84: fdef_header: FUNCTION
   85: nameList: <lambda> NAME
   86: stmt: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK RETURN ACTIONNAME
   87: bodyStmt: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK ACTIONNAME
   88: return_stmt: RETURN
   89: lbracket: LBRACKET
   90: rbracket: RBRACKET
   91: bodyStmtList: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK ACTIONNAME
   92: vdefAssign_stmt: VAR
   93: cdef_stmt: CONST
   94: assign_stmt: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC
   95: funcexpr: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
   96: actionStmt: ACTIONNAME
   97: if_stmt: IF
   98: while_stmt: WHILE
   99: for_stmt: FOR
  100: foreach_stmt: FOREACH
  101: continue_stmt: CONTINUE
  102: break_stmt: BREAK
  103: numList_nonEmpty: NUMBER
  104: nameList_nonEmpty: NAME
  105: exprList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  106: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  107: exprList: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  108: fArgs_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION
  109: fArgs: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION
  110: commaSkippable: <lambda> COMMA
  111: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
  112: lvalue: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  113: lvalueList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  114: if_start: IF
  115: if_header: IF
  116: if_block: IF
  117: elif_start: ELSE
  118: elif_header: ELSE
  119: else_header: ELSE
  120: while_start: WHILE
  121: while_header: WHILE
  122: for_opener: FOR
  123: for_init_stmt_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST INC DEC
  124: for_init_stmt: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST INC DEC
  125: for_action_stmt_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC
  126: for_action_stmt: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC
  127: for_header1: FOR
  128: for_header2: FOR
  129: for_header: FOR
  130: foreach_opener: FOREACH
  131: foreach_header: FOREACH
  132: action: ACTIONNAME
  133: actions: ACTIONNAME
  134: actionStmt_start: <lambda>
