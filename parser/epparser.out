State 0:
          program ::= * chunks
    (112) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  9
                     {default} reduce 112

State 1:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          lbracket ::= * LBRACKET
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  177
                         CONST shift  54
                            IF shift  196
                         WHILE shift  190
                           FOR shift  106
                      CONTINUE shift  104
                         BREAK shift  103
                        RETURN shift  21
                    ACTIONNAME shift  102
                      LBRACKET shift  164
                         error shift  100
                 nameListMulti shift  90
                      funcexpr shift  99
                     vdef_stmt shift  176
               vdefAssign_stmt shift  175
                     cdef_stmt shift  174
                   assign_stmt shift  173
              assignMulti_stmt shift  172
                      if_start shift  110
                     if_header shift  5
                      if_block shift  28
                          stmt shift  153
                       if_stmt shift  169
                   while_start shift  107
                  while_header shift  3
                    while_stmt shift  168
                foreach_header shift  2
                  foreach_stmt shift  167
                 continue_stmt shift  166
                    break_stmt shift  165
                   return_stmt shift  162
                        action shift  59
                       actions shift  58
                    actionStmt shift  170
                      bodyStmt shift  163
                      lbracket shift  7

State 2:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          lbracket ::= * LBRACKET
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  177
                         CONST shift  54
                            IF shift  196
                         WHILE shift  190
                           FOR shift  106
                      CONTINUE shift  104
                         BREAK shift  103
                        RETURN shift  21
                    ACTIONNAME shift  102
                      LBRACKET shift  164
                         error shift  100
                 nameListMulti shift  90
                      funcexpr shift  99
                     vdef_stmt shift  176
               vdefAssign_stmt shift  175
                     cdef_stmt shift  174
                   assign_stmt shift  173
              assignMulti_stmt shift  172
                      if_start shift  110
                     if_header shift  5
                      if_block shift  28
                          stmt shift  186
                       if_stmt shift  169
                   while_start shift  107
                  while_header shift  3
                    while_stmt shift  168
                foreach_header shift  2
                  foreach_stmt shift  167
                 continue_stmt shift  166
                    break_stmt shift  165
                   return_stmt shift  162
                        action shift  59
                       actions shift  58
                    actionStmt shift  170
                      bodyStmt shift  163
                      lbracket shift  7

State 3:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          lbracket ::= * LBRACKET
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  177
                         CONST shift  54
                            IF shift  196
                         WHILE shift  190
                           FOR shift  106
                      CONTINUE shift  104
                         BREAK shift  103
                        RETURN shift  21
                    ACTIONNAME shift  102
                      LBRACKET shift  164
                         error shift  100
                 nameListMulti shift  90
                      funcexpr shift  99
                     vdef_stmt shift  176
               vdefAssign_stmt shift  175
                     cdef_stmt shift  174
                   assign_stmt shift  173
              assignMulti_stmt shift  172
                      if_start shift  110
                     if_header shift  5
                      if_block shift  28
                          stmt shift  188
                       if_stmt shift  169
                   while_start shift  107
                  while_header shift  3
                    while_stmt shift  168
                foreach_header shift  2
                  foreach_stmt shift  167
                 continue_stmt shift  166
                    break_stmt shift  165
                   return_stmt shift  162
                        action shift  59
                       actions shift  58
                    actionStmt shift  170
                      bodyStmt shift  163
                      lbracket shift  7

State 4:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          lbracket ::= * LBRACKET
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  177
                         CONST shift  54
                            IF shift  196
                         WHILE shift  190
                           FOR shift  106
                      CONTINUE shift  104
                         BREAK shift  103
                        RETURN shift  21
                    ACTIONNAME shift  102
                      LBRACKET shift  164
                         error shift  100
                 nameListMulti shift  90
                      funcexpr shift  99
                     vdef_stmt shift  176
               vdefAssign_stmt shift  175
                     cdef_stmt shift  174
                   assign_stmt shift  173
              assignMulti_stmt shift  172
                      if_start shift  110
                     if_header shift  5
                      if_block shift  28
                          stmt shift  191
                       if_stmt shift  169
                   while_start shift  107
                  while_header shift  3
                    while_stmt shift  168
                foreach_header shift  2
                  foreach_stmt shift  167
                 continue_stmt shift  166
                    break_stmt shift  165
                   return_stmt shift  162
                        action shift  59
                       actions shift  58
                    actionStmt shift  170
                      bodyStmt shift  163
                      lbracket shift  7

State 5:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          lbracket ::= * LBRACKET
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  177
                         CONST shift  54
                            IF shift  196
                         WHILE shift  190
                           FOR shift  106
                      CONTINUE shift  104
                         BREAK shift  103
                        RETURN shift  21
                    ACTIONNAME shift  102
                      LBRACKET shift  164
                         error shift  100
                 nameListMulti shift  90
                      funcexpr shift  99
                     vdef_stmt shift  176
               vdefAssign_stmt shift  175
                     cdef_stmt shift  174
                   assign_stmt shift  173
              assignMulti_stmt shift  172
                      if_start shift  110
                     if_header shift  5
                      if_block shift  28
                          stmt shift  194
                       if_stmt shift  169
                   while_start shift  107
                  while_header shift  3
                    while_stmt shift  168
                foreach_header shift  2
                  foreach_stmt shift  167
                 continue_stmt shift  166
                    break_stmt shift  165
                   return_stmt shift  162
                        action shift  59
                       actions shift  58
                    actionStmt shift  170
                      bodyStmt shift  163
                      lbracket shift  7

State 6:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          fdef_chunk ::= function_header * stmt
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          lbracket ::= * LBRACKET
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  177
                         CONST shift  54
                            IF shift  196
                         WHILE shift  190
                           FOR shift  106
                      CONTINUE shift  104
                         BREAK shift  103
                        RETURN shift  21
                    ACTIONNAME shift  102
                      LBRACKET shift  164
                         error shift  100
                 nameListMulti shift  90
                      funcexpr shift  99
                     vdef_stmt shift  176
               vdefAssign_stmt shift  175
                     cdef_stmt shift  174
                   assign_stmt shift  173
              assignMulti_stmt shift  172
                      if_start shift  110
                     if_header shift  5
                      if_block shift  28
                          stmt shift  152
                       if_stmt shift  169
                   while_start shift  107
                  while_header shift  3
                    while_stmt shift  168
                foreach_header shift  2
                  foreach_stmt shift  167
                 continue_stmt shift  166
                    break_stmt shift  165
                   return_stmt shift  162
                        action shift  59
                       actions shift  58
                    actionStmt shift  170
                      bodyStmt shift  163
                      lbracket shift  7

State 7:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          stmt ::= lbracket * RBRACKET
          stmt ::= lbracket * return_stmt rbracket
          stmt ::= lbracket * bodyStmtList rbracket
          stmt ::= lbracket * bodyStmtList return_stmt rbracket
          stmt ::= lbracket * error RBRACKET

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  177
                         CONST shift  54
                            IF shift  196
                         WHILE shift  190
                           FOR shift  106
                      CONTINUE shift  104
                         BREAK shift  103
                        RETURN shift  21
                    ACTIONNAME shift  102
                      RBRACKET shift  156
                         error shift  98
                 nameListMulti shift  90
                      funcexpr shift  99
                     vdef_stmt shift  176
               vdefAssign_stmt shift  175
                     cdef_stmt shift  174
                   assign_stmt shift  173
              assignMulti_stmt shift  172
                      if_start shift  110
                     if_header shift  5
                      if_block shift  28
                       if_stmt shift  169
                   while_start shift  107
                  while_header shift  3
                    while_stmt shift  168
                foreach_header shift  2
                  foreach_stmt shift  167
                 continue_stmt shift  166
                    break_stmt shift  165
                   return_stmt shift  56
                        action shift  59
                       actions shift  58
                    actionStmt shift  170
                      bodyStmt shift  161
                  bodyStmtList shift  8

State 8:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * assignMulti_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          bodyStmtList ::= bodyStmtList * bodyStmt
          rbracket ::= * RBRACKET
          stmt ::= lbracket bodyStmtList * rbracket
          stmt ::= lbracket bodyStmtList * return_stmt rbracket

                          NAME shift  80
                           VAR shift  53
                     SEMICOLON shift  177
                         CONST shift  54
                            IF shift  196
                         WHILE shift  190
                           FOR shift  106
                      CONTINUE shift  104
                         BREAK shift  103
                        RETURN shift  21
                    ACTIONNAME shift  102
                      RBRACKET shift  159
                 nameListMulti shift  90
                      funcexpr shift  99
                     vdef_stmt shift  176
               vdefAssign_stmt shift  175
                     cdef_stmt shift  174
                   assign_stmt shift  173
              assignMulti_stmt shift  172
                      if_start shift  110
                     if_header shift  5
                      if_block shift  28
                       if_stmt shift  169
                   while_start shift  107
                  while_header shift  3
                    while_stmt shift  168
                foreach_header shift  2
                  foreach_stmt shift  167
                 continue_stmt shift  166
                    break_stmt shift  165
                   return_stmt shift  57
                        action shift  59
                       actions shift  58
                    actionStmt shift  170
                      bodyStmt shift  160
                      rbracket shift  158

State 9:
      (0) program ::= chunks *
          vdef_stmt ::= * VAR nameList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          import_chunk ::= * FROM NAME IMPORT nameList
          chunk ::= * import_chunk
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * cdef_stmt
          chunks ::= chunks * chunk

                             $ reduce 0
                           VAR shift  55
                         CONST shift  54
                      FUNCTION shift  113
                          FROM shift  97
                     vdef_stmt shift  148
                     cdef_stmt shift  147
                function_start shift  112
               function_header shift  6
                    fdef_chunk shift  149
                  import_chunk shift  150
                         chunk shift  146

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  15
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                 CONDITIONNAME shift  114
                      funcexpr shift  133
                          expr shift  61
                         lexpr shift  77

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  15
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                 CONDITIONNAME shift  114
                      funcexpr shift  133
                          expr shift  61
                         lexpr shift  78

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  15
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                 CONDITIONNAME shift  114
                      funcexpr shift  133
                          expr shift  61
                         lexpr shift  79

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        STRING shift  211
                        LPAREN shift  47
                        RPAREN shift  208
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  70
                         fArgs shift  93

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  14
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                 CONDITIONNAME shift  114
                      funcexpr shift  133
                          expr shift  61
                         lexpr shift  212

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  14
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                 CONDITIONNAME shift  114
                      funcexpr shift  133
                          expr shift  61
                         lexpr shift  213

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  15
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                 CONDITIONNAME shift  114
                      funcexpr shift  133
                          expr shift  61
                         lexpr shift  115

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  15
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                 CONDITIONNAME shift  114
                      funcexpr shift  133
                          expr shift  61
                         lexpr shift  214

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= L2V LPAREN * lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  15
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                 CONDITIONNAME shift  114
                      funcexpr shift  133
                          expr shift  61
                         lexpr shift  83

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= NAME LPAREN * fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          funcexpr ::= NAME LPAREN * RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        STRING shift  211
                        LPAREN shift  47
                        RPAREN shift  205
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  70
                         fArgs shift  92

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        STRING shift  211
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  70
                         fArgs shift  84

State 21:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * SEMICOLON
          return_stmt ::= RETURN * exprList SEMICOLON

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                     SEMICOLON shift  182
                      exprList shift  85
                      funcexpr shift  139
                          expr shift  71

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          fArgs ::= fArgs COMMA * fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        STRING shift  211
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  70
                         fArgs shift  210

State 23:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= FOR LPAREN nameList COLON * exprList RPAREN

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      exprList shift  86
                      funcexpr shift  139
                          expr shift  71

State 24:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      exprList shift  87
                      funcexpr shift  139
                          expr shift  71

State 25:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assignMulti_stmt ::= nameListMulti ASSIGN * exprList SEMICOLON

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      exprList shift  89
                      funcexpr shift  139
                          expr shift  71

State 26:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          exprList ::= exprList COMMA * exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      exprList shift  204
                      funcexpr shift  139
                          expr shift  71

State 27:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      exprList shift  91
                      funcexpr shift  139
                          expr shift  71

State 28:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
     (60) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  109
                          ELSE reduce 60  ** Parsing conflict **
                    elif_start shift  108
                   elif_header shift  4
                   else_header shift  1
                     {default} reduce 60

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= NAME ASSIGN * expr SEMICOLON

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  62

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  64

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  65

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  66

State 33:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  67

State 34:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  68

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  69

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  215

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  216

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  217

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  73

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  72

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  74

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  75

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  76

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  218

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  219

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  207

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  63

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  82

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  226
                          NAME shift  129
                        LPAREN shift  47
                           L2V shift  128
                     MAPSTRING shift  127
                          UNIT shift  124
                        SWITCH shift  121
                      LOCATION shift  118
                      funcexpr shift  133
                          expr shift  81

State 50:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          function_header ::= function_start LPAREN * nameList RPAREN
          function_header ::= function_start LPAREN * RPAREN

                          NAME shift  145
                        RPAREN shift  200
                 nameListMulti shift  143
                      nameList shift  111

State 51:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          import_chunk ::= FROM NAME IMPORT * nameList

                          NAME shift  145
                 nameListMulti shift  143
                      nameList shift  151

State 52:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          foreach_header ::= FOR LPAREN * nameList COLON exprList RPAREN

                          NAME shift  145
                 nameListMulti shift  143
                      nameList shift  105

State 53:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          vdef_stmt ::= VAR * nameList SEMICOLON
          vdefAssign_stmt ::= VAR * nameList ASSIGN exprList SEMICOLON

                          NAME shift  145
                 nameListMulti shift  143
                      nameList shift  88

State 54:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          cdef_stmt ::= CONST * nameList ASSIGN exprList SEMICOLON

                          NAME shift  145
                 nameListMulti shift  143
                      nameList shift  140

State 55:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          vdef_stmt ::= VAR * nameList SEMICOLON

                          NAME shift  145
                 nameListMulti shift  143
                      nameList shift  141

State 56:
          rbracket ::= * RBRACKET
          stmt ::= lbracket return_stmt * rbracket

                      RBRACKET shift  159
                      rbracket shift  155

State 57:
          rbracket ::= * RBRACKET
          stmt ::= lbracket bodyStmtList return_stmt * rbracket

                      RBRACKET shift  159
                      rbracket shift  157

State 58:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
     (81) actionStmt ::= actions *

                    ACTIONNAME shift  102
                    ACTIONNAME reduce 81  ** Parsing conflict **
                        action shift  179
                     {default} reduce 81

State 59:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
     (80) actionStmt ::= action *

                    ACTIONNAME shift  102
                    ACTIONNAME reduce 80  ** Parsing conflict **
                        action shift  180
                     {default} reduce 80

State 60:
          numList ::= * NUMBER COMMA NUMBER
          numList ::= * numList COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET * numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  95
                       numList shift  94

State 61:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  35
                            LE shift  33
                            LT shift  32
                            GE shift  31
                            GT shift  30
                            NE shift  34
                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44

State 62:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          assign_stmt ::= NAME ASSIGN expr * SEMICOLON

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     SEMICOLON shift  199

State 63:
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                        RPAREN shift  225

State 64:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (43) lexpr ::= expr GT expr *

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 43

State 65:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (42) lexpr ::= expr GE expr *

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 42

State 66:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (41) lexpr ::= expr LT expr *

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 41

State 67:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (40) lexpr ::= expr LE expr *

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 40

State 68:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (39) lexpr ::= expr NE expr *

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 39

State 69:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (38) lexpr ::= expr EQ expr *

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 38

State 70:
     (13) fArgs ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 13

State 71:
      (9) exprList ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 9

State 72:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (33) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 33

State 73:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (34) expr ::= expr BITXOR expr *

                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 34

State 74:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (32) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 32

State 75:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (31) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 31

State 76:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (30) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 30

State 77:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  16
                          LAND shift  17
                        RPAREN shift  189

State 78:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  16
                          LAND shift  17
                        RPAREN shift  192

State 79:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  16
                          LAND shift  17
                        RPAREN shift  195

State 80:
          nameListMulti ::= NAME * COMMA NAME
          funcexpr ::= NAME * LPAREN fArgs RPAREN
          funcexpr ::= NAME * LPAREN RPAREN
          assign_stmt ::= NAME * ASSIGN expr SEMICOLON

                         COMMA shift  144
                        ASSIGN shift  29
                        LPAREN shift  19

State 81:
          expr ::= expr * PLUS expr
     (25) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 25

State 82:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (26) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 26

State 83:
          expr ::= L2V LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  16
                          LAND shift  17
                        RPAREN shift  224

State 84:
          fArgs ::= fArgs * COMMA fArgs
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                         COMMA shift  22
                        RPAREN shift  101

State 85:
          exprList ::= exprList * COMMA exprList
          return_stmt ::= RETURN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  183

State 86:
          exprList ::= exprList * COMMA exprList
          foreach_header ::= FOR LPAREN nameList COLON exprList * RPAREN

                         COMMA shift  26
                        RPAREN shift  187

State 87:
          exprList ::= exprList * COMMA exprList
          vdefAssign_stmt ::= VAR nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  197

State 88:
          vdef_stmt ::= VAR nameList * SEMICOLON
          vdefAssign_stmt ::= VAR nameList * ASSIGN exprList SEMICOLON

                        ASSIGN shift  24
                     SEMICOLON shift  231

State 89:
          exprList ::= exprList * COMMA exprList
          assignMulti_stmt ::= nameListMulti ASSIGN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  198

State 90:
          nameListMulti ::= nameListMulti * COMMA NAME
          assignMulti_stmt ::= nameListMulti * ASSIGN exprList SEMICOLON

                         COMMA shift  142
                        ASSIGN shift  25

State 91:
          exprList ::= exprList * COMMA exprList
          cdef_stmt ::= CONST nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  203

State 92:
          fArgs ::= fArgs * COMMA fArgs
          funcexpr ::= NAME LPAREN fArgs * RPAREN

                         COMMA shift  22
                        RPAREN shift  206

State 93:
          fArgs ::= fArgs * COMMA fArgs
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                         COMMA shift  22
                        RPAREN shift  209

State 94:
          numList ::= numList * COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList * RSQBRACKET RSQBRACKET

                         COMMA shift  135
                    RSQBRACKET shift  134

State 95:
          numList ::= NUMBER * COMMA NUMBER
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                         COMMA shift  137
                    RSQBRACKET shift  136

State 96:
          import_chunk ::= FROM NAME * IMPORT nameList

                        IMPORT shift  51

State 97:
          import_chunk ::= FROM * NAME IMPORT nameList

                          NAME shift  96

State 98:
          stmt ::= lbracket error * RBRACKET

                      RBRACKET shift  154

State 99:
          bodyStmt ::= funcexpr * SEMICOLON

                     SEMICOLON shift  171

State 100:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  178

State 101:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  181

State 102:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  20

State 103:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  184

State 104:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  185

State 105:
          foreach_header ::= FOR LPAREN nameList * COLON exprList RPAREN

                         COLON shift  23

State 106:
          foreach_header ::= FOR * LPAREN nameList COLON exprList RPAREN

                        LPAREN shift  52

State 107:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  10

State 108:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  11

State 109:
          elif_start ::= ELSE * IF
     (59) else_header ::= ELSE *

                            IF shift  193
                            IF reduce 59  ** Parsing conflict **
                     {default} reduce 59

State 110:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  12

State 111:
          function_header ::= function_start LPAREN nameList * RPAREN

                        RPAREN shift  201

State 112:
          function_header ::= function_start * LPAREN nameList RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  50

State 113:
          function_start ::= FUNCTION * NAME

                          NAME shift  202

State 114:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  13

State 115:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (45) lexpr ::= lexpr LOR lexpr *

                          LAND shift  17
                     {default} reduce 45

State 116:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  220

State 117:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  116

State 118:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  117

State 119:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  221

State 120:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  119

State 121:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  120

State 122:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  222

State 123:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  122

State 124:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  123

State 125:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  223

State 126:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  125

State 127:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  126

State 128:
          expr ::= L2V * LPAREN lexpr RPAREN

                        LPAREN shift  18

State 129:
     (12) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
          funcexpr ::= NAME * LPAREN RPAREN

                        LPAREN shift  19
                     {default} reduce 12

State 130:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  136

State 131:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  130

State 132:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  131

State 133:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (18) expr ::= funcexpr *

                    LSQBRACKET shift  132
                     {default} reduce 18

State 134:
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  227

State 135:
          numList ::= numList COMMA * NUMBER

                        NUMBER shift  228

State 136:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  229

State 137:
          numList ::= NUMBER COMMA * NUMBER

                        NUMBER shift  230

State 138:
          exprList ::= funcexpr LSQBRACKET * LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  60

State 139:
          exprList ::= funcexpr * LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (18) expr ::= funcexpr *

                    LSQBRACKET shift  138
                     {default} reduce 18

State 140:
          cdef_stmt ::= CONST nameList * ASSIGN exprList SEMICOLON

                        ASSIGN shift  27

State 141:
          vdef_stmt ::= VAR nameList * SEMICOLON

                     SEMICOLON shift  231

State 142:
          nameListMulti ::= nameListMulti COMMA * NAME

                          NAME shift  232

State 143:
          nameListMulti ::= nameListMulti * COMMA NAME
      (6) nameList ::= nameListMulti *

                         COMMA shift  142
                     {default} reduce 6

State 144:
          nameListMulti ::= NAME COMMA * NAME

                          NAME shift  233

State 145:
          nameListMulti ::= NAME * COMMA NAME
      (5) nameList ::= NAME *

                         COMMA shift  144
                     {default} reduce 5

State 146:
    (113) chunks ::= chunks chunk *

                     {default} reduce 113

State 147:
    (111) chunk ::= cdef_stmt *

                     {default} reduce 111

State 148:
    (110) chunk ::= vdef_stmt *

                     {default} reduce 110

State 149:
    (109) chunk ::= fdef_chunk *

                     {default} reduce 109

State 150:
    (108) chunk ::= import_chunk *

                     {default} reduce 108

State 151:
    (107) import_chunk ::= FROM NAME IMPORT nameList *

                     {default} reduce 107

State 152:
     (72) fdef_chunk ::= function_header stmt *

                     {default} reduce 72

State 153:
     (61) if_stmt ::= if_block else_header stmt *

                     {default} reduce 61

State 154:
    (106) stmt ::= lbracket error RBRACKET *

                     {default} reduce 106

State 155:
    (103) stmt ::= lbracket return_stmt rbracket *

                     {default} reduce 103

State 156:
    (102) stmt ::= lbracket RBRACKET *

                     {default} reduce 102

State 157:
    (105) stmt ::= lbracket bodyStmtList return_stmt rbracket *

                     {default} reduce 105

State 158:
    (104) stmt ::= lbracket bodyStmtList rbracket *

                     {default} reduce 104

State 159:
     (99) rbracket ::= RBRACKET *

                     {default} reduce 99

State 160:
     (97) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 97

State 161:
     (96) bodyStmtList ::= bodyStmt *

                     {default} reduce 96

State 162:
    (101) stmt ::= return_stmt *

                     {default} reduce 101

State 163:
    (100) stmt ::= bodyStmt *

                     {default} reduce 100

State 164:
     (98) lbracket ::= LBRACKET *

                     {default} reduce 98

State 165:
     (95) bodyStmt ::= break_stmt *

                     {default} reduce 95

State 166:
     (94) bodyStmt ::= continue_stmt *

                     {default} reduce 94

State 167:
     (93) bodyStmt ::= foreach_stmt *

                     {default} reduce 93

State 168:
     (92) bodyStmt ::= while_stmt *

                     {default} reduce 92

State 169:
     (91) bodyStmt ::= if_stmt *

                     {default} reduce 91

State 170:
     (90) bodyStmt ::= actionStmt *

                     {default} reduce 90

State 171:
     (89) bodyStmt ::= funcexpr SEMICOLON *

                     {default} reduce 89

State 172:
     (88) bodyStmt ::= assignMulti_stmt *

                     {default} reduce 88

State 173:
     (87) bodyStmt ::= assign_stmt *

                     {default} reduce 87

State 174:
     (86) bodyStmt ::= cdef_stmt *

                     {default} reduce 86

State 175:
     (85) bodyStmt ::= vdefAssign_stmt *

                     {default} reduce 85

State 176:
     (84) bodyStmt ::= vdef_stmt *

                     {default} reduce 84

State 177:
     (83) bodyStmt ::= SEMICOLON *

                     {default} reduce 83

State 178:
     (82) stmt ::= error SEMICOLON *

                     {default} reduce 82

State 179:
     (79) actions ::= actions action *

                     {default} reduce 79

State 180:
     (78) actions ::= action action *

                     {default} reduce 78

State 181:
     (77) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 77

State 182:
     (73) return_stmt ::= RETURN SEMICOLON *

                     {default} reduce 73

State 183:
     (74) return_stmt ::= RETURN exprList SEMICOLON *

                     {default} reduce 74

State 184:
     (68) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 68

State 185:
     (67) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 67

State 186:
     (66) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 66

State 187:
     (65) foreach_header ::= FOR LPAREN nameList COLON exprList RPAREN *

                     {default} reduce 65

State 188:
     (64) while_stmt ::= while_header stmt *

                     {default} reduce 64

State 189:
     (63) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 63

State 190:
     (62) while_start ::= WHILE *

                     {default} reduce 62

State 191:
     (58) if_block ::= if_block elif_header stmt *

                     {default} reduce 58

State 192:
     (57) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 57

State 193:
     (56) elif_start ::= ELSE IF *

                     {default} reduce 56

State 194:
     (55) if_block ::= if_header stmt *

                     {default} reduce 55

State 195:
     (54) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 54

State 196:
     (53) if_start ::= IF *

                     {default} reduce 53

State 197:
     (49) vdefAssign_stmt ::= VAR nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 49

State 198:
     (52) assignMulti_stmt ::= nameListMulti ASSIGN exprList SEMICOLON *

                     {default} reduce 52

State 199:
     (51) assign_stmt ::= NAME ASSIGN expr SEMICOLON *

                     {default} reduce 51

State 200:
     (71) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 71

State 201:
     (70) function_header ::= function_start LPAREN nameList RPAREN *

                     {default} reduce 70

State 202:
     (69) function_start ::= FUNCTION NAME *

                     {default} reduce 69

State 203:
     (50) cdef_stmt ::= CONST nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 50

State 204:
          exprList ::= exprList * COMMA exprList
     (10) exprList ::= exprList COMMA exprList *

                     {default} reduce 10

State 205:
     (17) funcexpr ::= NAME LPAREN RPAREN *

                     {default} reduce 17

State 206:
     (16) funcexpr ::= NAME LPAREN fArgs RPAREN *

                     {default} reduce 16

State 207:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (27) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 27

State 208:
     (76) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 76

State 209:
     (75) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 75

State 210:
          fArgs ::= fArgs * COMMA fArgs
     (15) fArgs ::= fArgs COMMA fArgs *

                     {default} reduce 15

State 211:
     (14) fArgs ::= STRING *

                     {default} reduce 14

State 212:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (46) lexpr ::= LNOT lexpr *
     (47) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 47

State 213:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (46) lexpr ::= LNOT lexpr *

                     {default} reduce 46

State 214:
          lexpr ::= lexpr * LAND lexpr
     (44) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 44

State 215:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (37) expr ::= BITNOT expr *

                     {default} reduce 37

State 216:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (36) expr ::= MINUS expr *

                     {default} reduce 36

State 217:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (35) expr ::= PLUS expr *

                     {default} reduce 35

State 218:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (29) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 29

State 219:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (28) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 28

State 220:
     (24) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 24

State 221:
     (23) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 23

State 222:
     (22) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 22

State 223:
     (21) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 21

State 224:
     (20) expr ::= L2V LPAREN lexpr RPAREN *

                     {default} reduce 20

State 225:
     (19) expr ::= LPAREN expr RPAREN *

                     {default} reduce 19

State 226:
     (11) expr ::= NUMBER *

                     {default} reduce 11

State 227:
      (7) exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET *

                     {default} reduce 7

State 228:
      (2) numList ::= numList COMMA NUMBER *

                     {default} reduce 2

State 229:
      (8) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 8

State 230:
      (1) numList ::= NUMBER COMMA NUMBER *

                     {default} reduce 1

State 231:
     (48) vdef_stmt ::= VAR nameList SEMICOLON *

                     {default} reduce 48

State 232:
      (4) nameListMulti ::= nameListMulti COMMA NAME *

                     {default} reduce 4

State 233:
      (3) nameListMulti ::= NAME COMMA NAME *

                     {default} reduce 3

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: LSQBRACKET
   28: RSQBRACKET
   29: STRING
   30: LPAREN
   31: RPAREN
   32: FUNCCALL
   33: L2V
   34: MAPSTRING
   35: UNIT
   36: SWITCH
   37: LOCATION
   38: VAR
   39: SEMICOLON
   40: CONST
   41: IF
   42: ELSE
   43: WHILE
   44: FOR
   45: COLON
   46: CONTINUE
   47: BREAK
   48: FUNCTION
   49: RETURN
   50: CONDITIONNAME
   51: ACTIONNAME
   52: LBRACKET
   53: RBRACKET
   54: FROM
   55: IMPORT
   56: error:
   57: nt:
   58: program: <lambda> VAR CONST FUNCTION FROM
   59: chunks: <lambda> VAR CONST FUNCTION FROM
   60: numList: NUMBER
   61: nameListMulti: NAME
   62: nameList: NAME
   63: exprList: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   64: funcexpr: NAME
   65: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   66: fArgs: PLUS MINUS BITNOT NUMBER NAME STRING LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   67: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
   68: vdef_stmt: VAR
   69: vdefAssign_stmt: VAR
   70: cdef_stmt: CONST
   71: assign_stmt: NAME
   72: assignMulti_stmt: NAME
   73: if_start: IF
   74: if_header: IF
   75: if_block: IF
   76: stmt: NAME VAR SEMICOLON CONST IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME LBRACKET
   77: elif_start: ELSE
   78: elif_header: ELSE
   79: else_header: ELSE
   80: if_stmt: IF
   81: while_start: WHILE
   82: while_header: WHILE
   83: while_stmt: WHILE
   84: foreach_header: FOR
   85: foreach_stmt: FOR
   86: continue_stmt: CONTINUE
   87: break_stmt: BREAK
   88: function_start: FUNCTION
   89: function_header: FUNCTION
   90: fdef_chunk: FUNCTION
   91: return_stmt: RETURN
   92: action: ACTIONNAME
   93: actions: ACTIONNAME
   94: actionStmt: ACTIONNAME
   95: bodyStmt: NAME VAR SEMICOLON CONST IF WHILE FOR CONTINUE BREAK ACTIONNAME
   96: bodyStmtList: NAME VAR SEMICOLON CONST IF WHILE FOR CONTINUE BREAK ACTIONNAME
   97: lbracket: LBRACKET
   98: rbracket: RBRACKET
   99: import_chunk: FROM
  100: chunk: VAR CONST FUNCTION FROM
