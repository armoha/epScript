State 0:
          program ::= * stmt
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * block

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  63
                        NUMBER shift  99
                        BITNOT shift  30
                           VAR shift  37
                     SEMICOLON shift  107
                      LBRACKET shift  1
                            IF shift  116
                         WHILE shift  94
                      CONTINUE shift  72
                         BREAK shift  73
                         error shift  74
                       program accept
                          stmt shift  66
                      nameList shift  65
                          expr shift  39
                     vdef_stmt shift  108
               vdefAssign_stmt shift  109
                vdefMulti_stmt shift  111
          vdefMultiAssign_stmt shift  110
                   assign_stmt shift  112
              assignMulti_stmt shift  113
                         block shift  101
                      if_start shift  69
                     if_header shift  5
                       if_stmt shift  114
                   else_header shift  4
                   while_start shift  36
                    while_stmt shift  115
                 continue_stmt shift  83
                    break_stmt shift  90

State 1:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          stmtList ::= * stmt
          stmtList ::= * stmtList stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET * stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          block ::= LBRACKET * error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * block

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  63
                        NUMBER shift  99
                        BITNOT shift  30
                           VAR shift  37
                     SEMICOLON shift  107
                      LBRACKET shift  1
                            IF shift  116
                         WHILE shift  94
                      CONTINUE shift  72
                         BREAK shift  73
                         error shift  62
                          stmt shift  119
                      nameList shift  65
                          expr shift  39
                     vdef_stmt shift  108
               vdefAssign_stmt shift  109
                vdefMulti_stmt shift  111
          vdefMultiAssign_stmt shift  110
                   assign_stmt shift  112
              assignMulti_stmt shift  113
                      stmtList shift  2
                         block shift  101
                      if_start shift  69
                     if_header shift  5
                       if_stmt shift  114
                   else_header shift  4
                   while_start shift  36
                    while_stmt shift  115
                 continue_stmt shift  83
                    break_stmt shift  90

State 2:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          stmtList ::= stmtList * stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET stmtList * RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * block

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  63
                        NUMBER shift  99
                        BITNOT shift  30
                           VAR shift  37
                     SEMICOLON shift  107
                      LBRACKET shift  1
                      RBRACKET shift  117
                            IF shift  116
                         WHILE shift  94
                      CONTINUE shift  72
                         BREAK shift  73
                         error shift  74
                          stmt shift  118
                      nameList shift  65
                          expr shift  39
                     vdef_stmt shift  108
               vdefAssign_stmt shift  109
                vdefMulti_stmt shift  111
          vdefMultiAssign_stmt shift  110
                   assign_stmt shift  112
              assignMulti_stmt shift  113
                         block shift  101
                      if_start shift  69
                     if_header shift  5
                       if_stmt shift  114
                   else_header shift  4
                   while_start shift  36
                    while_stmt shift  115
                 continue_stmt shift  83
                    break_stmt shift  90

State 3:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          while_stmt ::= while_start while_cond * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * block

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  63
                        NUMBER shift  99
                        BITNOT shift  30
                           VAR shift  37
                     SEMICOLON shift  107
                      LBRACKET shift  1
                            IF shift  116
                         WHILE shift  94
                      CONTINUE shift  72
                         BREAK shift  73
                         error shift  74
                          stmt shift  100
                      nameList shift  65
                          expr shift  39
                     vdef_stmt shift  108
               vdefAssign_stmt shift  109
                vdefMulti_stmt shift  111
          vdefMultiAssign_stmt shift  110
                   assign_stmt shift  112
              assignMulti_stmt shift  113
                         block shift  101
                      if_start shift  69
                     if_header shift  5
                       if_stmt shift  114
                   else_header shift  4
                   while_start shift  36
                    while_stmt shift  115
                 continue_stmt shift  83
                    break_stmt shift  90

State 4:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          if_stmt ::= else_header * stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * block

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  63
                        NUMBER shift  99
                        BITNOT shift  30
                           VAR shift  37
                     SEMICOLON shift  107
                      LBRACKET shift  1
                            IF shift  116
                         WHILE shift  94
                      CONTINUE shift  72
                         BREAK shift  73
                         error shift  74
                          stmt shift  93
                      nameList shift  65
                          expr shift  39
                     vdef_stmt shift  108
               vdefAssign_stmt shift  109
                vdefMulti_stmt shift  111
          vdefMultiAssign_stmt shift  110
                   assign_stmt shift  112
              assignMulti_stmt shift  113
                         block shift  101
                      if_start shift  69
                     if_header shift  5
                       if_stmt shift  114
                   else_header shift  4
                   while_start shift  36
                    while_stmt shift  115
                 continue_stmt shift  83
                    break_stmt shift  90

State 5:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          if_stmt ::= if_header * stmt
          else_header ::= * if_header stmt ELSE
          else_header ::= if_header * stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * block

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  63
                        NUMBER shift  99
                        BITNOT shift  30
                           VAR shift  37
                     SEMICOLON shift  107
                      LBRACKET shift  1
                            IF shift  116
                         WHILE shift  94
                      CONTINUE shift  72
                         BREAK shift  73
                         error shift  74
                          stmt shift  71
                      nameList shift  65
                          expr shift  39
                     vdef_stmt shift  108
               vdefAssign_stmt shift  109
                vdefMulti_stmt shift  111
          vdefMultiAssign_stmt shift  110
                   assign_stmt shift  112
              assignMulti_stmt shift  113
                         block shift  101
                      if_start shift  69
                     if_header shift  5
                       if_stmt shift  114
                   else_header shift  4
                   while_start shift  36
                    while_stmt shift  115
                 continue_stmt shift  83
                    break_stmt shift  90

State 6:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr

                          LNOT shift  8
                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  38
                         lexpr shift  70

State 7:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN

                          LNOT shift  8
                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  38
                         lexpr shift  57

State 8:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr

                          LNOT shift  11
                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  38
                         lexpr shift  85

State 9:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr

                          LNOT shift  8
                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  38
                         lexpr shift  81

State 10:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_cond ::= LPAREN * lexpr RPAREN

                          LNOT shift  8
                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  38
                         lexpr shift  59

State 11:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr

                          LNOT shift  11
                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  38
                         lexpr shift  87

State 12:
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assignMulti_stmt ::= nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                      exprList shift  64
                          expr shift  43

State 13:
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefMultiAssign_stmt ::= VAR nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                      exprList shift  61
                          expr shift  43

State 14:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  51

State 15:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  46

State 16:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  48

State 17:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  42

State 18:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= NAME ASSIGN * expr SEMICOLON

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  41

State 19:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  60

State 20:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  58

State 21:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  96

State 22:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  95

State 23:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  92

State 24:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  53

State 25:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  54

State 26:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  52

State 27:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  50

State 28:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  89

State 29:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  86

State 30:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  84

State 31:
          exprList ::= exprList COMMA * expr
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  45

State 32:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR NAME ASSIGN * expr SEMICOLON

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  40

State 33:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  49

State 34:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  47

State 35:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  28
                         MINUS shift  29
                          NAME shift  97
                        NUMBER shift  99
                        BITNOT shift  30
                          expr shift  44

State 36:
          while_cond ::= * LPAREN lexpr RPAREN
          while_stmt ::= while_start * while_cond stmt

                        LPAREN shift  10
                    while_cond shift  3

State 37:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefAssign_stmt ::= VAR * NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= VAR * nameList SEMICOLON
          vdefMultiAssign_stmt ::= VAR * nameList ASSIGN exprList SEMICOLON

                          NAME shift  56
                      nameList shift  55

State 38:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  16
                            LE shift  35
                            LT shift  34
                            GE shift  33
                            GT shift  15
                            NE shift  17
                         BITOR shift  27
                        BITXOR shift  14
                        BITAND shift  26
                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23

State 39:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          stmt ::= expr * SEMICOLON

                         BITOR shift  27
                        BITXOR shift  14
                        BITAND shift  26
                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     SEMICOLON shift  78

State 40:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          vdefAssign_stmt ::= VAR NAME ASSIGN expr * SEMICOLON

                         BITOR shift  27
                        BITXOR shift  14
                        BITAND shift  26
                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     SEMICOLON shift  76

State 41:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          assign_stmt ::= NAME ASSIGN expr * SEMICOLON

                         BITOR shift  27
                        BITXOR shift  14
                        BITAND shift  26
                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     SEMICOLON shift  82

State 42:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (21) lexpr ::= expr NE expr *

                         BITOR shift  27
                        BITXOR shift  14
                        BITAND shift  26
                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 21

State 43:
      (3) exprList ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  27
                        BITXOR shift  14
                        BITAND shift  26
                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 3

State 44:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (22) lexpr ::= expr LE expr *

                         BITOR shift  27
                        BITXOR shift  14
                        BITAND shift  26
                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 22

State 45:
      (4) exprList ::= exprList COMMA expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  27
                        BITXOR shift  14
                        BITAND shift  26
                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 4

State 46:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (25) lexpr ::= expr GT expr *

                         BITOR shift  27
                        BITXOR shift  14
                        BITAND shift  26
                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 25

State 47:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (23) lexpr ::= expr LT expr *

                         BITOR shift  27
                        BITXOR shift  14
                        BITAND shift  26
                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 23

State 48:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (20) lexpr ::= expr EQ expr *

                         BITOR shift  27
                        BITXOR shift  14
                        BITAND shift  26
                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 20

State 49:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (24) lexpr ::= expr GE expr *

                         BITOR shift  27
                        BITXOR shift  14
                        BITAND shift  26
                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 24

State 50:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (15) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  14
                        BITAND shift  26
                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 15

State 51:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (16) expr ::= expr BITXOR expr *

                        BITAND shift  26
                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 16

State 52:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (14) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  24
                        RSHIFT shift  25
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 14

State 53:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (12) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 12

State 54:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (13) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 13

State 55:
          nameList ::= nameList * COMMA NAME
          vdefMulti_stmt ::= VAR nameList * SEMICOLON
          vdefMultiAssign_stmt ::= VAR nameList * ASSIGN exprList SEMICOLON

                         COMMA shift  68
                        ASSIGN shift  13
                     SEMICOLON shift  120

State 56:
          nameList ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON
          vdefAssign_stmt ::= VAR NAME * ASSIGN expr SEMICOLON

                         COMMA shift  67
                        ASSIGN shift  32
                     SEMICOLON shift  77

State 57:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  6
                          LAND shift  9
                        RPAREN shift  88

State 58:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
      (8) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 8

State 59:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_cond ::= LPAREN lexpr * RPAREN

                           LOR shift  6
                          LAND shift  9
                        RPAREN shift  98

State 60:
          expr ::= expr * PLUS expr
      (7) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  22
                      MULTIPLY shift  21
                           MOD shift  23
                     {default} reduce 7

State 61:
          exprList ::= exprList * COMMA expr
          vdefMultiAssign_stmt ::= VAR nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  31
                     SEMICOLON shift  75

State 62:
          block ::= LBRACKET error * RBRACKET
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  106
                      RBRACKET shift  105

State 63:
          nameList ::= NAME * COMMA NAME
      (6) expr ::= NAME *
          assign_stmt ::= NAME * ASSIGN expr SEMICOLON

                         COMMA shift  67
                        ASSIGN shift  18
                     {default} reduce 6

State 64:
          exprList ::= exprList * COMMA expr
          assignMulti_stmt ::= nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  31
                     SEMICOLON shift  79

State 65:
          nameList ::= nameList * COMMA NAME
          assignMulti_stmt ::= nameList * ASSIGN exprList SEMICOLON

                         COMMA shift  68
                        ASSIGN shift  12

State 66:
      (0) program ::= stmt *

                             $ reduce 0

State 67:
          nameList ::= NAME COMMA * NAME

                          NAME shift  103

State 68:
          nameList ::= nameList COMMA * NAME

                          NAME shift  80

State 69:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  7

State 70:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (27) lexpr ::= lexpr LOR lexpr *

                          LAND shift  9
                     {default} reduce 27

State 71:
     (42) if_stmt ::= if_header stmt *
          else_header ::= if_header stmt * ELSE

                          ELSE shift  91
                     {default} reduce 42

State 72:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  102

State 73:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  104

State 74:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  106

State 75:
     (33) vdefMultiAssign_stmt ::= VAR nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 33

State 76:
     (31) vdefAssign_stmt ::= VAR NAME ASSIGN expr SEMICOLON *

                     {default} reduce 31

State 77:
     (30) vdef_stmt ::= VAR NAME SEMICOLON *

                     {default} reduce 30

State 78:
     (58) stmt ::= expr SEMICOLON *

                     {default} reduce 58

State 79:
     (35) assignMulti_stmt ::= nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 35

State 80:
      (2) nameList ::= nameList COMMA NAME *

                     {default} reduce 2

State 81:
          lexpr ::= lexpr * LAND lexpr
     (26) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 26

State 82:
     (34) assign_stmt ::= NAME ASSIGN expr SEMICOLON *

                     {default} reduce 34

State 83:
     (61) stmt ::= continue_stmt *

                     {default} reduce 61

State 84:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (19) expr ::= BITNOT expr *

                     {default} reduce 19

State 85:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (28) lexpr ::= LNOT lexpr *

                     {default} reduce 28

State 86:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (18) expr ::= MINUS expr *

                     {default} reduce 18

State 87:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (28) lexpr ::= LNOT lexpr *
     (29) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 29

State 88:
     (41) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 41

State 89:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (17) expr ::= PLUS expr *

                     {default} reduce 17

State 90:
     (62) stmt ::= break_stmt *

                     {default} reduce 62

State 91:
     (43) else_header ::= if_header stmt ELSE *

                     {default} reduce 43

State 92:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (11) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 11

State 93:
     (44) if_stmt ::= else_header stmt *

                     {default} reduce 44

State 94:
     (45) while_start ::= WHILE *

                     {default} reduce 45

State 95:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (10) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 10

State 96:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
      (9) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 9

State 97:
      (6) expr ::= NAME *

                     {default} reduce 6

State 98:
     (46) while_cond ::= LPAREN lexpr RPAREN *

                     {default} reduce 46

State 99:
      (5) expr ::= NUMBER *

                     {default} reduce 5

State 100:
     (47) while_stmt ::= while_start while_cond stmt *

                     {default} reduce 47

State 101:
     (63) stmt ::= block *

                     {default} reduce 63

State 102:
     (48) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 48

State 103:
      (1) nameList ::= NAME COMMA NAME *

                     {default} reduce 1

State 104:
     (49) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 49

State 105:
     (39) block ::= LBRACKET error RBRACKET *

                     {default} reduce 39

State 106:
     (50) stmt ::= error SEMICOLON *

                     {default} reduce 50

State 107:
     (51) stmt ::= SEMICOLON *

                     {default} reduce 51

State 108:
     (52) stmt ::= vdef_stmt *

                     {default} reduce 52

State 109:
     (53) stmt ::= vdefAssign_stmt *

                     {default} reduce 53

State 110:
     (54) stmt ::= vdefMultiAssign_stmt *

                     {default} reduce 54

State 111:
     (55) stmt ::= vdefMulti_stmt *

                     {default} reduce 55

State 112:
     (56) stmt ::= assign_stmt *

                     {default} reduce 56

State 113:
     (57) stmt ::= assignMulti_stmt *

                     {default} reduce 57

State 114:
     (59) stmt ::= if_stmt *

                     {default} reduce 59

State 115:
     (60) stmt ::= while_stmt *

                     {default} reduce 60

State 116:
     (40) if_start ::= IF *

                     {default} reduce 40

State 117:
     (38) block ::= LBRACKET stmtList RBRACKET *

                     {default} reduce 38

State 118:
     (37) stmtList ::= stmtList stmt *

                     {default} reduce 37

State 119:
     (36) stmtList ::= stmt *

                     {default} reduce 36

State 120:
     (32) vdefMulti_stmt ::= VAR nameList SEMICOLON *

                     {default} reduce 32

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: IFX
   25: IFNOT
   26: ELSE
   27: NAME
   28: NUMBER
   29: BITNOT
   30: VAR
   31: SEMICOLON
   32: LBRACKET
   33: RBRACKET
   34: IF
   35: LPAREN
   36: RPAREN
   37: WHILE
   38: CONTINUE
   39: BREAK
   40: error:
   41: nt:
   42: program: PLUS MINUS NAME NUMBER BITNOT VAR SEMICOLON LBRACKET IF WHILE CONTINUE BREAK
   43: stmt: PLUS MINUS NAME NUMBER BITNOT VAR SEMICOLON LBRACKET IF WHILE CONTINUE BREAK
   44: nameList: NAME
   45: exprList: PLUS MINUS NAME NUMBER BITNOT
   46: expr: PLUS MINUS NAME NUMBER BITNOT
   47: lexpr: LNOT PLUS MINUS NAME NUMBER BITNOT
   48: vdef_stmt: VAR
   49: vdefAssign_stmt: VAR
   50: vdefMulti_stmt: VAR
   51: vdefMultiAssign_stmt: VAR
   52: assign_stmt: NAME
   53: assignMulti_stmt: NAME
   54: stmtList: PLUS MINUS NAME NUMBER BITNOT VAR SEMICOLON LBRACKET IF WHILE CONTINUE BREAK
   55: block: LBRACKET
   56: if_start: IF
   57: if_header: IF
   58: if_stmt: IF
   59: else_header: IF
   60: while_start: WHILE
   61: while_cond: LPAREN
   62: while_stmt: WHILE
   63: continue_stmt: CONTINUE
   64: break_stmt: BREAK
