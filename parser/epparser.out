State 0:
          program ::= * chunks
    (108) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  9
                     {default} reduce 108

State 1:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          stmtList ::= * stmt
          stmtList ::= * stmtList stmt
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= blockStart * stmtList RBRACKET
          block ::= * blockStart error RBRACKET
          block ::= blockStart * error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  53
                     SEMICOLON shift  167
                         CONST shift  54
                      LBRACKET shift  190
                            IF shift  186
                         WHILE shift  180
                           FOR shift  104
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  21
                    ACTIONNAME shift  100
                         error shift  82
                 nameListMulti shift  89
                      funcexpr shift  97
                     vdef_stmt shift  166
               vdefAssign_stmt shift  165
                     cdef_stmt shift  164
                   assign_stmt shift  163
              assignMulti_stmt shift  162
                      stmtList shift  2
                          stmt shift  189
                    blockStart shift  1
                         block shift  153
                      if_start shift  108
                     if_header shift  7
                      if_block shift  28
                       if_stmt shift  159
                   while_start shift  105
                  while_header shift  5
                    while_stmt shift  158
                foreach_header shift  4
                  foreach_stmt shift  157
                 continue_stmt shift  156
                    break_stmt shift  155
                   return_stmt shift  154
                        action shift  57
                       actions shift  56
                    actionStmt shift  160

State 2:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          stmtList ::= stmtList * stmt
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= blockStart stmtList * RBRACKET
          block ::= * blockStart error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  53
                     SEMICOLON shift  167
                         CONST shift  54
                      LBRACKET shift  190
                      RBRACKET shift  187
                            IF shift  186
                         WHILE shift  180
                           FOR shift  104
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  21
                    ACTIONNAME shift  100
                         error shift  98
                 nameListMulti shift  89
                      funcexpr shift  97
                     vdef_stmt shift  166
               vdefAssign_stmt shift  165
                     cdef_stmt shift  164
                   assign_stmt shift  163
              assignMulti_stmt shift  162
                          stmt shift  188
                    blockStart shift  1
                         block shift  153
                      if_start shift  108
                     if_header shift  7
                      if_block shift  28
                       if_stmt shift  159
                   while_start shift  105
                  while_header shift  5
                    while_stmt shift  158
                foreach_header shift  4
                  foreach_stmt shift  157
                 continue_stmt shift  156
                    break_stmt shift  155
                   return_stmt shift  154
                        action shift  57
                       actions shift  56
                    actionStmt shift  160

State 3:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= * blockStart error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  53
                     SEMICOLON shift  167
                         CONST shift  54
                      LBRACKET shift  190
                            IF shift  186
                         WHILE shift  180
                           FOR shift  104
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  21
                    ACTIONNAME shift  100
                         error shift  98
                 nameListMulti shift  89
                      funcexpr shift  97
                     vdef_stmt shift  166
               vdefAssign_stmt shift  165
                     cdef_stmt shift  164
                   assign_stmt shift  163
              assignMulti_stmt shift  162
                          stmt shift  152
                    blockStart shift  1
                         block shift  153
                      if_start shift  108
                     if_header shift  7
                      if_block shift  28
                       if_stmt shift  159
                   while_start shift  105
                  while_header shift  5
                    while_stmt shift  158
                foreach_header shift  4
                  foreach_stmt shift  157
                 continue_stmt shift  156
                    break_stmt shift  155
                   return_stmt shift  154
                        action shift  57
                       actions shift  56
                    actionStmt shift  160

State 4:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= * blockStart error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  53
                     SEMICOLON shift  167
                         CONST shift  54
                      LBRACKET shift  190
                            IF shift  186
                         WHILE shift  180
                           FOR shift  104
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  21
                    ACTIONNAME shift  100
                         error shift  98
                 nameListMulti shift  89
                      funcexpr shift  97
                     vdef_stmt shift  166
               vdefAssign_stmt shift  165
                     cdef_stmt shift  164
                   assign_stmt shift  163
              assignMulti_stmt shift  162
                          stmt shift  176
                    blockStart shift  1
                         block shift  153
                      if_start shift  108
                     if_header shift  7
                      if_block shift  28
                       if_stmt shift  159
                   while_start shift  105
                  while_header shift  5
                    while_stmt shift  158
                foreach_header shift  4
                  foreach_stmt shift  157
                 continue_stmt shift  156
                    break_stmt shift  155
                   return_stmt shift  154
                        action shift  57
                       actions shift  56
                    actionStmt shift  160

State 5:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= * blockStart error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  53
                     SEMICOLON shift  167
                         CONST shift  54
                      LBRACKET shift  190
                            IF shift  186
                         WHILE shift  180
                           FOR shift  104
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  21
                    ACTIONNAME shift  100
                         error shift  98
                 nameListMulti shift  89
                      funcexpr shift  97
                     vdef_stmt shift  166
               vdefAssign_stmt shift  165
                     cdef_stmt shift  164
                   assign_stmt shift  163
              assignMulti_stmt shift  162
                          stmt shift  178
                    blockStart shift  1
                         block shift  153
                      if_start shift  108
                     if_header shift  7
                      if_block shift  28
                       if_stmt shift  159
                   while_start shift  105
                  while_header shift  5
                    while_stmt shift  158
                foreach_header shift  4
                  foreach_stmt shift  157
                 continue_stmt shift  156
                    break_stmt shift  155
                   return_stmt shift  154
                        action shift  57
                       actions shift  56
                    actionStmt shift  160

State 6:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= * blockStart error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  53
                     SEMICOLON shift  167
                         CONST shift  54
                      LBRACKET shift  190
                            IF shift  186
                         WHILE shift  180
                           FOR shift  104
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  21
                    ACTIONNAME shift  100
                         error shift  98
                 nameListMulti shift  89
                      funcexpr shift  97
                     vdef_stmt shift  166
               vdefAssign_stmt shift  165
                     cdef_stmt shift  164
                   assign_stmt shift  163
              assignMulti_stmt shift  162
                          stmt shift  181
                    blockStart shift  1
                         block shift  153
                      if_start shift  108
                     if_header shift  7
                      if_block shift  28
                       if_stmt shift  159
                   while_start shift  105
                  while_header shift  5
                    while_stmt shift  158
                foreach_header shift  4
                  foreach_stmt shift  157
                 continue_stmt shift  156
                    break_stmt shift  155
                   return_stmt shift  154
                        action shift  57
                       actions shift  56
                    actionStmt shift  160

State 7:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= * blockStart error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  53
                     SEMICOLON shift  167
                         CONST shift  54
                      LBRACKET shift  190
                            IF shift  186
                         WHILE shift  180
                           FOR shift  104
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  21
                    ACTIONNAME shift  100
                         error shift  98
                 nameListMulti shift  89
                      funcexpr shift  97
                     vdef_stmt shift  166
               vdefAssign_stmt shift  165
                     cdef_stmt shift  164
                   assign_stmt shift  163
              assignMulti_stmt shift  162
                          stmt shift  184
                    blockStart shift  1
                         block shift  153
                      if_start shift  108
                     if_header shift  7
                      if_block shift  28
                       if_stmt shift  159
                   while_start shift  105
                  while_header shift  5
                    while_stmt shift  158
                foreach_header shift  4
                  foreach_stmt shift  157
                 continue_stmt shift  156
                    break_stmt shift  155
                   return_stmt shift  154
                        action shift  57
                       actions shift  56
                    actionStmt shift  160

State 8:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR nameList SEMICOLON
          vdefAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          blockStart ::= * LBRACKET
          block ::= * blockStart stmtList RBRACKET
          block ::= * blockStart error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          fdef_chunk ::= function_header * stmt
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * cdef_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  53
                     SEMICOLON shift  167
                         CONST shift  54
                      LBRACKET shift  190
                            IF shift  186
                         WHILE shift  180
                           FOR shift  104
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  21
                    ACTIONNAME shift  100
                         error shift  98
                 nameListMulti shift  89
                      funcexpr shift  97
                     vdef_stmt shift  166
               vdefAssign_stmt shift  165
                     cdef_stmt shift  164
                   assign_stmt shift  163
              assignMulti_stmt shift  162
                          stmt shift  150
                    blockStart shift  1
                         block shift  153
                      if_start shift  108
                     if_header shift  7
                      if_block shift  28
                       if_stmt shift  159
                   while_start shift  105
                  while_header shift  5
                    while_stmt shift  158
                foreach_header shift  4
                  foreach_stmt shift  157
                 continue_stmt shift  156
                    break_stmt shift  155
                   return_stmt shift  154
                        action shift  57
                       actions shift  56
                    actionStmt shift  160

State 9:
      (0) program ::= chunks *
          vdef_stmt ::= * VAR nameList SEMICOLON
          cdef_stmt ::= * CONST nameList ASSIGN exprList SEMICOLON
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          import_chunk ::= * FROM NAME IMPORT nameList
          chunk ::= * import_chunk
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * cdef_stmt
          chunks ::= chunks * chunk

                             $ reduce 0
                           VAR shift  55
                         CONST shift  54
                      FUNCTION shift  111
                          FROM shift  96
                     vdef_stmt shift  146
                     cdef_stmt shift  145
                function_start shift  110
               function_header shift  8
                    fdef_chunk shift  147
                  import_chunk shift  148
                         chunk shift  144

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  15
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                 CONDITIONNAME shift  112
                      funcexpr shift  131
                          expr shift  59
                         lexpr shift  75

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  15
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                 CONDITIONNAME shift  112
                      funcexpr shift  131
                          expr shift  59
                         lexpr shift  76

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  15
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                 CONDITIONNAME shift  112
                      funcexpr shift  131
                          expr shift  59
                         lexpr shift  77

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        STRING shift  205
                        LPAREN shift  47
                        RPAREN shift  202
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  68
                         fArgs shift  92

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  14
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                 CONDITIONNAME shift  112
                      funcexpr shift  131
                          expr shift  59
                         lexpr shift  206

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  14
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                 CONDITIONNAME shift  112
                      funcexpr shift  131
                          expr shift  59
                         lexpr shift  207

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  15
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                 CONDITIONNAME shift  112
                      funcexpr shift  131
                          expr shift  59
                         lexpr shift  113

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  15
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                 CONDITIONNAME shift  112
                      funcexpr shift  131
                          expr shift  59
                         lexpr shift  208

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= L2V LPAREN * lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  15
                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                 CONDITIONNAME shift  112
                      funcexpr shift  131
                          expr shift  59
                         lexpr shift  81

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= NAME LPAREN * fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          funcexpr ::= NAME LPAREN * RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        STRING shift  205
                        LPAREN shift  47
                        RPAREN shift  199
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  68
                         fArgs shift  91

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        STRING shift  205
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  68
                         fArgs shift  83

State 21:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * SEMICOLON
          return_stmt ::= RETURN * exprList SEMICOLON

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                     SEMICOLON shift  172
                      exprList shift  84
                      funcexpr shift  137
                          expr shift  69

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          fArgs ::= fArgs COMMA * fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        STRING shift  205
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  68
                         fArgs shift  204

State 23:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= FOR LPAREN nameList COLON * exprList RPAREN

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      exprList shift  85
                      funcexpr shift  137
                          expr shift  69

State 24:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      exprList shift  86
                      funcexpr shift  137
                          expr shift  69

State 25:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assignMulti_stmt ::= nameListMulti ASSIGN * exprList SEMICOLON

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      exprList shift  88
                      funcexpr shift  137
                          expr shift  69

State 26:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          exprList ::= exprList COMMA * exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      exprList shift  198
                      funcexpr shift  137
                          expr shift  69

State 27:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      exprList shift  90
                      funcexpr shift  137
                          expr shift  69

State 28:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
     (65) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  107
                          ELSE reduce 65  ** Parsing conflict **
                    elif_start shift  106
                   elif_header shift  6
                   else_header shift  3
                     {default} reduce 65

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= NAME ASSIGN * expr SEMICOLON

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  60

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  62

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  63

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  64

State 33:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  65

State 34:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  66

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  67

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  209

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  210

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  211

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  71

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  70

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  72

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  73

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  74

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  212

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  213

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  201

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  61

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  80

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  38
                         MINUS shift  37
                        BITNOT shift  36
                        NUMBER shift  220
                          NAME shift  127
                        LPAREN shift  47
                           L2V shift  126
                     MAPSTRING shift  125
                          UNIT shift  122
                        SWITCH shift  119
                      LOCATION shift  116
                      funcexpr shift  131
                          expr shift  79

State 50:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          function_header ::= function_start LPAREN * nameList RPAREN
          function_header ::= function_start LPAREN * RPAREN

                          NAME shift  143
                        RPAREN shift  194
                 nameListMulti shift  141
                      nameList shift  109

State 51:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          import_chunk ::= FROM NAME IMPORT * nameList

                          NAME shift  143
                 nameListMulti shift  141
                      nameList shift  149

State 52:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          foreach_header ::= FOR LPAREN * nameList COLON exprList RPAREN

                          NAME shift  143
                 nameListMulti shift  141
                      nameList shift  103

State 53:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          vdef_stmt ::= VAR * nameList SEMICOLON
          vdefAssign_stmt ::= VAR * nameList ASSIGN exprList SEMICOLON

                          NAME shift  143
                 nameListMulti shift  141
                      nameList shift  87

State 54:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          cdef_stmt ::= CONST * nameList ASSIGN exprList SEMICOLON

                          NAME shift  143
                 nameListMulti shift  141
                      nameList shift  138

State 55:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          vdef_stmt ::= VAR * nameList SEMICOLON

                          NAME shift  143
                 nameListMulti shift  141
                      nameList shift  139

State 56:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
     (86) actionStmt ::= actions *

                    ACTIONNAME shift  100
                    ACTIONNAME reduce 86  ** Parsing conflict **
                        action shift  169
                     {default} reduce 86

State 57:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
     (85) actionStmt ::= action *

                    ACTIONNAME shift  100
                    ACTIONNAME reduce 85  ** Parsing conflict **
                        action shift  170
                     {default} reduce 85

State 58:
          numList ::= * NUMBER COMMA NUMBER
          numList ::= * numList COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET * numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  94
                       numList shift  93

State 59:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  35
                            LE shift  33
                            LT shift  32
                            GE shift  31
                            GT shift  30
                            NE shift  34
                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44

State 60:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          assign_stmt ::= NAME ASSIGN expr * SEMICOLON

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     SEMICOLON shift  193

State 61:
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                        RPAREN shift  219

State 62:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (43) lexpr ::= expr GT expr *

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 43

State 63:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (42) lexpr ::= expr GE expr *

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 42

State 64:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (41) lexpr ::= expr LT expr *

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 41

State 65:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (40) lexpr ::= expr LE expr *

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 40

State 66:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (39) lexpr ::= expr NE expr *

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 39

State 67:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (38) lexpr ::= expr EQ expr *

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 38

State 68:
     (13) fArgs ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 13

State 69:
      (9) exprList ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  40
                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 9

State 70:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (33) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  39
                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 33

State 71:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (34) expr ::= expr BITXOR expr *

                        BITAND shift  41
                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 34

State 72:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (32) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  43
                        RSHIFT shift  42
                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 32

State 73:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (31) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 31

State 74:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (30) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  49
                         MINUS shift  48
                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 30

State 75:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  16
                          LAND shift  17
                        RPAREN shift  179

State 76:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  16
                          LAND shift  17
                        RPAREN shift  182

State 77:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  16
                          LAND shift  17
                        RPAREN shift  185

State 78:
          nameListMulti ::= NAME * COMMA NAME
          funcexpr ::= NAME * LPAREN fArgs RPAREN
          funcexpr ::= NAME * LPAREN RPAREN
          assign_stmt ::= NAME * ASSIGN expr SEMICOLON

                         COMMA shift  142
                        ASSIGN shift  29
                        LPAREN shift  19

State 79:
          expr ::= expr * PLUS expr
     (25) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 25

State 80:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (26) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  45
                      MULTIPLY shift  46
                           MOD shift  44
                     {default} reduce 26

State 81:
          expr ::= L2V LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  16
                          LAND shift  17
                        RPAREN shift  218

State 82:
          block ::= blockStart error * RBRACKET
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  168
                      RBRACKET shift  151

State 83:
          fArgs ::= fArgs * COMMA fArgs
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                         COMMA shift  22
                        RPAREN shift  99

State 84:
          exprList ::= exprList * COMMA exprList
          return_stmt ::= RETURN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  173

State 85:
          exprList ::= exprList * COMMA exprList
          foreach_header ::= FOR LPAREN nameList COLON exprList * RPAREN

                         COMMA shift  26
                        RPAREN shift  177

State 86:
          exprList ::= exprList * COMMA exprList
          vdefAssign_stmt ::= VAR nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  191

State 87:
          vdef_stmt ::= VAR nameList * SEMICOLON
          vdefAssign_stmt ::= VAR nameList * ASSIGN exprList SEMICOLON

                        ASSIGN shift  24
                     SEMICOLON shift  225

State 88:
          exprList ::= exprList * COMMA exprList
          assignMulti_stmt ::= nameListMulti ASSIGN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  192

State 89:
          nameListMulti ::= nameListMulti * COMMA NAME
          assignMulti_stmt ::= nameListMulti * ASSIGN exprList SEMICOLON

                         COMMA shift  140
                        ASSIGN shift  25

State 90:
          exprList ::= exprList * COMMA exprList
          cdef_stmt ::= CONST nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  197

State 91:
          fArgs ::= fArgs * COMMA fArgs
          funcexpr ::= NAME LPAREN fArgs * RPAREN

                         COMMA shift  22
                        RPAREN shift  200

State 92:
          fArgs ::= fArgs * COMMA fArgs
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                         COMMA shift  22
                        RPAREN shift  203

State 93:
          numList ::= numList * COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList * RSQBRACKET RSQBRACKET

                         COMMA shift  133
                    RSQBRACKET shift  132

State 94:
          numList ::= NUMBER * COMMA NUMBER
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                         COMMA shift  135
                    RSQBRACKET shift  134

State 95:
          import_chunk ::= FROM NAME * IMPORT nameList

                        IMPORT shift  51

State 96:
          import_chunk ::= FROM * NAME IMPORT nameList

                          NAME shift  95

State 97:
          stmt ::= funcexpr * SEMICOLON

                     SEMICOLON shift  161

State 98:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  168

State 99:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  171

State 100:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  20

State 101:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  174

State 102:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  175

State 103:
          foreach_header ::= FOR LPAREN nameList * COLON exprList RPAREN

                         COLON shift  23

State 104:
          foreach_header ::= FOR * LPAREN nameList COLON exprList RPAREN

                        LPAREN shift  52

State 105:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  10

State 106:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  11

State 107:
          elif_start ::= ELSE * IF
     (64) else_header ::= ELSE *

                            IF shift  183
                            IF reduce 64  ** Parsing conflict **
                     {default} reduce 64

State 108:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  12

State 109:
          function_header ::= function_start LPAREN nameList * RPAREN

                        RPAREN shift  195

State 110:
          function_header ::= function_start * LPAREN nameList RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  50

State 111:
          function_start ::= FUNCTION * NAME

                          NAME shift  196

State 112:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  13

State 113:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (45) lexpr ::= lexpr LOR lexpr *

                          LAND shift  17
                     {default} reduce 45

State 114:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  214

State 115:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  114

State 116:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  115

State 117:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  215

State 118:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  117

State 119:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  118

State 120:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  216

State 121:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  120

State 122:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  121

State 123:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  217

State 124:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  123

State 125:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  124

State 126:
          expr ::= L2V * LPAREN lexpr RPAREN

                        LPAREN shift  18

State 127:
     (12) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
          funcexpr ::= NAME * LPAREN RPAREN

                        LPAREN shift  19
                     {default} reduce 12

State 128:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  134

State 129:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  128

State 130:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  129

State 131:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (18) expr ::= funcexpr *

                    LSQBRACKET shift  130
                     {default} reduce 18

State 132:
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  221

State 133:
          numList ::= numList COMMA * NUMBER

                        NUMBER shift  222

State 134:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  223

State 135:
          numList ::= NUMBER COMMA * NUMBER

                        NUMBER shift  224

State 136:
          exprList ::= funcexpr LSQBRACKET * LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  58

State 137:
          exprList ::= funcexpr * LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (18) expr ::= funcexpr *

                    LSQBRACKET shift  136
                     {default} reduce 18

State 138:
          cdef_stmt ::= CONST nameList * ASSIGN exprList SEMICOLON

                        ASSIGN shift  27

State 139:
          vdef_stmt ::= VAR nameList * SEMICOLON

                     SEMICOLON shift  225

State 140:
          nameListMulti ::= nameListMulti COMMA * NAME

                          NAME shift  226

State 141:
          nameListMulti ::= nameListMulti * COMMA NAME
      (6) nameList ::= nameListMulti *

                         COMMA shift  140
                     {default} reduce 6

State 142:
          nameListMulti ::= NAME COMMA * NAME

                          NAME shift  227

State 143:
          nameListMulti ::= NAME * COMMA NAME
      (5) nameList ::= NAME *

                         COMMA shift  142
                     {default} reduce 5

State 144:
    (109) chunks ::= chunks chunk *

                     {default} reduce 109

State 145:
    (107) chunk ::= cdef_stmt *

                     {default} reduce 107

State 146:
    (106) chunk ::= vdef_stmt *

                     {default} reduce 106

State 147:
    (105) chunk ::= fdef_chunk *

                     {default} reduce 105

State 148:
    (104) chunk ::= import_chunk *

                     {default} reduce 104

State 149:
    (103) import_chunk ::= FROM NAME IMPORT nameList *

                     {default} reduce 103

State 150:
     (77) fdef_chunk ::= function_header stmt *

                     {default} reduce 77

State 151:
     (57) block ::= blockStart error RBRACKET *

                     {default} reduce 57

State 152:
     (66) if_stmt ::= if_block else_header stmt *

                     {default} reduce 66

State 153:
    (102) stmt ::= block *

                     {default} reduce 102

State 154:
    (101) stmt ::= return_stmt *

                     {default} reduce 101

State 155:
    (100) stmt ::= break_stmt *

                     {default} reduce 100

State 156:
     (99) stmt ::= continue_stmt *

                     {default} reduce 99

State 157:
     (98) stmt ::= foreach_stmt *

                     {default} reduce 98

State 158:
     (97) stmt ::= while_stmt *

                     {default} reduce 97

State 159:
     (96) stmt ::= if_stmt *

                     {default} reduce 96

State 160:
     (95) stmt ::= actionStmt *

                     {default} reduce 95

State 161:
     (94) stmt ::= funcexpr SEMICOLON *

                     {default} reduce 94

State 162:
     (93) stmt ::= assignMulti_stmt *

                     {default} reduce 93

State 163:
     (92) stmt ::= assign_stmt *

                     {default} reduce 92

State 164:
     (91) stmt ::= cdef_stmt *

                     {default} reduce 91

State 165:
     (90) stmt ::= vdefAssign_stmt *

                     {default} reduce 90

State 166:
     (89) stmt ::= vdef_stmt *

                     {default} reduce 89

State 167:
     (88) stmt ::= SEMICOLON *

                     {default} reduce 88

State 168:
     (87) stmt ::= error SEMICOLON *

                     {default} reduce 87

State 169:
     (84) actions ::= actions action *

                     {default} reduce 84

State 170:
     (83) actions ::= action action *

                     {default} reduce 83

State 171:
     (82) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 82

State 172:
     (78) return_stmt ::= RETURN SEMICOLON *

                     {default} reduce 78

State 173:
     (79) return_stmt ::= RETURN exprList SEMICOLON *

                     {default} reduce 79

State 174:
     (73) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 73

State 175:
     (72) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 72

State 176:
     (71) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 71

State 177:
     (70) foreach_header ::= FOR LPAREN nameList COLON exprList RPAREN *

                     {default} reduce 70

State 178:
     (69) while_stmt ::= while_header stmt *

                     {default} reduce 69

State 179:
     (68) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 68

State 180:
     (67) while_start ::= WHILE *

                     {default} reduce 67

State 181:
     (63) if_block ::= if_block elif_header stmt *

                     {default} reduce 63

State 182:
     (62) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 62

State 183:
     (61) elif_start ::= ELSE IF *

                     {default} reduce 61

State 184:
     (60) if_block ::= if_header stmt *

                     {default} reduce 60

State 185:
     (59) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 59

State 186:
     (58) if_start ::= IF *

                     {default} reduce 58

State 187:
     (56) block ::= blockStart stmtList RBRACKET *

                     {default} reduce 56

State 188:
     (54) stmtList ::= stmtList stmt *

                     {default} reduce 54

State 189:
     (53) stmtList ::= stmt *

                     {default} reduce 53

State 190:
     (55) blockStart ::= LBRACKET *

                     {default} reduce 55

State 191:
     (49) vdefAssign_stmt ::= VAR nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 49

State 192:
     (52) assignMulti_stmt ::= nameListMulti ASSIGN exprList SEMICOLON *

                     {default} reduce 52

State 193:
     (51) assign_stmt ::= NAME ASSIGN expr SEMICOLON *

                     {default} reduce 51

State 194:
     (76) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 76

State 195:
     (75) function_header ::= function_start LPAREN nameList RPAREN *

                     {default} reduce 75

State 196:
     (74) function_start ::= FUNCTION NAME *

                     {default} reduce 74

State 197:
     (50) cdef_stmt ::= CONST nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 50

State 198:
          exprList ::= exprList * COMMA exprList
     (10) exprList ::= exprList COMMA exprList *

                     {default} reduce 10

State 199:
     (17) funcexpr ::= NAME LPAREN RPAREN *

                     {default} reduce 17

State 200:
     (16) funcexpr ::= NAME LPAREN fArgs RPAREN *

                     {default} reduce 16

State 201:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (27) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 27

State 202:
     (81) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 81

State 203:
     (80) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 80

State 204:
          fArgs ::= fArgs * COMMA fArgs
     (15) fArgs ::= fArgs COMMA fArgs *

                     {default} reduce 15

State 205:
     (14) fArgs ::= STRING *

                     {default} reduce 14

State 206:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (46) lexpr ::= LNOT lexpr *
     (47) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 47

State 207:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (46) lexpr ::= LNOT lexpr *

                     {default} reduce 46

State 208:
          lexpr ::= lexpr * LAND lexpr
     (44) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 44

State 209:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (37) expr ::= BITNOT expr *

                     {default} reduce 37

State 210:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (36) expr ::= MINUS expr *

                     {default} reduce 36

State 211:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (35) expr ::= PLUS expr *

                     {default} reduce 35

State 212:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (29) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 29

State 213:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (28) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 28

State 214:
     (24) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 24

State 215:
     (23) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 23

State 216:
     (22) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 22

State 217:
     (21) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 21

State 218:
     (20) expr ::= L2V LPAREN lexpr RPAREN *

                     {default} reduce 20

State 219:
     (19) expr ::= LPAREN expr RPAREN *

                     {default} reduce 19

State 220:
     (11) expr ::= NUMBER *

                     {default} reduce 11

State 221:
      (7) exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET *

                     {default} reduce 7

State 222:
      (2) numList ::= numList COMMA NUMBER *

                     {default} reduce 2

State 223:
      (8) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 8

State 224:
      (1) numList ::= NUMBER COMMA NUMBER *

                     {default} reduce 1

State 225:
     (48) vdef_stmt ::= VAR nameList SEMICOLON *

                     {default} reduce 48

State 226:
      (4) nameListMulti ::= nameListMulti COMMA NAME *

                     {default} reduce 4

State 227:
      (3) nameListMulti ::= NAME COMMA NAME *

                     {default} reduce 3

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: LSQBRACKET
   28: RSQBRACKET
   29: STRING
   30: LPAREN
   31: RPAREN
   32: FUNCCALL
   33: L2V
   34: MAPSTRING
   35: UNIT
   36: SWITCH
   37: LOCATION
   38: VAR
   39: SEMICOLON
   40: CONST
   41: LBRACKET
   42: RBRACKET
   43: IF
   44: ELSE
   45: WHILE
   46: FOR
   47: COLON
   48: CONTINUE
   49: BREAK
   50: FUNCTION
   51: RETURN
   52: CONDITIONNAME
   53: ACTIONNAME
   54: FROM
   55: IMPORT
   56: error:
   57: nt:
   58: program: <lambda> VAR CONST FUNCTION FROM
   59: chunks: <lambda> VAR CONST FUNCTION FROM
   60: numList: NUMBER
   61: nameListMulti: NAME
   62: nameList: NAME
   63: exprList: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   64: funcexpr: NAME
   65: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   66: fArgs: PLUS MINUS BITNOT NUMBER NAME STRING LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   67: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
   68: vdef_stmt: VAR
   69: vdefAssign_stmt: VAR
   70: cdef_stmt: CONST
   71: assign_stmt: NAME
   72: assignMulti_stmt: NAME
   73: stmtList: NAME VAR SEMICOLON CONST LBRACKET IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   74: stmt: NAME VAR SEMICOLON CONST LBRACKET IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   75: blockStart: LBRACKET
   76: block: LBRACKET
   77: if_start: IF
   78: if_header: IF
   79: if_block: IF
   80: elif_start: ELSE
   81: elif_header: ELSE
   82: else_header: ELSE
   83: if_stmt: IF
   84: while_start: WHILE
   85: while_header: WHILE
   86: while_stmt: WHILE
   87: foreach_header: FOR
   88: foreach_stmt: FOR
   89: continue_stmt: CONTINUE
   90: break_stmt: BREAK
   91: function_start: FUNCTION
   92: function_header: FUNCTION
   93: fdef_chunk: FUNCTION
   94: return_stmt: RETURN
   95: action: ACTIONNAME
   96: actions: ACTIONNAME
   97: actionStmt: ACTIONNAME
   98: import_chunk: FROM
   99: chunk: VAR CONST FUNCTION FROM
