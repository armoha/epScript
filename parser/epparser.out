State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk

                             $ reduce 1
                        IMPORT reduce 1
                      FUNCTION reduce 1
                        OBJECT reduce 1
                      LBRACKET reduce 1
                           VAR reduce 1
                         CONST reduce 1
                       program accept
                        chunks shift  11

State 1:
          lbracket ::= * LBRACKET
          rbracket ::= * RBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= lbracket bodyStmtList * rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket bodyStmtList * return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                     SEMICOLON shift  123
                          NAME shift  96
                      LBRACKET shift  137
                           VAR shift  89
                      RBRACKET shift  128
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                         CONST shift  88
                           INC shift  38
                           DEC shift  37
                            IF shift  294
                         WHILE shift  290
                           FOR shift  288
                       FOREACH shift  285
                      CONTINUE shift  283
                         BREAK shift  282
                        RETURN shift  21
                 CONDITIONNAME shift  301
                    ACTIONNAME shift  280
                         error shift  135
                     vdef_stmt shift  328
                     blockStmt shift  124
                      bodyStmt shift  136
                   return_stmt shift  329
                      lbracket shift  2
                      rbracket shift  126
               vdefAssign_stmt shift  327
                     cdef_stmt shift  326
                   assign_stmt shift  325
                      funcexpr shift  198
                    actionStmt shift  117
                       if_stmt shift  116
                    while_stmt shift  115
                      for_stmt shift  114
                  foreach_stmt shift  113
                 continue_stmt shift  320
                    break_stmt shift  319
                          expr shift  199
                        lvalue shift  215
           lvalueList_nonEmpty shift  261
                      if_start shift  293
                     if_header shift  9
                      if_block shift  22
                   while_start shift  289
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  33
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5

State 2:
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= lbracket * RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket * return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= lbracket * bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket * bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmt ::= lbracket * error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= * error
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                     SEMICOLON shift  123
                          NAME shift  96
                      LBRACKET shift  137
                           VAR shift  89
                      RBRACKET shift  129
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                         CONST shift  88
                           INC shift  38
                           DEC shift  37
                            IF shift  294
                         WHILE shift  290
                           FOR shift  288
                       FOREACH shift  285
                      CONTINUE shift  283
                         BREAK shift  282
                        RETURN shift  21
                 CONDITIONNAME shift  301
                    ACTIONNAME shift  280
                         error shift  134
                     vdef_stmt shift  328
                     blockStmt shift  124
                      bodyStmt shift  133
                   return_stmt shift  330
                      lbracket shift  2
                  bodyStmtList shift  1
               vdefAssign_stmt shift  327
                     cdef_stmt shift  326
                   assign_stmt shift  325
                      funcexpr shift  198
                    actionStmt shift  117
                       if_stmt shift  116
                    while_stmt shift  115
                      for_stmt shift  114
                  foreach_stmt shift  113
                 continue_stmt shift  320
                    break_stmt shift  319
                          expr shift  199
                        lvalue shift  215
           lvalueList_nonEmpty shift  261
                      if_start shift  293
                     if_header shift  9
                      if_block shift  22
                   while_start shift  289
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  33
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5

State 3:
          method_chunk ::= method_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                     SEMICOLON shift  123
                          NAME shift  96
                      LBRACKET shift  137
                           VAR shift  89
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                         CONST shift  88
                           INC shift  38
                           DEC shift  37
                            IF shift  294
                         WHILE shift  290
                           FOR shift  288
                       FOREACH shift  285
                      CONTINUE shift  283
                         BREAK shift  282
                        RETURN shift  21
                 CONDITIONNAME shift  301
                    ACTIONNAME shift  280
                         error shift  332
                     vdef_stmt shift  328
                     blockStmt shift  124
                          stmt shift  233
                      bodyStmt shift  131
                   return_stmt shift  331
                      lbracket shift  2
               vdefAssign_stmt shift  327
                     cdef_stmt shift  326
                   assign_stmt shift  325
                      funcexpr shift  198
                    actionStmt shift  117
                       if_stmt shift  116
                    while_stmt shift  115
                      for_stmt shift  114
                  foreach_stmt shift  113
                 continue_stmt shift  320
                    break_stmt shift  319
                          expr shift  199
                        lvalue shift  215
           lvalueList_nonEmpty shift  261
                      if_start shift  293
                     if_header shift  9
                      if_block shift  22
                   while_start shift  289
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  33
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                     SEMICOLON shift  123
                          NAME shift  96
                      LBRACKET shift  137
                           VAR shift  89
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                         CONST shift  88
                           INC shift  38
                           DEC shift  37
                            IF shift  294
                         WHILE shift  290
                           FOR shift  288
                       FOREACH shift  285
                      CONTINUE shift  283
                         BREAK shift  282
                        RETURN shift  21
                 CONDITIONNAME shift  301
                    ACTIONNAME shift  280
                         error shift  332
                     vdef_stmt shift  328
                     blockStmt shift  124
                          stmt shift  98
                      bodyStmt shift  131
                   return_stmt shift  331
                      lbracket shift  2
               vdefAssign_stmt shift  327
                     cdef_stmt shift  326
                   assign_stmt shift  325
                      funcexpr shift  198
                    actionStmt shift  117
                       if_stmt shift  116
                    while_stmt shift  115
                      for_stmt shift  114
                  foreach_stmt shift  113
                 continue_stmt shift  320
                    break_stmt shift  319
                          expr shift  199
                        lvalue shift  215
           lvalueList_nonEmpty shift  261
                      if_start shift  293
                     if_header shift  9
                      if_block shift  22
                   while_start shift  289
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  33
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                     SEMICOLON shift  123
                          NAME shift  96
                      LBRACKET shift  137
                           VAR shift  89
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                         CONST shift  88
                           INC shift  38
                           DEC shift  37
                            IF shift  294
                         WHILE shift  290
                           FOR shift  288
                       FOREACH shift  285
                      CONTINUE shift  283
                         BREAK shift  282
                        RETURN shift  21
                 CONDITIONNAME shift  301
                    ACTIONNAME shift  280
                         error shift  332
                     vdef_stmt shift  328
                     blockStmt shift  124
                          stmt shift  100
                      bodyStmt shift  131
                   return_stmt shift  331
                      lbracket shift  2
               vdefAssign_stmt shift  327
                     cdef_stmt shift  326
                   assign_stmt shift  325
                      funcexpr shift  198
                    actionStmt shift  117
                       if_stmt shift  116
                    while_stmt shift  115
                      for_stmt shift  114
                  foreach_stmt shift  113
                 continue_stmt shift  320
                    break_stmt shift  319
                          expr shift  199
                        lvalue shift  215
           lvalueList_nonEmpty shift  261
                      if_start shift  293
                     if_header shift  9
                      if_block shift  22
                   while_start shift  289
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  33
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5

State 6:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          for_stmt ::= for_header * stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                     SEMICOLON shift  123
                          NAME shift  96
                      LBRACKET shift  137
                           VAR shift  89
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                         CONST shift  88
                           INC shift  38
                           DEC shift  37
                            IF shift  294
                         WHILE shift  290
                           FOR shift  288
                       FOREACH shift  285
                      CONTINUE shift  283
                         BREAK shift  282
                        RETURN shift  21
                 CONDITIONNAME shift  301
                    ACTIONNAME shift  280
                         error shift  332
                     vdef_stmt shift  328
                     blockStmt shift  124
                          stmt shift  101
                      bodyStmt shift  131
                   return_stmt shift  331
                      lbracket shift  2
               vdefAssign_stmt shift  327
                     cdef_stmt shift  326
                   assign_stmt shift  325
                      funcexpr shift  198
                    actionStmt shift  117
                       if_stmt shift  116
                    while_stmt shift  115
                      for_stmt shift  114
                  foreach_stmt shift  113
                 continue_stmt shift  320
                    break_stmt shift  319
                          expr shift  199
                        lvalue shift  215
           lvalueList_nonEmpty shift  261
                      if_start shift  293
                     if_header shift  9
                      if_block shift  22
                   while_start shift  289
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  33
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5

State 7:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                     SEMICOLON shift  123
                          NAME shift  96
                      LBRACKET shift  137
                           VAR shift  89
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                         CONST shift  88
                           INC shift  38
                           DEC shift  37
                            IF shift  294
                         WHILE shift  290
                           FOR shift  288
                       FOREACH shift  285
                      CONTINUE shift  283
                         BREAK shift  282
                        RETURN shift  21
                 CONDITIONNAME shift  301
                    ACTIONNAME shift  280
                         error shift  332
                     vdef_stmt shift  328
                     blockStmt shift  124
                          stmt shift  102
                      bodyStmt shift  131
                   return_stmt shift  331
                      lbracket shift  2
               vdefAssign_stmt shift  327
                     cdef_stmt shift  326
                   assign_stmt shift  325
                      funcexpr shift  198
                    actionStmt shift  117
                       if_stmt shift  116
                    while_stmt shift  115
                      for_stmt shift  114
                  foreach_stmt shift  113
                 continue_stmt shift  320
                    break_stmt shift  319
                          expr shift  199
                        lvalue shift  215
           lvalueList_nonEmpty shift  261
                      if_start shift  293
                     if_header shift  9
                      if_block shift  22
                   while_start shift  289
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  33
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5

State 8:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                     SEMICOLON shift  123
                          NAME shift  96
                      LBRACKET shift  137
                           VAR shift  89
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                         CONST shift  88
                           INC shift  38
                           DEC shift  37
                            IF shift  294
                         WHILE shift  290
                           FOR shift  288
                       FOREACH shift  285
                      CONTINUE shift  283
                         BREAK shift  282
                        RETURN shift  21
                 CONDITIONNAME shift  301
                    ACTIONNAME shift  280
                         error shift  332
                     vdef_stmt shift  328
                     blockStmt shift  124
                          stmt shift  103
                      bodyStmt shift  131
                   return_stmt shift  331
                      lbracket shift  2
               vdefAssign_stmt shift  327
                     cdef_stmt shift  326
                   assign_stmt shift  325
                      funcexpr shift  198
                    actionStmt shift  117
                       if_stmt shift  116
                    while_stmt shift  115
                      for_stmt shift  114
                  foreach_stmt shift  113
                 continue_stmt shift  320
                    break_stmt shift  319
                          expr shift  199
                        lvalue shift  215
           lvalueList_nonEmpty shift  261
                      if_start shift  293
                     if_header shift  9
                      if_block shift  22
                   while_start shift  289
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  33
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5

State 9:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                     SEMICOLON shift  123
                          NAME shift  96
                      LBRACKET shift  137
                           VAR shift  89
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                         CONST shift  88
                           INC shift  38
                           DEC shift  37
                            IF shift  294
                         WHILE shift  290
                           FOR shift  288
                       FOREACH shift  285
                      CONTINUE shift  283
                         BREAK shift  282
                        RETURN shift  21
                 CONDITIONNAME shift  301
                    ACTIONNAME shift  280
                         error shift  332
                     vdef_stmt shift  328
                     blockStmt shift  124
                          stmt shift  104
                      bodyStmt shift  131
                   return_stmt shift  331
                      lbracket shift  2
               vdefAssign_stmt shift  327
                     cdef_stmt shift  326
                   assign_stmt shift  325
                      funcexpr shift  198
                    actionStmt shift  117
                       if_stmt shift  116
                    while_stmt shift  115
                      for_stmt shift  114
                  foreach_stmt shift  113
                 continue_stmt shift  320
                    break_stmt shift  319
                          expr shift  199
                        lvalue shift  215
           lvalueList_nonEmpty shift  261
                      if_start shift  293
                     if_header shift  9
                      if_block shift  22
                   while_start shift  289
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  33
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5

State 10:
          fdef_chunk ::= fdef_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                     SEMICOLON shift  123
                          NAME shift  96
                      LBRACKET shift  137
                           VAR shift  89
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                         CONST shift  88
                           INC shift  38
                           DEC shift  37
                            IF shift  294
                         WHILE shift  290
                           FOR shift  288
                       FOREACH shift  285
                      CONTINUE shift  283
                         BREAK shift  282
                        RETURN shift  21
                 CONDITIONNAME shift  301
                    ACTIONNAME shift  280
                         error shift  332
                     vdef_stmt shift  328
                     blockStmt shift  124
                          stmt shift  217
                      bodyStmt shift  131
                   return_stmt shift  331
                      lbracket shift  2
               vdefAssign_stmt shift  327
                     cdef_stmt shift  326
                   assign_stmt shift  325
                      funcexpr shift  198
                    actionStmt shift  117
                       if_stmt shift  116
                    while_stmt shift  115
                      for_stmt shift  114
                  foreach_stmt shift  113
                 continue_stmt shift  320
                    break_stmt shift  319
                          expr shift  199
                        lvalue shift  215
           lvalueList_nonEmpty shift  261
                      if_start shift  293
                     if_header shift  9
                      if_block shift  22
                   while_start shift  289
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  33
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5

State 11:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunk ::= * import_chunk SEMICOLON
          chunk ::= * fdef_chunk
          chunk ::= * fdecl_chunk
          chunk ::= * object_chunk
          chunk ::= * vdef_stmt SEMICOLON
          chunk ::= * vdefAssign_global_stmt SEMICOLON
          chunk ::= * cdef_global_stmt SEMICOLON
          chunk ::= * blockStmt
          import_chunk ::= * IMPORT dottedName AS NAME
          import_chunk ::= * IMPORT dottedName
          fdef_header ::= * FUNCTION NAME LPAREN nameList RPAREN
          fdef_chunk ::= * fdef_header stmt
          fdecl_chunk ::= * FUNCTION NAME LPAREN nameList RPAREN SEMICOLON
          object_header ::= * OBJECT NAME LBRACKET
          object_body ::= * object_header
          object_body ::= * object_body VAR nameList_nonEmpty SEMICOLON
          object_body ::= * object_body method_chunk
          object_chunk ::= * object_body RBRACKET SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_global_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_global_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty

                             $ reduce 0
                        IMPORT shift  93
                      FUNCTION shift  336
                        OBJECT shift  277
                      LBRACKET shift  137
                           VAR shift  85
                         CONST shift  84
                         chunk shift  227
                  import_chunk shift  343
                    fdef_chunk shift  225
                   fdecl_chunk shift  224
                  object_chunk shift  223
                     vdef_stmt shift  342
        vdefAssign_global_stmt shift  341
              cdef_global_stmt shift  340
                     blockStmt shift  219
                   fdef_header shift  10
                 object_header shift  235
                   object_body shift  80
                      lbracket shift  2

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt ::= * for_init_stmt_nonEmpty
    (156) for_init_stmt ::= *
          for_header1 ::= for_opener * for_init_stmt SEMICOLON
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                     SEMICOLON reduce 156
                          NAME shift  96
                           VAR shift  89
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                         CONST shift  88
                           INC shift  38
                           DEC shift  37
                 CONDITIONNAME shift  301
                     vdef_stmt shift  259
               vdefAssign_stmt shift  258
                     cdef_stmt shift  257
                   assign_stmt shift  256
                      funcexpr shift  176
                          expr shift  199
                        lvalue shift  215
           lvalueList_nonEmpty shift  261
        for_init_stmt_nonEmpty shift  255
                 for_init_stmt shift  287

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA * for_init_stmt_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  96
                           VAR shift  89
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                         CONST shift  88
                           INC shift  38
                           DEC shift  37
                 CONDITIONNAME shift  301
                     vdef_stmt shift  259
               vdefAssign_stmt shift  258
                     cdef_stmt shift  257
                   assign_stmt shift  256
                      funcexpr shift  176
                          expr shift  199
                        lvalue shift  215
           lvalueList_nonEmpty shift  261
        for_init_stmt_nonEmpty shift  254

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
    (159) for_action_stmt ::= *
          for_action_stmt ::= * for_action_stmt_nonEmpty
          for_header ::= for_header2 * for_action_stmt RPAREN
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  96
                        RPAREN reduce 159
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                           INC shift  38
                           DEC shift  37
                 CONDITIONNAME shift  301
                   assign_stmt shift  253
                      funcexpr shift  176
                          expr shift  199
                        lvalue shift  215
           lvalueList_nonEmpty shift  261
      for_action_stmt_nonEmpty shift  252
               for_action_stmt shift  286

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA * for_action_stmt_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  96
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                           INC shift  38
                           DEC shift  37
                 CONDITIONNAME shift  301
                   assign_stmt shift  253
                      funcexpr shift  176
                          expr shift  199
                        lvalue shift  215
           lvalueList_nonEmpty shift  261
      for_action_stmt_nonEmpty shift  251

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (74) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  197
                        RPAREN reduce 74
                        NUMBER shift  178
                         KILLS shift  177
                        STRING shift  270
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  201
                fArgs_nonEmpty shift  269
                         fArgs shift  279

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (74) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  197
                        RPAREN reduce 74
                        NUMBER shift  178
                         KILLS shift  177
                        STRING shift  270
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  201
                fArgs_nonEmpty shift  269
                         fArgs shift  300

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (74) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          funcexpr ::= expr LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  197
                        RPAREN reduce 74
                        NUMBER shift  178
                         KILLS shift  177
                        STRING shift  270
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  201
                fArgs_nonEmpty shift  269
                         fArgs shift  298

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (74) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= NAME LPAREN * fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  197
                        RPAREN reduce 74
                        NUMBER shift  178
                         KILLS shift  177
                        STRING shift  270
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  201
                fArgs_nonEmpty shift  269
                         fArgs shift  297

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (74) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= KILLS LPAREN * fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  197
                        RPAREN reduce 74
                        NUMBER shift  178
                         KILLS shift  177
                        STRING shift  270
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  201
                fArgs_nonEmpty shift  269
                         fArgs shift  296

State 21:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
     (63) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          return_stmt ::= RETURN * exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                     SEMICOLON reduce 63
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  183
             exprList_nonEmpty shift  248
                          expr shift  182
                      exprList shift  281

State 22:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN expr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
    (144) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                             $ reduce 144
                          ELSE shift  143
                          ELSE reduce 144 -- dropped by precedence
                          LNOT reduce 144
                          PLUS reduce 144
                         MINUS reduce 144
                        BITNOT reduce 144
                        LPAREN reduce 144
                    LSQBRACKET reduce 144
                     SEMICOLON reduce 144
                          NAME reduce 144
                        IMPORT reduce 144
                      FUNCTION reduce 144
                        OBJECT reduce 144
                      LBRACKET reduce 144
                           VAR reduce 144
                      RBRACKET reduce 144
                        NUMBER reduce 144
                         KILLS reduce 144
                           L2V reduce 144
                     MAPSTRING reduce 144
                          UNIT reduce 144
                        SWITCH reduce 144
                      LOCATION reduce 144
                         CONST reduce 144
                           INC reduce 144
                           DEC reduce 144
                            IF reduce 144
                         WHILE reduce 144
                           FOR reduce 144
                       FOREACH reduce 144
                      CONTINUE reduce 144
                         BREAK reduce 144
                        RETURN reduce 144
                 CONDITIONNAME reduce 144
                    ACTIONNAME reduce 144
                    elif_start shift  291
                   elif_header shift  8
                   else_header shift  4

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  197
                        NUMBER shift  178
                         KILLS shift  177
                        STRING shift  270
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  201
                fArgs_nonEmpty shift  268

State 24:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  183
             exprList_nonEmpty shift  244
                          expr shift  182

State 25:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  183
             exprList_nonEmpty shift  246
                          expr shift  182

State 26:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          foreach_header ::= foreach_opener nameList_nonEmpty COLON * exprList_nonEmpty RPAREN
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  183
             exprList_nonEmpty shift  249
                          expr shift  182

State 27:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalueList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  183
             exprList_nonEmpty shift  237
                          expr shift  182

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA * lvalue
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  96
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  211
                        lvalue shift  260

State 29:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  183
             exprList_nonEmpty shift  262
                          expr shift  182

State 30:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  183
             exprList_nonEmpty shift  264
                          expr shift  182

State 31:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= LSQBRACKET * exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  183
             exprList_nonEmpty shift  83
                          expr shift  182

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
     (80) commaSkippable ::= COMMA *
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                    RSQBRACKET reduce 80
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  181

State 33:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          for_header2 ::= for_header1 * expr SEMICOLON
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  202

State 34:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          while_header ::= while_start LPAREN * expr RPAREN
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  203

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          elif_header ::= elif_start LPAREN * expr RPAREN
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  204

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          if_header ::= if_start LPAREN * expr RPAREN
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  205

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= DEC * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  184

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= INC * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  185

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBXR * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  186

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBOR * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  187

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBND * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  188

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IRSH * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  189

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ILSH * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  190

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IMOD * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  191

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IDIV * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  192

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IMUL * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  193

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ISUB * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  194

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IADD * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  195

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ASSIGN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  196

State 50:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  181

State 51:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= expr LSQBRACKET * expr RSQBRACKET
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  206

State 52:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= LNOT * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  150

State 53:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  151

State 54:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  152

State 55:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  153

State 56:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= L2V LPAREN * expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  207

State 57:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= expr LOR * expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  159

State 58:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= expr LAND * expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  160

State 59:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= expr GT * expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  105

State 60:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= expr GE * expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  106

State 61:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= expr LT * expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  107

State 62:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= expr LE * expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  108

State 63:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= expr NE * expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  109

State 64:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= expr EQ * expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  110

State 65:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  161

State 66:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  162

State 67:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  163

State 68:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  164

State 69:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  165

State 70:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  166

State 71:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  167

State 72:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  168

State 73:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  169

State 74:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  170

State 75:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= expr QMARK expr COLON * expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  171

State 76:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= expr QMARK * expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  208

State 77:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  209

State 78:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  210

State 79:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= NAME ASSIGN * expr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr LT expr
          expr ::= * expr GE expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN

                          LNOT shift  52
                          PLUS shift  55
                         MINUS shift  54
                        BITNOT shift  53
                        LPAREN shift  77
                    LSQBRACKET shift  31
                          NAME shift  175
                        NUMBER shift  178
                         KILLS shift  177
                           L2V shift  314
                     MAPSTRING shift  313
                          UNIT shift  310
                        SWITCH shift  307
                      LOCATION shift  304
                 CONDITIONNAME shift  301
                      funcexpr shift  176
                          expr shift  200

State 80:
          object_body ::= object_body * VAR nameList_nonEmpty SEMICOLON
          method_header ::= * FUNCTION NAME LPAREN nameList RPAREN
          method_chunk ::= * method_header stmt
          object_body ::= object_body * method_chunk
          object_chunk ::= object_body * RBRACKET SEMICOLON

                      FUNCTION shift  275
                           VAR shift  86
                      RBRACKET shift  272
                 method_header shift  3
                  method_chunk shift  232

State 81:
          method_header ::= FUNCTION NAME LPAREN * nameList RPAREN
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
     (57) nameList ::= *
          nameList ::= * nameList_nonEmpty

                          NAME shift  229
                        RPAREN reduce 57
                      nameList shift  273
             nameList_nonEmpty shift  271

State 82:
          fdef_header ::= FUNCTION NAME LPAREN * nameList RPAREN
          fdecl_chunk ::= FUNCTION NAME LPAREN * nameList RPAREN SEMICOLON
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
     (57) nameList ::= *
          nameList ::= * nameList_nonEmpty

                          NAME shift  229
                        RPAREN reduce 57
                      nameList shift  334
             nameList_nonEmpty shift  271

State 83:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          commaSkippable ::= * COMMA
     (81) commaSkippable ::= *
          expr ::= LSQBRACKET exprList_nonEmpty * commaSkippable RSQBRACKET

                         COMMA shift  32
                    RSQBRACKET reduce 81
                commaSkippable shift  299

State 84:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_global_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  229
             nameList_nonEmpty shift  245

State 85:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_global_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  229
             nameList_nonEmpty shift  231

State 86:
          object_body ::= object_body VAR * nameList_nonEmpty SEMICOLON
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  229
             nameList_nonEmpty shift  247

State 87:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= foreach_opener * nameList_nonEmpty COLON exprList_nonEmpty RPAREN

                          NAME shift  229
             nameList_nonEmpty shift  250

State 88:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  229
             nameList_nonEmpty shift  263

State 89:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  229
             nameList_nonEmpty shift  238

State 90:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  267
              numList_nonEmpty shift  266

State 91:
          rbracket ::= * RBRACKET
          blockStmt ::= lbracket bodyStmtList return_stmt SEMICOLON * rbracket

                      RBRACKET shift  128
                      rbracket shift  125

State 92:
          rbracket ::= * RBRACKET
          blockStmt ::= lbracket return_stmt SEMICOLON * rbracket

                      RBRACKET shift  128
                      rbracket shift  127

State 93:
          dottedName ::= * NAME
          dottedName ::= * dottedName PERIOD NAME
          import_chunk ::= IMPORT * dottedName AS NAME
          import_chunk ::= IMPORT * dottedName

                          NAME shift  243
                    dottedName shift  242

State 94:
     (69) expr ::= expr LSQBRACKET expr RSQBRACKET *
    (117) lvalue ::= expr LSQBRACKET expr RSQBRACKET *

                        ASSIGN reduce 117
                         QMARK reduce 69
                         COMMA reduce 117
                           LOR reduce 69
                          LAND reduce 69
                            EQ reduce 69
                            LE reduce 69
                            LT reduce 69
                            GE reduce 69
                            GT reduce 69
                            NE reduce 69
                         BITOR reduce 69
                        BITXOR reduce 69
                        BITAND reduce 69
                        LSHIFT reduce 69
                        RSHIFT reduce 69
                          PLUS reduce 69
                         MINUS reduce 69
                        DIVIDE reduce 69
                      MULTIPLY reduce 69
                           MOD reduce 69
                        LPAREN reduce 69
                    LSQBRACKET reduce 69
                        PERIOD reduce 69
                           INC reduce 69
                           DEC reduce 69
                          IADD reduce 117
                          ISUB reduce 117
                          IMUL reduce 117
                          IDIV reduce 117
                          IMOD reduce 117
                          ILSH reduce 117
                          IRSH reduce 117
                          IBND reduce 117
                          IBOR reduce 117
                          IBXR reduce 117

State 95:
     (68) expr ::= expr PERIOD NAME *
    (118) lvalue ::= expr PERIOD NAME *

                        ASSIGN reduce 118
                         QMARK reduce 68
                         COMMA reduce 118
                           LOR reduce 68
                          LAND reduce 68
                            EQ reduce 68
                            LE reduce 68
                            LT reduce 68
                            GE reduce 68
                            GT reduce 68
                            NE reduce 68
                         BITOR reduce 68
                        BITXOR reduce 68
                        BITAND reduce 68
                        LSHIFT reduce 68
                        RSHIFT reduce 68
                          PLUS reduce 68
                         MINUS reduce 68
                        DIVIDE reduce 68
                      MULTIPLY reduce 68
                           MOD reduce 68
                        LPAREN reduce 68
                    LSQBRACKET reduce 68
                        PERIOD reduce 68
                           INC reduce 68
                           DEC reduce 68
                          IADD reduce 118
                          ISUB reduce 118
                          IMUL reduce 118
                          IDIV reduce 118
                          IMOD reduce 118
                          ILSH reduce 118
                          IRSH reduce 118
                          IBND reduce 118
                          IBOR reduce 118
                          IBXR reduce 118

State 96:
     (67) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
    (116) lvalue ::= NAME *

                        ASSIGN reduce 116
                         QMARK reduce 67
                         COMMA reduce 116
                           LOR reduce 67
                          LAND reduce 67
                            EQ reduce 67
                            LE reduce 67
                            LT reduce 67
                            GE reduce 67
                            GT reduce 67
                            NE reduce 67
                         BITOR reduce 67
                        BITXOR reduce 67
                        BITAND reduce 67
                        LSHIFT reduce 67
                        RSHIFT reduce 67
                          PLUS reduce 67
                         MINUS reduce 67
                        DIVIDE reduce 67
                      MULTIPLY reduce 67
                           MOD reduce 67
                        LPAREN shift  19
                        LPAREN reduce 67  -- dropped by precedence
                    LSQBRACKET reduce 67
                        PERIOD reduce 67
                           INC reduce 67
                           DEC reduce 67
                          IADD reduce 116
                          ISUB reduce 116
                          IMUL reduce 116
                          IDIV reduce 116
                          IMOD reduce 116
                          ILSH reduce 116
                          IRSH reduce 116
                          IBND reduce 116
                          IBOR reduce 116
                          IBXR reduce 116

State 97:
     (34) blockStmt ::= lbracket error RBRACKET *

                             $ reduce 34
                          ELSE reduce 34
                          LNOT reduce 34
                          PLUS reduce 34
                         MINUS reduce 34
                        BITNOT reduce 34
                        LPAREN reduce 34
                    LSQBRACKET reduce 34
                     SEMICOLON reduce 34
                          NAME reduce 34
                        IMPORT reduce 34
                      FUNCTION reduce 34
                        OBJECT reduce 34
                      LBRACKET reduce 34
                           VAR reduce 34
                      RBRACKET reduce 34
                        NUMBER reduce 34
                         KILLS reduce 34
                           L2V reduce 34
                     MAPSTRING reduce 34
                          UNIT reduce 34
                        SWITCH reduce 34
                      LOCATION reduce 34
                         CONST reduce 34
                           INC reduce 34
                           DEC reduce 34
                            IF reduce 34
                         WHILE reduce 34
                           FOR reduce 34
                       FOREACH reduce 34
                      CONTINUE reduce 34
                         BREAK reduce 34
                        RETURN reduce 34
                 CONDITIONNAME reduce 34
                    ACTIONNAME reduce 34

State 98:
    (145) if_stmt ::= if_block else_header stmt *

                             $ reduce 145
                          ELSE reduce 145
                          LNOT reduce 145
                          PLUS reduce 145
                         MINUS reduce 145
                        BITNOT reduce 145
                        LPAREN reduce 145
                    LSQBRACKET reduce 145
                     SEMICOLON reduce 145
                          NAME reduce 145
                        IMPORT reduce 145
                      FUNCTION reduce 145
                        OBJECT reduce 145
                      LBRACKET reduce 145
                           VAR reduce 145
                      RBRACKET reduce 145
                        NUMBER reduce 145
                         KILLS reduce 145
                           L2V reduce 145
                     MAPSTRING reduce 145
                          UNIT reduce 145
                        SWITCH reduce 145
                      LOCATION reduce 145
                         CONST reduce 145
                           INC reduce 145
                           DEC reduce 145
                            IF reduce 145
                         WHILE reduce 145
                           FOR reduce 145
                       FOREACH reduce 145
                      CONTINUE reduce 145
                         BREAK reduce 145
                        RETURN reduce 145
                 CONDITIONNAME reduce 145
                    ACTIONNAME reduce 145

State 99:
    (173) actionStmt ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                             $ reduce 173
                          ELSE reduce 173
                          LNOT reduce 173
                          PLUS reduce 173
                         MINUS reduce 173
                        BITNOT reduce 173
                        LPAREN reduce 173
                    LSQBRACKET reduce 173
                     SEMICOLON reduce 173
                          NAME reduce 173
                        IMPORT reduce 173
                      FUNCTION reduce 173
                        OBJECT reduce 173
                      LBRACKET reduce 173
                           VAR reduce 173
                      RBRACKET reduce 173
                        NUMBER reduce 173
                         KILLS reduce 173
                           L2V reduce 173
                     MAPSTRING reduce 173
                          UNIT reduce 173
                        SWITCH reduce 173
                      LOCATION reduce 173
                         CONST reduce 173
                           INC reduce 173
                           DEC reduce 173
                            IF reduce 173
                         WHILE reduce 173
                           FOR reduce 173
                       FOREACH reduce 173
                      CONTINUE reduce 173
                         BREAK reduce 173
                        RETURN reduce 173
                 CONDITIONNAME reduce 173
                    ACTIONNAME reduce 173

State 100:
    (167) foreach_stmt ::= foreach_header stmt *

                             $ reduce 167
                          ELSE reduce 167
                          LNOT reduce 167
                          PLUS reduce 167
                         MINUS reduce 167
                        BITNOT reduce 167
                        LPAREN reduce 167
                    LSQBRACKET reduce 167
                     SEMICOLON reduce 167
                          NAME reduce 167
                        IMPORT reduce 167
                      FUNCTION reduce 167
                        OBJECT reduce 167
                      LBRACKET reduce 167
                           VAR reduce 167
                      RBRACKET reduce 167
                        NUMBER reduce 167
                         KILLS reduce 167
                           L2V reduce 167
                     MAPSTRING reduce 167
                          UNIT reduce 167
                        SWITCH reduce 167
                      LOCATION reduce 167
                         CONST reduce 167
                           INC reduce 167
                           DEC reduce 167
                            IF reduce 167
                         WHILE reduce 167
                           FOR reduce 167
                       FOREACH reduce 167
                      CONTINUE reduce 167
                         BREAK reduce 167
                        RETURN reduce 167
                 CONDITIONNAME reduce 167
                    ACTIONNAME reduce 167

State 101:
    (164) for_stmt ::= for_header stmt *

                             $ reduce 164
                          ELSE reduce 164
                          LNOT reduce 164
                          PLUS reduce 164
                         MINUS reduce 164
                        BITNOT reduce 164
                        LPAREN reduce 164
                    LSQBRACKET reduce 164
                     SEMICOLON reduce 164
                          NAME reduce 164
                        IMPORT reduce 164
                      FUNCTION reduce 164
                        OBJECT reduce 164
                      LBRACKET reduce 164
                           VAR reduce 164
                      RBRACKET reduce 164
                        NUMBER reduce 164
                         KILLS reduce 164
                           L2V reduce 164
                     MAPSTRING reduce 164
                          UNIT reduce 164
                        SWITCH reduce 164
                      LOCATION reduce 164
                         CONST reduce 164
                           INC reduce 164
                           DEC reduce 164
                            IF reduce 164
                         WHILE reduce 164
                           FOR reduce 164
                       FOREACH reduce 164
                      CONTINUE reduce 164
                         BREAK reduce 164
                        RETURN reduce 164
                 CONDITIONNAME reduce 164
                    ACTIONNAME reduce 164

State 102:
    (148) while_stmt ::= while_header stmt *

                             $ reduce 148
                          ELSE reduce 148
                          LNOT reduce 148
                          PLUS reduce 148
                         MINUS reduce 148
                        BITNOT reduce 148
                        LPAREN reduce 148
                    LSQBRACKET reduce 148
                     SEMICOLON reduce 148
                          NAME reduce 148
                        IMPORT reduce 148
                      FUNCTION reduce 148
                        OBJECT reduce 148
                      LBRACKET reduce 148
                           VAR reduce 148
                      RBRACKET reduce 148
                        NUMBER reduce 148
                         KILLS reduce 148
                           L2V reduce 148
                     MAPSTRING reduce 148
                          UNIT reduce 148
                        SWITCH reduce 148
                      LOCATION reduce 148
                         CONST reduce 148
                           INC reduce 148
                           DEC reduce 148
                            IF reduce 148
                         WHILE reduce 148
                           FOR reduce 148
                       FOREACH reduce 148
                      CONTINUE reduce 148
                         BREAK reduce 148
                        RETURN reduce 148
                 CONDITIONNAME reduce 148
                    ACTIONNAME reduce 148

State 103:
    (142) if_block ::= if_block elif_header stmt *

                             $ reduce 142
                          ELSE reduce 142
                          LNOT reduce 142
                          PLUS reduce 142
                         MINUS reduce 142
                        BITNOT reduce 142
                        LPAREN reduce 142
                    LSQBRACKET reduce 142
                     SEMICOLON reduce 142
                          NAME reduce 142
                        IMPORT reduce 142
                      FUNCTION reduce 142
                        OBJECT reduce 142
                      LBRACKET reduce 142
                           VAR reduce 142
                      RBRACKET reduce 142
                        NUMBER reduce 142
                         KILLS reduce 142
                           L2V reduce 142
                     MAPSTRING reduce 142
                          UNIT reduce 142
                        SWITCH reduce 142
                      LOCATION reduce 142
                         CONST reduce 142
                           INC reduce 142
                           DEC reduce 142
                            IF reduce 142
                         WHILE reduce 142
                           FOR reduce 142
                       FOREACH reduce 142
                      CONTINUE reduce 142
                         BREAK reduce 142
                        RETURN reduce 142
                 CONDITIONNAME reduce 142
                    ACTIONNAME reduce 142

State 104:
    (139) if_block ::= if_header stmt *

                             $ reduce 139
                          ELSE reduce 139
                          LNOT reduce 139
                          PLUS reduce 139
                         MINUS reduce 139
                        BITNOT reduce 139
                        LPAREN reduce 139
                    LSQBRACKET reduce 139
                     SEMICOLON reduce 139
                          NAME reduce 139
                        IMPORT reduce 139
                      FUNCTION reduce 139
                        OBJECT reduce 139
                      LBRACKET reduce 139
                           VAR reduce 139
                      RBRACKET reduce 139
                        NUMBER reduce 139
                         KILLS reduce 139
                           L2V reduce 139
                     MAPSTRING reduce 139
                          UNIT reduce 139
                        SWITCH reduce 139
                      LOCATION reduce 139
                         CONST reduce 139
                           INC reduce 139
                           DEC reduce 139
                            IF reduce 139
                         WHILE reduce 139
                           FOR reduce 139
                       FOREACH reduce 139
                      CONTINUE reduce 139
                         BREAK reduce 139
                        RETURN reduce 139
                 CONDITIONNAME reduce 139
                    ACTIONNAME reduce 139

State 105:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
    (107) expr ::= expr GT expr *
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 107
                         COMMA reduce 107
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 107
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 107
                            EQ error
                            EQ reduce 107
                            LE error
                            LE reduce 107
                            LT error
                            LT reduce 107
                            GE error
                            GE reduce 107
                            GT error
                            GT reduce 107
                            NE error
                            NE reduce 107
                         BITOR shift  66
                         BITOR reduce 107 -- dropped by precedence
                        BITXOR shift  65
                        BITXOR reduce 107 -- dropped by precedence
                        BITAND shift  67
                        BITAND reduce 107 -- dropped by precedence
                        LSHIFT shift  69
                        LSHIFT reduce 107 -- dropped by precedence
                        RSHIFT shift  68
                        RSHIFT reduce 107 -- dropped by precedence
                          PLUS shift  74
                          PLUS reduce 107 -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 107 -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 107 -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 107 -- dropped by precedence
                           MOD shift  70
                           MOD reduce 107 -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 107 -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 107 -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 107 -- dropped by precedence
                     SEMICOLON reduce 107
                        RPAREN reduce 107
                    RSQBRACKET reduce 107
                         COLON reduce 107
                           INC reduce 107
                           DEC reduce 107

State 106:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
    (106) expr ::= expr GE expr *
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 106
                         COMMA reduce 106
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 106
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 106
                            EQ error
                            EQ reduce 106
                            LE error
                            LE reduce 106
                            LT error
                            LT reduce 106
                            GE error
                            GE reduce 106
                            GT error
                            GT reduce 106
                            NE error
                            NE reduce 106
                         BITOR shift  66
                         BITOR reduce 106 -- dropped by precedence
                        BITXOR shift  65
                        BITXOR reduce 106 -- dropped by precedence
                        BITAND shift  67
                        BITAND reduce 106 -- dropped by precedence
                        LSHIFT shift  69
                        LSHIFT reduce 106 -- dropped by precedence
                        RSHIFT shift  68
                        RSHIFT reduce 106 -- dropped by precedence
                          PLUS shift  74
                          PLUS reduce 106 -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 106 -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 106 -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 106 -- dropped by precedence
                           MOD shift  70
                           MOD reduce 106 -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 106 -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 106 -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 106 -- dropped by precedence
                     SEMICOLON reduce 106
                        RPAREN reduce 106
                    RSQBRACKET reduce 106
                         COLON reduce 106
                           INC reduce 106
                           DEC reduce 106

State 107:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
    (105) expr ::= expr LT expr *
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 105
                         COMMA reduce 105
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 105
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 105
                            EQ error
                            EQ reduce 105
                            LE error
                            LE reduce 105
                            LT error
                            LT reduce 105
                            GE error
                            GE reduce 105
                            GT error
                            GT reduce 105
                            NE error
                            NE reduce 105
                         BITOR shift  66
                         BITOR reduce 105 -- dropped by precedence
                        BITXOR shift  65
                        BITXOR reduce 105 -- dropped by precedence
                        BITAND shift  67
                        BITAND reduce 105 -- dropped by precedence
                        LSHIFT shift  69
                        LSHIFT reduce 105 -- dropped by precedence
                        RSHIFT shift  68
                        RSHIFT reduce 105 -- dropped by precedence
                          PLUS shift  74
                          PLUS reduce 105 -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 105 -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 105 -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 105 -- dropped by precedence
                           MOD shift  70
                           MOD reduce 105 -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 105 -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 105 -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 105 -- dropped by precedence
                     SEMICOLON reduce 105
                        RPAREN reduce 105
                    RSQBRACKET reduce 105
                         COLON reduce 105
                           INC reduce 105
                           DEC reduce 105

State 108:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
    (104) expr ::= expr LE expr *
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 104
                         COMMA reduce 104
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 104
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 104
                            EQ error
                            EQ reduce 104
                            LE error
                            LE reduce 104
                            LT error
                            LT reduce 104
                            GE error
                            GE reduce 104
                            GT error
                            GT reduce 104
                            NE error
                            NE reduce 104
                         BITOR shift  66
                         BITOR reduce 104 -- dropped by precedence
                        BITXOR shift  65
                        BITXOR reduce 104 -- dropped by precedence
                        BITAND shift  67
                        BITAND reduce 104 -- dropped by precedence
                        LSHIFT shift  69
                        LSHIFT reduce 104 -- dropped by precedence
                        RSHIFT shift  68
                        RSHIFT reduce 104 -- dropped by precedence
                          PLUS shift  74
                          PLUS reduce 104 -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 104 -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 104 -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 104 -- dropped by precedence
                           MOD shift  70
                           MOD reduce 104 -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 104 -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 104 -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 104 -- dropped by precedence
                     SEMICOLON reduce 104
                        RPAREN reduce 104
                    RSQBRACKET reduce 104
                         COLON reduce 104
                           INC reduce 104
                           DEC reduce 104

State 109:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
    (103) expr ::= expr NE expr *
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 103
                         COMMA reduce 103
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 103
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 103
                            EQ error
                            EQ reduce 103
                            LE error
                            LE reduce 103
                            LT error
                            LT reduce 103
                            GE error
                            GE reduce 103
                            GT error
                            GT reduce 103
                            NE error
                            NE reduce 103
                         BITOR shift  66
                         BITOR reduce 103 -- dropped by precedence
                        BITXOR shift  65
                        BITXOR reduce 103 -- dropped by precedence
                        BITAND shift  67
                        BITAND reduce 103 -- dropped by precedence
                        LSHIFT shift  69
                        LSHIFT reduce 103 -- dropped by precedence
                        RSHIFT shift  68
                        RSHIFT reduce 103 -- dropped by precedence
                          PLUS shift  74
                          PLUS reduce 103 -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 103 -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 103 -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 103 -- dropped by precedence
                           MOD shift  70
                           MOD reduce 103 -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 103 -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 103 -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 103 -- dropped by precedence
                     SEMICOLON reduce 103
                        RPAREN reduce 103
                    RSQBRACKET reduce 103
                         COLON reduce 103
                           INC reduce 103
                           DEC reduce 103

State 110:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
    (102) expr ::= expr EQ expr *
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 102
                         COMMA reduce 102
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 102
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 102
                            EQ error
                            EQ reduce 102
                            LE error
                            LE reduce 102
                            LT error
                            LT reduce 102
                            GE error
                            GE reduce 102
                            GT error
                            GT reduce 102
                            NE error
                            NE reduce 102
                         BITOR shift  66
                         BITOR reduce 102 -- dropped by precedence
                        BITXOR shift  65
                        BITXOR reduce 102 -- dropped by precedence
                        BITAND shift  67
                        BITAND reduce 102 -- dropped by precedence
                        LSHIFT shift  69
                        LSHIFT reduce 102 -- dropped by precedence
                        RSHIFT shift  68
                        RSHIFT reduce 102 -- dropped by precedence
                          PLUS shift  74
                          PLUS reduce 102 -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 102 -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 102 -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 102 -- dropped by precedence
                           MOD shift  70
                           MOD reduce 102 -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 102 -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 102 -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 102 -- dropped by precedence
                     SEMICOLON reduce 102
                        RPAREN reduce 102
                    RSQBRACKET reduce 102
                         COLON reduce 102
                           INC reduce 102
                           DEC reduce 102

State 111:
     (48) bodyStmt ::= break_stmt SEMICOLON *

                             $ reduce 48
                          ELSE reduce 48
                          LNOT reduce 48
                          PLUS reduce 48
                         MINUS reduce 48
                        BITNOT reduce 48
                        LPAREN reduce 48
                    LSQBRACKET reduce 48
                     SEMICOLON reduce 48
                          NAME reduce 48
                        IMPORT reduce 48
                      FUNCTION reduce 48
                        OBJECT reduce 48
                      LBRACKET reduce 48
                           VAR reduce 48
                      RBRACKET reduce 48
                        NUMBER reduce 48
                         KILLS reduce 48
                           L2V reduce 48
                     MAPSTRING reduce 48
                          UNIT reduce 48
                        SWITCH reduce 48
                      LOCATION reduce 48
                         CONST reduce 48
                           INC reduce 48
                           DEC reduce 48
                            IF reduce 48
                         WHILE reduce 48
                           FOR reduce 48
                       FOREACH reduce 48
                      CONTINUE reduce 48
                         BREAK reduce 48
                        RETURN reduce 48
                 CONDITIONNAME reduce 48
                    ACTIONNAME reduce 48

State 112:
     (47) bodyStmt ::= continue_stmt SEMICOLON *

                             $ reduce 47
                          ELSE reduce 47
                          LNOT reduce 47
                          PLUS reduce 47
                         MINUS reduce 47
                        BITNOT reduce 47
                        LPAREN reduce 47
                    LSQBRACKET reduce 47
                     SEMICOLON reduce 47
                          NAME reduce 47
                        IMPORT reduce 47
                      FUNCTION reduce 47
                        OBJECT reduce 47
                      LBRACKET reduce 47
                           VAR reduce 47
                      RBRACKET reduce 47
                        NUMBER reduce 47
                         KILLS reduce 47
                           L2V reduce 47
                     MAPSTRING reduce 47
                          UNIT reduce 47
                        SWITCH reduce 47
                      LOCATION reduce 47
                         CONST reduce 47
                           INC reduce 47
                           DEC reduce 47
                            IF reduce 47
                         WHILE reduce 47
                           FOR reduce 47
                       FOREACH reduce 47
                      CONTINUE reduce 47
                         BREAK reduce 47
                        RETURN reduce 47
                 CONDITIONNAME reduce 47
                    ACTIONNAME reduce 47

State 113:
     (46) bodyStmt ::= foreach_stmt *

                             $ reduce 46
                          ELSE reduce 46
                          LNOT reduce 46
                          PLUS reduce 46
                         MINUS reduce 46
                        BITNOT reduce 46
                        LPAREN reduce 46
                    LSQBRACKET reduce 46
                     SEMICOLON reduce 46
                          NAME reduce 46
                        IMPORT reduce 46
                      FUNCTION reduce 46
                        OBJECT reduce 46
                      LBRACKET reduce 46
                           VAR reduce 46
                      RBRACKET reduce 46
                        NUMBER reduce 46
                         KILLS reduce 46
                           L2V reduce 46
                     MAPSTRING reduce 46
                          UNIT reduce 46
                        SWITCH reduce 46
                      LOCATION reduce 46
                         CONST reduce 46
                           INC reduce 46
                           DEC reduce 46
                            IF reduce 46
                         WHILE reduce 46
                           FOR reduce 46
                       FOREACH reduce 46
                      CONTINUE reduce 46
                         BREAK reduce 46
                        RETURN reduce 46
                 CONDITIONNAME reduce 46
                    ACTIONNAME reduce 46

State 114:
     (45) bodyStmt ::= for_stmt *

                             $ reduce 45
                          ELSE reduce 45
                          LNOT reduce 45
                          PLUS reduce 45
                         MINUS reduce 45
                        BITNOT reduce 45
                        LPAREN reduce 45
                    LSQBRACKET reduce 45
                     SEMICOLON reduce 45
                          NAME reduce 45
                        IMPORT reduce 45
                      FUNCTION reduce 45
                        OBJECT reduce 45
                      LBRACKET reduce 45
                           VAR reduce 45
                      RBRACKET reduce 45
                        NUMBER reduce 45
                         KILLS reduce 45
                           L2V reduce 45
                     MAPSTRING reduce 45
                          UNIT reduce 45
                        SWITCH reduce 45
                      LOCATION reduce 45
                         CONST reduce 45
                           INC reduce 45
                           DEC reduce 45
                            IF reduce 45
                         WHILE reduce 45
                           FOR reduce 45
                       FOREACH reduce 45
                      CONTINUE reduce 45
                         BREAK reduce 45
                        RETURN reduce 45
                 CONDITIONNAME reduce 45
                    ACTIONNAME reduce 45

State 115:
     (44) bodyStmt ::= while_stmt *

                             $ reduce 44
                          ELSE reduce 44
                          LNOT reduce 44
                          PLUS reduce 44
                         MINUS reduce 44
                        BITNOT reduce 44
                        LPAREN reduce 44
                    LSQBRACKET reduce 44
                     SEMICOLON reduce 44
                          NAME reduce 44
                        IMPORT reduce 44
                      FUNCTION reduce 44
                        OBJECT reduce 44
                      LBRACKET reduce 44
                           VAR reduce 44
                      RBRACKET reduce 44
                        NUMBER reduce 44
                         KILLS reduce 44
                           L2V reduce 44
                     MAPSTRING reduce 44
                          UNIT reduce 44
                        SWITCH reduce 44
                      LOCATION reduce 44
                         CONST reduce 44
                           INC reduce 44
                           DEC reduce 44
                            IF reduce 44
                         WHILE reduce 44
                           FOR reduce 44
                       FOREACH reduce 44
                      CONTINUE reduce 44
                         BREAK reduce 44
                        RETURN reduce 44
                 CONDITIONNAME reduce 44
                    ACTIONNAME reduce 44

State 116:
     (43) bodyStmt ::= if_stmt *

                             $ reduce 43
                          ELSE reduce 43
                          LNOT reduce 43
                          PLUS reduce 43
                         MINUS reduce 43
                        BITNOT reduce 43
                        LPAREN reduce 43
                    LSQBRACKET reduce 43
                     SEMICOLON reduce 43
                          NAME reduce 43
                        IMPORT reduce 43
                      FUNCTION reduce 43
                        OBJECT reduce 43
                      LBRACKET reduce 43
                           VAR reduce 43
                      RBRACKET reduce 43
                        NUMBER reduce 43
                         KILLS reduce 43
                           L2V reduce 43
                     MAPSTRING reduce 43
                          UNIT reduce 43
                        SWITCH reduce 43
                      LOCATION reduce 43
                         CONST reduce 43
                           INC reduce 43
                           DEC reduce 43
                            IF reduce 43
                         WHILE reduce 43
                           FOR reduce 43
                       FOREACH reduce 43
                      CONTINUE reduce 43
                         BREAK reduce 43
                        RETURN reduce 43
                 CONDITIONNAME reduce 43
                    ACTIONNAME reduce 43

State 117:
     (42) bodyStmt ::= actionStmt *

                             $ reduce 42
                          ELSE reduce 42
                          LNOT reduce 42
                          PLUS reduce 42
                         MINUS reduce 42
                        BITNOT reduce 42
                        LPAREN reduce 42
                    LSQBRACKET reduce 42
                     SEMICOLON reduce 42
                          NAME reduce 42
                        IMPORT reduce 42
                      FUNCTION reduce 42
                        OBJECT reduce 42
                      LBRACKET reduce 42
                           VAR reduce 42
                      RBRACKET reduce 42
                        NUMBER reduce 42
                         KILLS reduce 42
                           L2V reduce 42
                     MAPSTRING reduce 42
                          UNIT reduce 42
                        SWITCH reduce 42
                      LOCATION reduce 42
                         CONST reduce 42
                           INC reduce 42
                           DEC reduce 42
                            IF reduce 42
                         WHILE reduce 42
                           FOR reduce 42
                       FOREACH reduce 42
                      CONTINUE reduce 42
                         BREAK reduce 42
                        RETURN reduce 42
                 CONDITIONNAME reduce 42
                    ACTIONNAME reduce 42

State 118:
     (41) bodyStmt ::= funcexpr SEMICOLON *

                             $ reduce 41
                          ELSE reduce 41
                          LNOT reduce 41
                          PLUS reduce 41
                         MINUS reduce 41
                        BITNOT reduce 41
                        LPAREN reduce 41
                    LSQBRACKET reduce 41
                     SEMICOLON reduce 41
                          NAME reduce 41
                        IMPORT reduce 41
                      FUNCTION reduce 41
                        OBJECT reduce 41
                      LBRACKET reduce 41
                           VAR reduce 41
                      RBRACKET reduce 41
                        NUMBER reduce 41
                         KILLS reduce 41
                           L2V reduce 41
                     MAPSTRING reduce 41
                          UNIT reduce 41
                        SWITCH reduce 41
                      LOCATION reduce 41
                         CONST reduce 41
                           INC reduce 41
                           DEC reduce 41
                            IF reduce 41
                         WHILE reduce 41
                           FOR reduce 41
                       FOREACH reduce 41
                      CONTINUE reduce 41
                         BREAK reduce 41
                        RETURN reduce 41
                 CONDITIONNAME reduce 41
                    ACTIONNAME reduce 41

State 119:
     (40) bodyStmt ::= assign_stmt SEMICOLON *

                             $ reduce 40
                          ELSE reduce 40
                          LNOT reduce 40
                          PLUS reduce 40
                         MINUS reduce 40
                        BITNOT reduce 40
                        LPAREN reduce 40
                    LSQBRACKET reduce 40
                     SEMICOLON reduce 40
                          NAME reduce 40
                        IMPORT reduce 40
                      FUNCTION reduce 40
                        OBJECT reduce 40
                      LBRACKET reduce 40
                           VAR reduce 40
                      RBRACKET reduce 40
                        NUMBER reduce 40
                         KILLS reduce 40
                           L2V reduce 40
                     MAPSTRING reduce 40
                          UNIT reduce 40
                        SWITCH reduce 40
                      LOCATION reduce 40
                         CONST reduce 40
                           INC reduce 40
                           DEC reduce 40
                            IF reduce 40
                         WHILE reduce 40
                           FOR reduce 40
                       FOREACH reduce 40
                      CONTINUE reduce 40
                         BREAK reduce 40
                        RETURN reduce 40
                 CONDITIONNAME reduce 40
                    ACTIONNAME reduce 40

State 120:
     (39) bodyStmt ::= cdef_stmt SEMICOLON *

                             $ reduce 39
                          ELSE reduce 39
                          LNOT reduce 39
                          PLUS reduce 39
                         MINUS reduce 39
                        BITNOT reduce 39
                        LPAREN reduce 39
                    LSQBRACKET reduce 39
                     SEMICOLON reduce 39
                          NAME reduce 39
                        IMPORT reduce 39
                      FUNCTION reduce 39
                        OBJECT reduce 39
                      LBRACKET reduce 39
                           VAR reduce 39
                      RBRACKET reduce 39
                        NUMBER reduce 39
                         KILLS reduce 39
                           L2V reduce 39
                     MAPSTRING reduce 39
                          UNIT reduce 39
                        SWITCH reduce 39
                      LOCATION reduce 39
                         CONST reduce 39
                           INC reduce 39
                           DEC reduce 39
                            IF reduce 39
                         WHILE reduce 39
                           FOR reduce 39
                       FOREACH reduce 39
                      CONTINUE reduce 39
                         BREAK reduce 39
                        RETURN reduce 39
                 CONDITIONNAME reduce 39
                    ACTIONNAME reduce 39

State 121:
     (38) bodyStmt ::= vdefAssign_stmt SEMICOLON *

                             $ reduce 38
                          ELSE reduce 38
                          LNOT reduce 38
                          PLUS reduce 38
                         MINUS reduce 38
                        BITNOT reduce 38
                        LPAREN reduce 38
                    LSQBRACKET reduce 38
                     SEMICOLON reduce 38
                          NAME reduce 38
                        IMPORT reduce 38
                      FUNCTION reduce 38
                        OBJECT reduce 38
                      LBRACKET reduce 38
                           VAR reduce 38
                      RBRACKET reduce 38
                        NUMBER reduce 38
                         KILLS reduce 38
                           L2V reduce 38
                     MAPSTRING reduce 38
                          UNIT reduce 38
                        SWITCH reduce 38
                      LOCATION reduce 38
                         CONST reduce 38
                           INC reduce 38
                           DEC reduce 38
                            IF reduce 38
                         WHILE reduce 38
                           FOR reduce 38
                       FOREACH reduce 38
                      CONTINUE reduce 38
                         BREAK reduce 38
                        RETURN reduce 38
                 CONDITIONNAME reduce 38
                    ACTIONNAME reduce 38

State 122:
     (37) bodyStmt ::= vdef_stmt SEMICOLON *

                             $ reduce 37
                          ELSE reduce 37
                          LNOT reduce 37
                          PLUS reduce 37
                         MINUS reduce 37
                        BITNOT reduce 37
                        LPAREN reduce 37
                    LSQBRACKET reduce 37
                     SEMICOLON reduce 37
                          NAME reduce 37
                        IMPORT reduce 37
                      FUNCTION reduce 37
                        OBJECT reduce 37
                      LBRACKET reduce 37
                           VAR reduce 37
                      RBRACKET reduce 37
                        NUMBER reduce 37
                         KILLS reduce 37
                           L2V reduce 37
                     MAPSTRING reduce 37
                          UNIT reduce 37
                        SWITCH reduce 37
                      LOCATION reduce 37
                         CONST reduce 37
                           INC reduce 37
                           DEC reduce 37
                            IF reduce 37
                         WHILE reduce 37
                           FOR reduce 37
                       FOREACH reduce 37
                      CONTINUE reduce 37
                         BREAK reduce 37
                        RETURN reduce 37
                 CONDITIONNAME reduce 37
                    ACTIONNAME reduce 37

State 123:
     (36) bodyStmt ::= SEMICOLON *

                             $ reduce 36
                          ELSE reduce 36
                          LNOT reduce 36
                          PLUS reduce 36
                         MINUS reduce 36
                        BITNOT reduce 36
                        LPAREN reduce 36
                    LSQBRACKET reduce 36
                     SEMICOLON reduce 36
                          NAME reduce 36
                        IMPORT reduce 36
                      FUNCTION reduce 36
                        OBJECT reduce 36
                      LBRACKET reduce 36
                           VAR reduce 36
                      RBRACKET reduce 36
                        NUMBER reduce 36
                         KILLS reduce 36
                           L2V reduce 36
                     MAPSTRING reduce 36
                          UNIT reduce 36
                        SWITCH reduce 36
                      LOCATION reduce 36
                         CONST reduce 36
                           INC reduce 36
                           DEC reduce 36
                            IF reduce 36
                         WHILE reduce 36
                           FOR reduce 36
                       FOREACH reduce 36
                      CONTINUE reduce 36
                         BREAK reduce 36
                        RETURN reduce 36
                 CONDITIONNAME reduce 36
                    ACTIONNAME reduce 36

State 124:
     (35) bodyStmt ::= blockStmt *

                             $ reduce 35
                          ELSE reduce 35
                          LNOT reduce 35
                          PLUS reduce 35
                         MINUS reduce 35
                        BITNOT reduce 35
                        LPAREN reduce 35
                    LSQBRACKET reduce 35
                     SEMICOLON reduce 35
                          NAME reduce 35
                        IMPORT reduce 35
                      FUNCTION reduce 35
                        OBJECT reduce 35
                      LBRACKET reduce 35
                           VAR reduce 35
                      RBRACKET reduce 35
                        NUMBER reduce 35
                         KILLS reduce 35
                           L2V reduce 35
                     MAPSTRING reduce 35
                          UNIT reduce 35
                        SWITCH reduce 35
                      LOCATION reduce 35
                         CONST reduce 35
                           INC reduce 35
                           DEC reduce 35
                            IF reduce 35
                         WHILE reduce 35
                           FOR reduce 35
                       FOREACH reduce 35
                      CONTINUE reduce 35
                         BREAK reduce 35
                        RETURN reduce 35
                 CONDITIONNAME reduce 35
                    ACTIONNAME reduce 35

State 125:
     (33) blockStmt ::= lbracket bodyStmtList return_stmt SEMICOLON rbracket *

                             $ reduce 33
                          ELSE reduce 33
                          LNOT reduce 33
                          PLUS reduce 33
                         MINUS reduce 33
                        BITNOT reduce 33
                        LPAREN reduce 33
                    LSQBRACKET reduce 33
                     SEMICOLON reduce 33
                          NAME reduce 33
                        IMPORT reduce 33
                      FUNCTION reduce 33
                        OBJECT reduce 33
                      LBRACKET reduce 33
                           VAR reduce 33
                      RBRACKET reduce 33
                        NUMBER reduce 33
                         KILLS reduce 33
                           L2V reduce 33
                     MAPSTRING reduce 33
                          UNIT reduce 33
                        SWITCH reduce 33
                      LOCATION reduce 33
                         CONST reduce 33
                           INC reduce 33
                           DEC reduce 33
                            IF reduce 33
                         WHILE reduce 33
                           FOR reduce 33
                       FOREACH reduce 33
                      CONTINUE reduce 33
                         BREAK reduce 33
                        RETURN reduce 33
                 CONDITIONNAME reduce 33
                    ACTIONNAME reduce 33

State 126:
     (32) blockStmt ::= lbracket bodyStmtList rbracket *

                             $ reduce 32
                          ELSE reduce 32
                          LNOT reduce 32
                          PLUS reduce 32
                         MINUS reduce 32
                        BITNOT reduce 32
                        LPAREN reduce 32
                    LSQBRACKET reduce 32
                     SEMICOLON reduce 32
                          NAME reduce 32
                        IMPORT reduce 32
                      FUNCTION reduce 32
                        OBJECT reduce 32
                      LBRACKET reduce 32
                           VAR reduce 32
                      RBRACKET reduce 32
                        NUMBER reduce 32
                         KILLS reduce 32
                           L2V reduce 32
                     MAPSTRING reduce 32
                          UNIT reduce 32
                        SWITCH reduce 32
                      LOCATION reduce 32
                         CONST reduce 32
                           INC reduce 32
                           DEC reduce 32
                            IF reduce 32
                         WHILE reduce 32
                           FOR reduce 32
                       FOREACH reduce 32
                      CONTINUE reduce 32
                         BREAK reduce 32
                        RETURN reduce 32
                 CONDITIONNAME reduce 32
                    ACTIONNAME reduce 32

State 127:
     (31) blockStmt ::= lbracket return_stmt SEMICOLON rbracket *

                             $ reduce 31
                          ELSE reduce 31
                          LNOT reduce 31
                          PLUS reduce 31
                         MINUS reduce 31
                        BITNOT reduce 31
                        LPAREN reduce 31
                    LSQBRACKET reduce 31
                     SEMICOLON reduce 31
                          NAME reduce 31
                        IMPORT reduce 31
                      FUNCTION reduce 31
                        OBJECT reduce 31
                      LBRACKET reduce 31
                           VAR reduce 31
                      RBRACKET reduce 31
                        NUMBER reduce 31
                         KILLS reduce 31
                           L2V reduce 31
                     MAPSTRING reduce 31
                          UNIT reduce 31
                        SWITCH reduce 31
                      LOCATION reduce 31
                         CONST reduce 31
                           INC reduce 31
                           DEC reduce 31
                            IF reduce 31
                         WHILE reduce 31
                           FOR reduce 31
                       FOREACH reduce 31
                      CONTINUE reduce 31
                         BREAK reduce 31
                        RETURN reduce 31
                 CONDITIONNAME reduce 31
                    ACTIONNAME reduce 31

State 128:
     (29) rbracket ::= RBRACKET *

                             $ reduce 29
                          ELSE reduce 29
                          LNOT reduce 29
                          PLUS reduce 29
                         MINUS reduce 29
                        BITNOT reduce 29
                        LPAREN reduce 29
                    LSQBRACKET reduce 29
                     SEMICOLON reduce 29
                          NAME reduce 29
                        IMPORT reduce 29
                      FUNCTION reduce 29
                        OBJECT reduce 29
                      LBRACKET reduce 29
                           VAR reduce 29
                      RBRACKET reduce 29
                        NUMBER reduce 29
                         KILLS reduce 29
                           L2V reduce 29
                     MAPSTRING reduce 29
                          UNIT reduce 29
                        SWITCH reduce 29
                      LOCATION reduce 29
                         CONST reduce 29
                           INC reduce 29
                           DEC reduce 29
                            IF reduce 29
                         WHILE reduce 29
                           FOR reduce 29
                       FOREACH reduce 29
                      CONTINUE reduce 29
                         BREAK reduce 29
                        RETURN reduce 29
                 CONDITIONNAME reduce 29
                    ACTIONNAME reduce 29

State 129:
     (30) blockStmt ::= lbracket RBRACKET *

                             $ reduce 30
                          ELSE reduce 30
                          LNOT reduce 30
                          PLUS reduce 30
                         MINUS reduce 30
                        BITNOT reduce 30
                        LPAREN reduce 30
                    LSQBRACKET reduce 30
                     SEMICOLON reduce 30
                          NAME reduce 30
                        IMPORT reduce 30
                      FUNCTION reduce 30
                        OBJECT reduce 30
                      LBRACKET reduce 30
                           VAR reduce 30
                      RBRACKET reduce 30
                        NUMBER reduce 30
                         KILLS reduce 30
                           L2V reduce 30
                     MAPSTRING reduce 30
                          UNIT reduce 30
                        SWITCH reduce 30
                      LOCATION reduce 30
                         CONST reduce 30
                           INC reduce 30
                           DEC reduce 30
                            IF reduce 30
                         WHILE reduce 30
                           FOR reduce 30
                       FOREACH reduce 30
                      CONTINUE reduce 30
                         BREAK reduce 30
                        RETURN reduce 30
                 CONDITIONNAME reduce 30
                    ACTIONNAME reduce 30

State 130:
     (27) stmt ::= return_stmt SEMICOLON *

                             $ reduce 27
                          ELSE reduce 27
                          LNOT reduce 27
                          PLUS reduce 27
                         MINUS reduce 27
                        BITNOT reduce 27
                        LPAREN reduce 27
                    LSQBRACKET reduce 27
                     SEMICOLON reduce 27
                          NAME reduce 27
                        IMPORT reduce 27
                      FUNCTION reduce 27
                        OBJECT reduce 27
                      LBRACKET reduce 27
                           VAR reduce 27
                      RBRACKET reduce 27
                        NUMBER reduce 27
                         KILLS reduce 27
                           L2V reduce 27
                     MAPSTRING reduce 27
                          UNIT reduce 27
                        SWITCH reduce 27
                      LOCATION reduce 27
                         CONST reduce 27
                           INC reduce 27
                           DEC reduce 27
                            IF reduce 27
                         WHILE reduce 27
                           FOR reduce 27
                       FOREACH reduce 27
                      CONTINUE reduce 27
                         BREAK reduce 27
                        RETURN reduce 27
                 CONDITIONNAME reduce 27
                    ACTIONNAME reduce 27

State 131:
     (26) stmt ::= bodyStmt *

                             $ reduce 26
                          ELSE reduce 26
                          LNOT reduce 26
                          PLUS reduce 26
                         MINUS reduce 26
                        BITNOT reduce 26
                        LPAREN reduce 26
                    LSQBRACKET reduce 26
                     SEMICOLON reduce 26
                          NAME reduce 26
                        IMPORT reduce 26
                      FUNCTION reduce 26
                        OBJECT reduce 26
                      LBRACKET reduce 26
                           VAR reduce 26
                      RBRACKET reduce 26
                        NUMBER reduce 26
                         KILLS reduce 26
                           L2V reduce 26
                     MAPSTRING reduce 26
                          UNIT reduce 26
                        SWITCH reduce 26
                      LOCATION reduce 26
                         CONST reduce 26
                           INC reduce 26
                           DEC reduce 26
                            IF reduce 26
                         WHILE reduce 26
                           FOR reduce 26
                       FOREACH reduce 26
                      CONTINUE reduce 26
                         BREAK reduce 26
                        RETURN reduce 26
                 CONDITIONNAME reduce 26
                    ACTIONNAME reduce 26

State 132:
     (25) stmt ::= error SEMICOLON *

                             $ reduce 25
                          ELSE reduce 25
                          LNOT reduce 25
                          PLUS reduce 25
                         MINUS reduce 25
                        BITNOT reduce 25
                        LPAREN reduce 25
                    LSQBRACKET reduce 25
                     SEMICOLON reduce 25
                          NAME reduce 25
                        IMPORT reduce 25
                      FUNCTION reduce 25
                        OBJECT reduce 25
                      LBRACKET reduce 25
                           VAR reduce 25
                      RBRACKET reduce 25
                        NUMBER reduce 25
                         KILLS reduce 25
                           L2V reduce 25
                     MAPSTRING reduce 25
                          UNIT reduce 25
                        SWITCH reduce 25
                      LOCATION reduce 25
                         CONST reduce 25
                           INC reduce 25
                           DEC reduce 25
                            IF reduce 25
                         WHILE reduce 25
                           FOR reduce 25
                       FOREACH reduce 25
                      CONTINUE reduce 25
                         BREAK reduce 25
                        RETURN reduce 25
                 CONDITIONNAME reduce 25
                    ACTIONNAME reduce 25

State 133:
     (50) bodyStmtList ::= bodyStmt *

                          LNOT reduce 50
                          PLUS reduce 50
                         MINUS reduce 50
                        BITNOT reduce 50
                        LPAREN reduce 50
                    LSQBRACKET reduce 50
                     SEMICOLON reduce 50
                          NAME reduce 50
                      LBRACKET reduce 50
                           VAR reduce 50
                      RBRACKET reduce 50
                        NUMBER reduce 50
                         KILLS reduce 50
                           L2V reduce 50
                     MAPSTRING reduce 50
                          UNIT reduce 50
                        SWITCH reduce 50
                      LOCATION reduce 50
                         CONST reduce 50
                           INC reduce 50
                           DEC reduce 50
                            IF reduce 50
                         WHILE reduce 50
                           FOR reduce 50
                       FOREACH reduce 50
                      CONTINUE reduce 50
                         BREAK reduce 50
                        RETURN reduce 50
                 CONDITIONNAME reduce 50
                    ACTIONNAME reduce 50

State 134:
          blockStmt ::= lbracket error * RBRACKET
     (49) bodyStmtList ::= error *

                          LNOT reduce 49
                          PLUS reduce 49
                         MINUS reduce 49
                        BITNOT reduce 49
                        LPAREN reduce 49
                    LSQBRACKET reduce 49
                     SEMICOLON reduce 49
                          NAME reduce 49
                      LBRACKET reduce 49
                           VAR reduce 49
                      RBRACKET shift  97
                      RBRACKET reduce 49  -- dropped by precedence
                        NUMBER reduce 49
                         KILLS reduce 49
                           L2V reduce 49
                     MAPSTRING reduce 49
                          UNIT reduce 49
                        SWITCH reduce 49
                      LOCATION reduce 49
                         CONST reduce 49
                           INC reduce 49
                           DEC reduce 49
                            IF reduce 49
                         WHILE reduce 49
                           FOR reduce 49
                       FOREACH reduce 49
                      CONTINUE reduce 49
                         BREAK reduce 49
                        RETURN reduce 49
                 CONDITIONNAME reduce 49
                    ACTIONNAME reduce 49

State 135:
     (52) bodyStmtList ::= bodyStmtList error *

                          LNOT reduce 52
                          PLUS reduce 52
                         MINUS reduce 52
                        BITNOT reduce 52
                        LPAREN reduce 52
                    LSQBRACKET reduce 52
                     SEMICOLON reduce 52
                          NAME reduce 52
                      LBRACKET reduce 52
                           VAR reduce 52
                      RBRACKET reduce 52
                        NUMBER reduce 52
                         KILLS reduce 52
                           L2V reduce 52
                     MAPSTRING reduce 52
                          UNIT reduce 52
                        SWITCH reduce 52
                      LOCATION reduce 52
                         CONST reduce 52
                           INC reduce 52
                           DEC reduce 52
                            IF reduce 52
                         WHILE reduce 52
                           FOR reduce 52
                       FOREACH reduce 52
                      CONTINUE reduce 52
                         BREAK reduce 52
                        RETURN reduce 52
                 CONDITIONNAME reduce 52
                    ACTIONNAME reduce 52

State 136:
     (51) bodyStmtList ::= bodyStmtList bodyStmt *

                          LNOT reduce 51
                          PLUS reduce 51
                         MINUS reduce 51
                        BITNOT reduce 51
                        LPAREN reduce 51
                    LSQBRACKET reduce 51
                     SEMICOLON reduce 51
                          NAME reduce 51
                      LBRACKET reduce 51
                           VAR reduce 51
                      RBRACKET reduce 51
                        NUMBER reduce 51
                         KILLS reduce 51
                           L2V reduce 51
                     MAPSTRING reduce 51
                          UNIT reduce 51
                        SWITCH reduce 51
                      LOCATION reduce 51
                         CONST reduce 51
                           INC reduce 51
                           DEC reduce 51
                            IF reduce 51
                         WHILE reduce 51
                           FOR reduce 51
                       FOREACH reduce 51
                      CONTINUE reduce 51
                         BREAK reduce 51
                        RETURN reduce 51
                 CONDITIONNAME reduce 51
                    ACTIONNAME reduce 51

State 137:
     (28) lbracket ::= LBRACKET *

                          LNOT reduce 28
                          PLUS reduce 28
                         MINUS reduce 28
                        BITNOT reduce 28
                        LPAREN reduce 28
                    LSQBRACKET reduce 28
                     SEMICOLON reduce 28
                          NAME reduce 28
                      LBRACKET reduce 28
                           VAR reduce 28
                      RBRACKET reduce 28
                        NUMBER reduce 28
                         KILLS reduce 28
                           L2V reduce 28
                     MAPSTRING reduce 28
                          UNIT reduce 28
                        SWITCH reduce 28
                      LOCATION reduce 28
                         CONST reduce 28
                           INC reduce 28
                           DEC reduce 28
                            IF reduce 28
                         WHILE reduce 28
                           FOR reduce 28
                       FOREACH reduce 28
                      CONTINUE reduce 28
                         BREAK reduce 28
                        RETURN reduce 28
                 CONDITIONNAME reduce 28
                    ACTIONNAME reduce 28

State 138:
     (21) method_header ::= FUNCTION NAME LPAREN nameList RPAREN *

                          LNOT reduce 21
                          PLUS reduce 21
                         MINUS reduce 21
                        BITNOT reduce 21
                        LPAREN reduce 21
                    LSQBRACKET reduce 21
                     SEMICOLON reduce 21
                          NAME reduce 21
                      LBRACKET reduce 21
                           VAR reduce 21
                        NUMBER reduce 21
                         KILLS reduce 21
                           L2V reduce 21
                     MAPSTRING reduce 21
                          UNIT reduce 21
                        SWITCH reduce 21
                      LOCATION reduce 21
                         CONST reduce 21
                           INC reduce 21
                           DEC reduce 21
                            IF reduce 21
                         WHILE reduce 21
                           FOR reduce 21
                       FOREACH reduce 21
                      CONTINUE reduce 21
                         BREAK reduce 21
                        RETURN reduce 21
                 CONDITIONNAME reduce 21
                    ACTIONNAME reduce 21

State 139:
    (166) foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN *

                          LNOT reduce 166
                          PLUS reduce 166
                         MINUS reduce 166
                        BITNOT reduce 166
                        LPAREN reduce 166
                    LSQBRACKET reduce 166
                     SEMICOLON reduce 166
                          NAME reduce 166
                      LBRACKET reduce 166
                           VAR reduce 166
                        NUMBER reduce 166
                         KILLS reduce 166
                           L2V reduce 166
                     MAPSTRING reduce 166
                          UNIT reduce 166
                        SWITCH reduce 166
                      LOCATION reduce 166
                         CONST reduce 166
                           INC reduce 166
                           DEC reduce 166
                            IF reduce 166
                         WHILE reduce 166
                           FOR reduce 166
                       FOREACH reduce 166
                      CONTINUE reduce 166
                         BREAK reduce 166
                        RETURN reduce 166
                 CONDITIONNAME reduce 166
                    ACTIONNAME reduce 166

State 140:
    (163) for_header ::= for_header2 for_action_stmt RPAREN *

                          LNOT reduce 163
                          PLUS reduce 163
                         MINUS reduce 163
                        BITNOT reduce 163
                        LPAREN reduce 163
                    LSQBRACKET reduce 163
                     SEMICOLON reduce 163
                          NAME reduce 163
                      LBRACKET reduce 163
                           VAR reduce 163
                        NUMBER reduce 163
                         KILLS reduce 163
                           L2V reduce 163
                     MAPSTRING reduce 163
                          UNIT reduce 163
                        SWITCH reduce 163
                      LOCATION reduce 163
                         CONST reduce 163
                           INC reduce 163
                           DEC reduce 163
                            IF reduce 163
                         WHILE reduce 163
                           FOR reduce 163
                       FOREACH reduce 163
                      CONTINUE reduce 163
                         BREAK reduce 163
                        RETURN reduce 163
                 CONDITIONNAME reduce 163
                    ACTIONNAME reduce 163

State 141:
    (147) while_header ::= while_start LPAREN expr RPAREN *

                          LNOT reduce 147
                          PLUS reduce 147
                         MINUS reduce 147
                        BITNOT reduce 147
                        LPAREN reduce 147
                    LSQBRACKET reduce 147
                     SEMICOLON reduce 147
                          NAME reduce 147
                      LBRACKET reduce 147
                           VAR reduce 147
                        NUMBER reduce 147
                         KILLS reduce 147
                           L2V reduce 147
                     MAPSTRING reduce 147
                          UNIT reduce 147
                        SWITCH reduce 147
                      LOCATION reduce 147
                         CONST reduce 147
                           INC reduce 147
                           DEC reduce 147
                            IF reduce 147
                         WHILE reduce 147
                           FOR reduce 147
                       FOREACH reduce 147
                      CONTINUE reduce 147
                         BREAK reduce 147
                        RETURN reduce 147
                 CONDITIONNAME reduce 147
                    ACTIONNAME reduce 147

State 142:
    (141) elif_header ::= elif_start LPAREN expr RPAREN *

                          LNOT reduce 141
                          PLUS reduce 141
                         MINUS reduce 141
                        BITNOT reduce 141
                        LPAREN reduce 141
                    LSQBRACKET reduce 141
                     SEMICOLON reduce 141
                          NAME reduce 141
                      LBRACKET reduce 141
                           VAR reduce 141
                        NUMBER reduce 141
                         KILLS reduce 141
                           L2V reduce 141
                     MAPSTRING reduce 141
                          UNIT reduce 141
                        SWITCH reduce 141
                      LOCATION reduce 141
                         CONST reduce 141
                           INC reduce 141
                           DEC reduce 141
                            IF reduce 141
                         WHILE reduce 141
                           FOR reduce 141
                       FOREACH reduce 141
                      CONTINUE reduce 141
                         BREAK reduce 141
                        RETURN reduce 141
                 CONDITIONNAME reduce 141
                    ACTIONNAME reduce 141

State 143:
          elif_start ::= ELSE * IF
    (143) else_header ::= ELSE *

                          LNOT reduce 143
                          PLUS reduce 143
                         MINUS reduce 143
                        BITNOT reduce 143
                        LPAREN reduce 143
                    LSQBRACKET reduce 143
                     SEMICOLON reduce 143
                          NAME reduce 143
                      LBRACKET reduce 143
                           VAR reduce 143
                        NUMBER reduce 143
                         KILLS reduce 143
                           L2V reduce 143
                     MAPSTRING reduce 143
                          UNIT reduce 143
                        SWITCH reduce 143
                      LOCATION reduce 143
                         CONST reduce 143
                           INC reduce 143
                           DEC reduce 143
                            IF shift  292
                            IF reduce 143 -- dropped by precedence
                         WHILE reduce 143
                           FOR reduce 143
                       FOREACH reduce 143
                      CONTINUE reduce 143
                         BREAK reduce 143
                        RETURN reduce 143
                 CONDITIONNAME reduce 143
                    ACTIONNAME reduce 143

State 144:
    (138) if_header ::= if_start LPAREN expr RPAREN *

                          LNOT reduce 138
                          PLUS reduce 138
                         MINUS reduce 138
                        BITNOT reduce 138
                        LPAREN reduce 138
                    LSQBRACKET reduce 138
                     SEMICOLON reduce 138
                          NAME reduce 138
                      LBRACKET reduce 138
                           VAR reduce 138
                        NUMBER reduce 138
                         KILLS reduce 138
                           L2V reduce 138
                     MAPSTRING reduce 138
                          UNIT reduce 138
                        SWITCH reduce 138
                      LOCATION reduce 138
                         CONST reduce 138
                           INC reduce 138
                           DEC reduce 138
                            IF reduce 138
                         WHILE reduce 138
                           FOR reduce 138
                       FOREACH reduce 138
                      CONTINUE reduce 138
                         BREAK reduce 138
                        RETURN reduce 138
                 CONDITIONNAME reduce 138
                    ACTIONNAME reduce 138

State 145:
    (172) expr ::= KILLS LPAREN fArgs RPAREN *

                         QMARK reduce 172
                         COMMA reduce 172
                           LOR reduce 172
                          LAND reduce 172
                            EQ reduce 172
                            LE reduce 172
                            LT reduce 172
                            GE reduce 172
                            GT reduce 172
                            NE reduce 172
                         BITOR reduce 172
                        BITXOR reduce 172
                        BITAND reduce 172
                        LSHIFT reduce 172
                        RSHIFT reduce 172
                          PLUS reduce 172
                         MINUS reduce 172
                        DIVIDE reduce 172
                      MULTIPLY reduce 172
                           MOD reduce 172
                        LPAREN reduce 172
                    LSQBRACKET reduce 172
                        PERIOD reduce 172
                     SEMICOLON reduce 172
                        RPAREN reduce 172
                    RSQBRACKET reduce 172
                         COLON reduce 172
                           INC reduce 172
                           DEC reduce 172

State 146:
     (76) funcexpr ::= NAME LPAREN fArgs RPAREN *

                         QMARK reduce 76
                         COMMA reduce 76
                           LOR reduce 76
                          LAND reduce 76
                            EQ reduce 76
                            LE reduce 76
                            LT reduce 76
                            GE reduce 76
                            GT reduce 76
                            NE reduce 76
                         BITOR reduce 76
                        BITXOR reduce 76
                        BITAND reduce 76
                        LSHIFT reduce 76
                        RSHIFT reduce 76
                          PLUS reduce 76
                         MINUS reduce 76
                        DIVIDE reduce 76
                      MULTIPLY reduce 76
                           MOD reduce 76
                        LPAREN reduce 76
                    LSQBRACKET reduce 76
                        PERIOD reduce 76
                     SEMICOLON reduce 76
                        RPAREN reduce 76
                    RSQBRACKET reduce 76
                         COLON reduce 76
                           INC reduce 76
                           DEC reduce 76

State 147:
     (77) funcexpr ::= expr LPAREN fArgs RPAREN *

                         QMARK reduce 77
                         COMMA reduce 77
                           LOR reduce 77
                          LAND reduce 77
                            EQ reduce 77
                            LE reduce 77
                            LT reduce 77
                            GE reduce 77
                            GT reduce 77
                            NE reduce 77
                         BITOR reduce 77
                        BITXOR reduce 77
                        BITAND reduce 77
                        LSHIFT reduce 77
                        RSHIFT reduce 77
                          PLUS reduce 77
                         MINUS reduce 77
                        DIVIDE reduce 77
                      MULTIPLY reduce 77
                           MOD reduce 77
                        LPAREN reduce 77
                    LSQBRACKET reduce 77
                        PERIOD reduce 77
                     SEMICOLON reduce 77
                        RPAREN reduce 77
                    RSQBRACKET reduce 77
                         COLON reduce 77
                           INC reduce 77
                           DEC reduce 77

State 148:
     (82) expr ::= LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET *

                         QMARK reduce 82
                         COMMA reduce 82
                           LOR reduce 82
                          LAND reduce 82
                            EQ reduce 82
                            LE reduce 82
                            LT reduce 82
                            GE reduce 82
                            GT reduce 82
                            NE reduce 82
                         BITOR reduce 82
                        BITXOR reduce 82
                        BITAND reduce 82
                        LSHIFT reduce 82
                        RSHIFT reduce 82
                          PLUS reduce 82
                         MINUS reduce 82
                        DIVIDE reduce 82
                      MULTIPLY reduce 82
                           MOD reduce 82
                        LPAREN reduce 82
                    LSQBRACKET reduce 82
                        PERIOD reduce 82
                     SEMICOLON reduce 82
                        RPAREN reduce 82
                    RSQBRACKET reduce 82
                         COLON reduce 82
                           INC reduce 82
                           DEC reduce 82

State 149:
    (171) expr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                         QMARK reduce 171
                         COMMA reduce 171
                           LOR reduce 171
                          LAND reduce 171
                            EQ reduce 171
                            LE reduce 171
                            LT reduce 171
                            GE reduce 171
                            GT reduce 171
                            NE reduce 171
                         BITOR reduce 171
                        BITXOR reduce 171
                        BITAND reduce 171
                        LSHIFT reduce 171
                        RSHIFT reduce 171
                          PLUS reduce 171
                         MINUS reduce 171
                        DIVIDE reduce 171
                      MULTIPLY reduce 171
                           MOD reduce 171
                        LPAREN reduce 171
                    LSQBRACKET reduce 171
                        PERIOD reduce 171
                     SEMICOLON reduce 171
                        RPAREN reduce 171
                    RSQBRACKET reduce 171
                         COLON reduce 171
                           INC reduce 171
                           DEC reduce 171

State 150:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (110) expr ::= LNOT expr *

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 110
                         COMMA reduce 110
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 110
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 110
                            EQ shift  64
                            EQ reduce 110 -- dropped by precedence
                            LE shift  62
                            LE reduce 110 -- dropped by precedence
                            LT shift  61
                            LT reduce 110 -- dropped by precedence
                            GE shift  60
                            GE reduce 110 -- dropped by precedence
                            GT shift  59
                            GT reduce 110 -- dropped by precedence
                            NE shift  63
                            NE reduce 110 -- dropped by precedence
                         BITOR shift  66
                         BITOR reduce 110 -- dropped by precedence
                        BITXOR shift  65
                        BITXOR reduce 110 -- dropped by precedence
                        BITAND shift  67
                        BITAND reduce 110 -- dropped by precedence
                        LSHIFT shift  69
                        LSHIFT reduce 110 -- dropped by precedence
                        RSHIFT shift  68
                        RSHIFT reduce 110 -- dropped by precedence
                          PLUS shift  74
                          PLUS reduce 110 -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 110 -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 110 -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 110 -- dropped by precedence
                           MOD shift  70
                           MOD reduce 110 -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 110 -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 110 -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 110 -- dropped by precedence
                     SEMICOLON reduce 110
                        RPAREN reduce 110
                    RSQBRACKET reduce 110
                         COLON reduce 110
                           INC reduce 110
                           DEC reduce 110

State 151:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (101) expr ::= BITNOT expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 101
                         COMMA reduce 101
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 101
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 101
                            EQ shift  64  -- dropped by precedence
                            EQ reduce 101
                            LE shift  62  -- dropped by precedence
                            LE reduce 101
                            LT shift  61  -- dropped by precedence
                            LT reduce 101
                            GE shift  60  -- dropped by precedence
                            GE reduce 101
                            GT shift  59  -- dropped by precedence
                            GT reduce 101
                            NE shift  63  -- dropped by precedence
                            NE reduce 101
                         BITOR shift  66  -- dropped by precedence
                         BITOR reduce 101
                        BITXOR shift  65  -- dropped by precedence
                        BITXOR reduce 101
                        BITAND shift  67  -- dropped by precedence
                        BITAND reduce 101
                        LSHIFT shift  69  -- dropped by precedence
                        LSHIFT reduce 101
                        RSHIFT shift  68  -- dropped by precedence
                        RSHIFT reduce 101
                          PLUS shift  74  -- dropped by precedence
                          PLUS reduce 101
                         MINUS shift  73  -- dropped by precedence
                         MINUS reduce 101
                        DIVIDE shift  71  -- dropped by precedence
                        DIVIDE reduce 101
                      MULTIPLY shift  72  -- dropped by precedence
                      MULTIPLY reduce 101
                           MOD shift  70  -- dropped by precedence
                           MOD reduce 101
                        LPAREN shift  18
                        LPAREN reduce 101 -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 101 -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 101 -- dropped by precedence
                     SEMICOLON reduce 101
                        RPAREN reduce 101
                    RSQBRACKET reduce 101
                         COLON reduce 101
                           INC reduce 101
                           DEC reduce 101

State 152:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (100) expr ::= MINUS expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 100
                         COMMA reduce 100
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 100
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 100
                            EQ shift  64  -- dropped by precedence
                            EQ reduce 100
                            LE shift  62  -- dropped by precedence
                            LE reduce 100
                            LT shift  61  -- dropped by precedence
                            LT reduce 100
                            GE shift  60  -- dropped by precedence
                            GE reduce 100
                            GT shift  59  -- dropped by precedence
                            GT reduce 100
                            NE shift  63  -- dropped by precedence
                            NE reduce 100
                         BITOR shift  66  -- dropped by precedence
                         BITOR reduce 100
                        BITXOR shift  65  -- dropped by precedence
                        BITXOR reduce 100
                        BITAND shift  67  -- dropped by precedence
                        BITAND reduce 100
                        LSHIFT shift  69  -- dropped by precedence
                        LSHIFT reduce 100
                        RSHIFT shift  68  -- dropped by precedence
                        RSHIFT reduce 100
                          PLUS shift  74  -- dropped by precedence
                          PLUS reduce 100
                         MINUS shift  73  -- dropped by precedence
                         MINUS reduce 100
                        DIVIDE shift  71  -- dropped by precedence
                        DIVIDE reduce 100
                      MULTIPLY shift  72  -- dropped by precedence
                      MULTIPLY reduce 100
                           MOD shift  70  -- dropped by precedence
                           MOD reduce 100
                        LPAREN shift  18
                        LPAREN reduce 100 -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 100 -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 100 -- dropped by precedence
                     SEMICOLON reduce 100
                        RPAREN reduce 100
                    RSQBRACKET reduce 100
                         COLON reduce 100
                           INC reduce 100
                           DEC reduce 100

State 153:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (99) expr ::= PLUS expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 99
                         COMMA reduce 99
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 99
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 99
                            EQ shift  64  -- dropped by precedence
                            EQ reduce 99
                            LE shift  62  -- dropped by precedence
                            LE reduce 99
                            LT shift  61  -- dropped by precedence
                            LT reduce 99
                            GE shift  60  -- dropped by precedence
                            GE reduce 99
                            GT shift  59  -- dropped by precedence
                            GT reduce 99
                            NE shift  63  -- dropped by precedence
                            NE reduce 99
                         BITOR shift  66  -- dropped by precedence
                         BITOR reduce 99
                        BITXOR shift  65  -- dropped by precedence
                        BITXOR reduce 99
                        BITAND shift  67  -- dropped by precedence
                        BITAND reduce 99
                        LSHIFT shift  69  -- dropped by precedence
                        LSHIFT reduce 99
                        RSHIFT shift  68  -- dropped by precedence
                        RSHIFT reduce 99
                          PLUS shift  74  -- dropped by precedence
                          PLUS reduce 99
                         MINUS shift  73  -- dropped by precedence
                         MINUS reduce 99
                        DIVIDE shift  71  -- dropped by precedence
                        DIVIDE reduce 99
                      MULTIPLY shift  72  -- dropped by precedence
                      MULTIPLY reduce 99
                           MOD shift  70  -- dropped by precedence
                           MOD reduce 99
                        LPAREN shift  18
                        LPAREN reduce 99  -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 99  -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 99  -- dropped by precedence
                     SEMICOLON reduce 99
                        RPAREN reduce 99
                    RSQBRACKET reduce 99
                         COLON reduce 99
                           INC reduce 99
                           DEC reduce 99

State 154:
     (87) expr ::= LOCATION LPAREN STRING RPAREN *

                         QMARK reduce 87
                         COMMA reduce 87
                           LOR reduce 87
                          LAND reduce 87
                            EQ reduce 87
                            LE reduce 87
                            LT reduce 87
                            GE reduce 87
                            GT reduce 87
                            NE reduce 87
                         BITOR reduce 87
                        BITXOR reduce 87
                        BITAND reduce 87
                        LSHIFT reduce 87
                        RSHIFT reduce 87
                          PLUS reduce 87
                         MINUS reduce 87
                        DIVIDE reduce 87
                      MULTIPLY reduce 87
                           MOD reduce 87
                        LPAREN reduce 87
                    LSQBRACKET reduce 87
                        PERIOD reduce 87
                     SEMICOLON reduce 87
                        RPAREN reduce 87
                    RSQBRACKET reduce 87
                         COLON reduce 87
                           INC reduce 87
                           DEC reduce 87

State 155:
     (86) expr ::= SWITCH LPAREN STRING RPAREN *

                         QMARK reduce 86
                         COMMA reduce 86
                           LOR reduce 86
                          LAND reduce 86
                            EQ reduce 86
                            LE reduce 86
                            LT reduce 86
                            GE reduce 86
                            GT reduce 86
                            NE reduce 86
                         BITOR reduce 86
                        BITXOR reduce 86
                        BITAND reduce 86
                        LSHIFT reduce 86
                        RSHIFT reduce 86
                          PLUS reduce 86
                         MINUS reduce 86
                        DIVIDE reduce 86
                      MULTIPLY reduce 86
                           MOD reduce 86
                        LPAREN reduce 86
                    LSQBRACKET reduce 86
                        PERIOD reduce 86
                     SEMICOLON reduce 86
                        RPAREN reduce 86
                    RSQBRACKET reduce 86
                         COLON reduce 86
                           INC reduce 86
                           DEC reduce 86

State 156:
     (85) expr ::= UNIT LPAREN STRING RPAREN *

                         QMARK reduce 85
                         COMMA reduce 85
                           LOR reduce 85
                          LAND reduce 85
                            EQ reduce 85
                            LE reduce 85
                            LT reduce 85
                            GE reduce 85
                            GT reduce 85
                            NE reduce 85
                         BITOR reduce 85
                        BITXOR reduce 85
                        BITAND reduce 85
                        LSHIFT reduce 85
                        RSHIFT reduce 85
                          PLUS reduce 85
                         MINUS reduce 85
                        DIVIDE reduce 85
                      MULTIPLY reduce 85
                           MOD reduce 85
                        LPAREN reduce 85
                    LSQBRACKET reduce 85
                        PERIOD reduce 85
                     SEMICOLON reduce 85
                        RPAREN reduce 85
                    RSQBRACKET reduce 85
                         COLON reduce 85
                           INC reduce 85
                           DEC reduce 85

State 157:
     (84) expr ::= MAPSTRING LPAREN STRING RPAREN *

                         QMARK reduce 84
                         COMMA reduce 84
                           LOR reduce 84
                          LAND reduce 84
                            EQ reduce 84
                            LE reduce 84
                            LT reduce 84
                            GE reduce 84
                            GT reduce 84
                            NE reduce 84
                         BITOR reduce 84
                        BITXOR reduce 84
                        BITAND reduce 84
                        LSHIFT reduce 84
                        RSHIFT reduce 84
                          PLUS reduce 84
                         MINUS reduce 84
                        DIVIDE reduce 84
                      MULTIPLY reduce 84
                           MOD reduce 84
                        LPAREN reduce 84
                    LSQBRACKET reduce 84
                        PERIOD reduce 84
                     SEMICOLON reduce 84
                        RPAREN reduce 84
                    RSQBRACKET reduce 84
                         COLON reduce 84
                           INC reduce 84
                           DEC reduce 84

State 158:
     (83) expr ::= L2V LPAREN expr RPAREN *

                         QMARK reduce 83
                         COMMA reduce 83
                           LOR reduce 83
                          LAND reduce 83
                            EQ reduce 83
                            LE reduce 83
                            LT reduce 83
                            GE reduce 83
                            GT reduce 83
                            NE reduce 83
                         BITOR reduce 83
                        BITXOR reduce 83
                        BITAND reduce 83
                        LSHIFT reduce 83
                        RSHIFT reduce 83
                          PLUS reduce 83
                         MINUS reduce 83
                        DIVIDE reduce 83
                      MULTIPLY reduce 83
                           MOD reduce 83
                        LPAREN reduce 83
                    LSQBRACKET reduce 83
                        PERIOD reduce 83
                     SEMICOLON reduce 83
                        RPAREN reduce 83
                    RSQBRACKET reduce 83
                         COLON reduce 83
                           INC reduce 83
                           DEC reduce 83

State 159:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (109) expr ::= expr LOR expr *

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 109
                         COMMA reduce 109
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 109
                          LAND shift  58
                          LAND reduce 109 -- dropped by precedence
                            EQ shift  64
                            EQ reduce 109 -- dropped by precedence
                            LE shift  62
                            LE reduce 109 -- dropped by precedence
                            LT shift  61
                            LT reduce 109 -- dropped by precedence
                            GE shift  60
                            GE reduce 109 -- dropped by precedence
                            GT shift  59
                            GT reduce 109 -- dropped by precedence
                            NE shift  63
                            NE reduce 109 -- dropped by precedence
                         BITOR shift  66
                         BITOR reduce 109 -- dropped by precedence
                        BITXOR shift  65
                        BITXOR reduce 109 -- dropped by precedence
                        BITAND shift  67
                        BITAND reduce 109 -- dropped by precedence
                        LSHIFT shift  69
                        LSHIFT reduce 109 -- dropped by precedence
                        RSHIFT shift  68
                        RSHIFT reduce 109 -- dropped by precedence
                          PLUS shift  74
                          PLUS reduce 109 -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 109 -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 109 -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 109 -- dropped by precedence
                           MOD shift  70
                           MOD reduce 109 -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 109 -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 109 -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 109 -- dropped by precedence
                     SEMICOLON reduce 109
                        RPAREN reduce 109
                    RSQBRACKET reduce 109
                         COLON reduce 109
                           INC reduce 109
                           DEC reduce 109

State 160:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
    (108) expr ::= expr LAND expr *
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 108
                         COMMA reduce 108
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 108
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 108
                            EQ shift  64
                            EQ reduce 108 -- dropped by precedence
                            LE shift  62
                            LE reduce 108 -- dropped by precedence
                            LT shift  61
                            LT reduce 108 -- dropped by precedence
                            GE shift  60
                            GE reduce 108 -- dropped by precedence
                            GT shift  59
                            GT reduce 108 -- dropped by precedence
                            NE shift  63
                            NE reduce 108 -- dropped by precedence
                         BITOR shift  66
                         BITOR reduce 108 -- dropped by precedence
                        BITXOR shift  65
                        BITXOR reduce 108 -- dropped by precedence
                        BITAND shift  67
                        BITAND reduce 108 -- dropped by precedence
                        LSHIFT shift  69
                        LSHIFT reduce 108 -- dropped by precedence
                        RSHIFT shift  68
                        RSHIFT reduce 108 -- dropped by precedence
                          PLUS shift  74
                          PLUS reduce 108 -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 108 -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 108 -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 108 -- dropped by precedence
                           MOD shift  70
                           MOD reduce 108 -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 108 -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 108 -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 108 -- dropped by precedence
                     SEMICOLON reduce 108
                        RPAREN reduce 108
                    RSQBRACKET reduce 108
                         COLON reduce 108
                           INC reduce 108
                           DEC reduce 108

State 161:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (98) expr ::= expr BITXOR expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 98
                         COMMA reduce 98
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 98
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 98
                            EQ shift  64  -- dropped by precedence
                            EQ reduce 98
                            LE shift  62  -- dropped by precedence
                            LE reduce 98
                            LT shift  61  -- dropped by precedence
                            LT reduce 98
                            GE shift  60  -- dropped by precedence
                            GE reduce 98
                            GT shift  59  -- dropped by precedence
                            GT reduce 98
                            NE shift  63  -- dropped by precedence
                            NE reduce 98
                         BITOR shift  66  -- dropped by precedence
                         BITOR reduce 98
                        BITXOR shift  65  -- dropped by precedence
                        BITXOR reduce 98
                        BITAND shift  67
                        BITAND reduce 98  -- dropped by precedence
                        LSHIFT shift  69
                        LSHIFT reduce 98  -- dropped by precedence
                        RSHIFT shift  68
                        RSHIFT reduce 98  -- dropped by precedence
                          PLUS shift  74
                          PLUS reduce 98  -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 98  -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 98  -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 98  -- dropped by precedence
                           MOD shift  70
                           MOD reduce 98  -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 98  -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 98  -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 98  -- dropped by precedence
                     SEMICOLON reduce 98
                        RPAREN reduce 98
                    RSQBRACKET reduce 98
                         COLON reduce 98
                           INC reduce 98
                           DEC reduce 98

State 162:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (97) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 97
                         COMMA reduce 97
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 97
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 97
                            EQ shift  64  -- dropped by precedence
                            EQ reduce 97
                            LE shift  62  -- dropped by precedence
                            LE reduce 97
                            LT shift  61  -- dropped by precedence
                            LT reduce 97
                            GE shift  60  -- dropped by precedence
                            GE reduce 97
                            GT shift  59  -- dropped by precedence
                            GT reduce 97
                            NE shift  63  -- dropped by precedence
                            NE reduce 97
                         BITOR shift  66  -- dropped by precedence
                         BITOR reduce 97
                        BITXOR shift  65
                        BITXOR reduce 97  -- dropped by precedence
                        BITAND shift  67
                        BITAND reduce 97  -- dropped by precedence
                        LSHIFT shift  69
                        LSHIFT reduce 97  -- dropped by precedence
                        RSHIFT shift  68
                        RSHIFT reduce 97  -- dropped by precedence
                          PLUS shift  74
                          PLUS reduce 97  -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 97  -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 97  -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 97  -- dropped by precedence
                           MOD shift  70
                           MOD reduce 97  -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 97  -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 97  -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 97  -- dropped by precedence
                     SEMICOLON reduce 97
                        RPAREN reduce 97
                    RSQBRACKET reduce 97
                         COLON reduce 97
                           INC reduce 97
                           DEC reduce 97

State 163:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (96) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 96
                         COMMA reduce 96
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 96
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 96
                            EQ shift  64  -- dropped by precedence
                            EQ reduce 96
                            LE shift  62  -- dropped by precedence
                            LE reduce 96
                            LT shift  61  -- dropped by precedence
                            LT reduce 96
                            GE shift  60  -- dropped by precedence
                            GE reduce 96
                            GT shift  59  -- dropped by precedence
                            GT reduce 96
                            NE shift  63  -- dropped by precedence
                            NE reduce 96
                         BITOR shift  66  -- dropped by precedence
                         BITOR reduce 96
                        BITXOR shift  65  -- dropped by precedence
                        BITXOR reduce 96
                        BITAND shift  67  -- dropped by precedence
                        BITAND reduce 96
                        LSHIFT shift  69
                        LSHIFT reduce 96  -- dropped by precedence
                        RSHIFT shift  68
                        RSHIFT reduce 96  -- dropped by precedence
                          PLUS shift  74
                          PLUS reduce 96  -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 96  -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 96  -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 96  -- dropped by precedence
                           MOD shift  70
                           MOD reduce 96  -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 96  -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 96  -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 96  -- dropped by precedence
                     SEMICOLON reduce 96
                        RPAREN reduce 96
                    RSQBRACKET reduce 96
                         COLON reduce 96
                           INC reduce 96
                           DEC reduce 96

State 164:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (95) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 95
                         COMMA reduce 95
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 95
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 95
                            EQ shift  64  -- dropped by precedence
                            EQ reduce 95
                            LE shift  62  -- dropped by precedence
                            LE reduce 95
                            LT shift  61  -- dropped by precedence
                            LT reduce 95
                            GE shift  60  -- dropped by precedence
                            GE reduce 95
                            GT shift  59  -- dropped by precedence
                            GT reduce 95
                            NE shift  63  -- dropped by precedence
                            NE reduce 95
                         BITOR shift  66  -- dropped by precedence
                         BITOR reduce 95
                        BITXOR shift  65  -- dropped by precedence
                        BITXOR reduce 95
                        BITAND shift  67  -- dropped by precedence
                        BITAND reduce 95
                        LSHIFT shift  69  -- dropped by precedence
                        LSHIFT reduce 95
                        RSHIFT shift  68  -- dropped by precedence
                        RSHIFT reduce 95
                          PLUS shift  74
                          PLUS reduce 95  -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 95  -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 95  -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 95  -- dropped by precedence
                           MOD shift  70
                           MOD reduce 95  -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 95  -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 95  -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 95  -- dropped by precedence
                     SEMICOLON reduce 95
                        RPAREN reduce 95
                    RSQBRACKET reduce 95
                         COLON reduce 95
                           INC reduce 95
                           DEC reduce 95

State 165:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (94) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 94
                         COMMA reduce 94
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 94
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 94
                            EQ shift  64  -- dropped by precedence
                            EQ reduce 94
                            LE shift  62  -- dropped by precedence
                            LE reduce 94
                            LT shift  61  -- dropped by precedence
                            LT reduce 94
                            GE shift  60  -- dropped by precedence
                            GE reduce 94
                            GT shift  59  -- dropped by precedence
                            GT reduce 94
                            NE shift  63  -- dropped by precedence
                            NE reduce 94
                         BITOR shift  66  -- dropped by precedence
                         BITOR reduce 94
                        BITXOR shift  65  -- dropped by precedence
                        BITXOR reduce 94
                        BITAND shift  67  -- dropped by precedence
                        BITAND reduce 94
                        LSHIFT shift  69  -- dropped by precedence
                        LSHIFT reduce 94
                        RSHIFT shift  68  -- dropped by precedence
                        RSHIFT reduce 94
                          PLUS shift  74
                          PLUS reduce 94  -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 94  -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 94  -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 94  -- dropped by precedence
                           MOD shift  70
                           MOD reduce 94  -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 94  -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 94  -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 94  -- dropped by precedence
                     SEMICOLON reduce 94
                        RPAREN reduce 94
                    RSQBRACKET reduce 94
                         COLON reduce 94
                           INC reduce 94
                           DEC reduce 94

State 166:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (93) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 93
                         COMMA reduce 93
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 93
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 93
                            EQ shift  64  -- dropped by precedence
                            EQ reduce 93
                            LE shift  62  -- dropped by precedence
                            LE reduce 93
                            LT shift  61  -- dropped by precedence
                            LT reduce 93
                            GE shift  60  -- dropped by precedence
                            GE reduce 93
                            GT shift  59  -- dropped by precedence
                            GT reduce 93
                            NE shift  63  -- dropped by precedence
                            NE reduce 93
                         BITOR shift  66  -- dropped by precedence
                         BITOR reduce 93
                        BITXOR shift  65  -- dropped by precedence
                        BITXOR reduce 93
                        BITAND shift  67  -- dropped by precedence
                        BITAND reduce 93
                        LSHIFT shift  69  -- dropped by precedence
                        LSHIFT reduce 93
                        RSHIFT shift  68  -- dropped by precedence
                        RSHIFT reduce 93
                          PLUS shift  74  -- dropped by precedence
                          PLUS reduce 93
                         MINUS shift  73  -- dropped by precedence
                         MINUS reduce 93
                        DIVIDE shift  71  -- dropped by precedence
                        DIVIDE reduce 93
                      MULTIPLY shift  72  -- dropped by precedence
                      MULTIPLY reduce 93
                           MOD shift  70  -- dropped by precedence
                           MOD reduce 93
                        LPAREN shift  18
                        LPAREN reduce 93  -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 93  -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 93  -- dropped by precedence
                     SEMICOLON reduce 93
                        RPAREN reduce 93
                    RSQBRACKET reduce 93
                         COLON reduce 93
                           INC reduce 93
                           DEC reduce 93

State 167:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (92) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 92
                         COMMA reduce 92
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 92
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 92
                            EQ shift  64  -- dropped by precedence
                            EQ reduce 92
                            LE shift  62  -- dropped by precedence
                            LE reduce 92
                            LT shift  61  -- dropped by precedence
                            LT reduce 92
                            GE shift  60  -- dropped by precedence
                            GE reduce 92
                            GT shift  59  -- dropped by precedence
                            GT reduce 92
                            NE shift  63  -- dropped by precedence
                            NE reduce 92
                         BITOR shift  66  -- dropped by precedence
                         BITOR reduce 92
                        BITXOR shift  65  -- dropped by precedence
                        BITXOR reduce 92
                        BITAND shift  67  -- dropped by precedence
                        BITAND reduce 92
                        LSHIFT shift  69  -- dropped by precedence
                        LSHIFT reduce 92
                        RSHIFT shift  68  -- dropped by precedence
                        RSHIFT reduce 92
                          PLUS shift  74  -- dropped by precedence
                          PLUS reduce 92
                         MINUS shift  73  -- dropped by precedence
                         MINUS reduce 92
                        DIVIDE shift  71  -- dropped by precedence
                        DIVIDE reduce 92
                      MULTIPLY shift  72  -- dropped by precedence
                      MULTIPLY reduce 92
                           MOD shift  70  -- dropped by precedence
                           MOD reduce 92
                        LPAREN shift  18
                        LPAREN reduce 92  -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 92  -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 92  -- dropped by precedence
                     SEMICOLON reduce 92
                        RPAREN reduce 92
                    RSQBRACKET reduce 92
                         COLON reduce 92
                           INC reduce 92
                           DEC reduce 92

State 168:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (91) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 91
                         COMMA reduce 91
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 91
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 91
                            EQ shift  64  -- dropped by precedence
                            EQ reduce 91
                            LE shift  62  -- dropped by precedence
                            LE reduce 91
                            LT shift  61  -- dropped by precedence
                            LT reduce 91
                            GE shift  60  -- dropped by precedence
                            GE reduce 91
                            GT shift  59  -- dropped by precedence
                            GT reduce 91
                            NE shift  63  -- dropped by precedence
                            NE reduce 91
                         BITOR shift  66  -- dropped by precedence
                         BITOR reduce 91
                        BITXOR shift  65  -- dropped by precedence
                        BITXOR reduce 91
                        BITAND shift  67  -- dropped by precedence
                        BITAND reduce 91
                        LSHIFT shift  69  -- dropped by precedence
                        LSHIFT reduce 91
                        RSHIFT shift  68  -- dropped by precedence
                        RSHIFT reduce 91
                          PLUS shift  74  -- dropped by precedence
                          PLUS reduce 91
                         MINUS shift  73  -- dropped by precedence
                         MINUS reduce 91
                        DIVIDE shift  71  -- dropped by precedence
                        DIVIDE reduce 91
                      MULTIPLY shift  72  -- dropped by precedence
                      MULTIPLY reduce 91
                           MOD shift  70  -- dropped by precedence
                           MOD reduce 91
                        LPAREN shift  18
                        LPAREN reduce 91  -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 91  -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 91  -- dropped by precedence
                     SEMICOLON reduce 91
                        RPAREN reduce 91
                    RSQBRACKET reduce 91
                         COLON reduce 91
                           INC reduce 91
                           DEC reduce 91

State 169:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (90) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 90
                         COMMA reduce 90
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 90
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 90
                            EQ shift  64  -- dropped by precedence
                            EQ reduce 90
                            LE shift  62  -- dropped by precedence
                            LE reduce 90
                            LT shift  61  -- dropped by precedence
                            LT reduce 90
                            GE shift  60  -- dropped by precedence
                            GE reduce 90
                            GT shift  59  -- dropped by precedence
                            GT reduce 90
                            NE shift  63  -- dropped by precedence
                            NE reduce 90
                         BITOR shift  66  -- dropped by precedence
                         BITOR reduce 90
                        BITXOR shift  65  -- dropped by precedence
                        BITXOR reduce 90
                        BITAND shift  67  -- dropped by precedence
                        BITAND reduce 90
                        LSHIFT shift  69  -- dropped by precedence
                        LSHIFT reduce 90
                        RSHIFT shift  68  -- dropped by precedence
                        RSHIFT reduce 90
                          PLUS shift  74  -- dropped by precedence
                          PLUS reduce 90
                         MINUS shift  73  -- dropped by precedence
                         MINUS reduce 90
                        DIVIDE shift  71
                        DIVIDE reduce 90  -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 90  -- dropped by precedence
                           MOD shift  70
                           MOD reduce 90  -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 90  -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 90  -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 90  -- dropped by precedence
                     SEMICOLON reduce 90
                        RPAREN reduce 90
                    RSQBRACKET reduce 90
                         COLON reduce 90
                           INC reduce 90
                           DEC reduce 90

State 170:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
     (89) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76  -- dropped by precedence
                         QMARK reduce 89
                         COMMA reduce 89
                           LOR shift  57  -- dropped by precedence
                           LOR reduce 89
                          LAND shift  58  -- dropped by precedence
                          LAND reduce 89
                            EQ shift  64  -- dropped by precedence
                            EQ reduce 89
                            LE shift  62  -- dropped by precedence
                            LE reduce 89
                            LT shift  61  -- dropped by precedence
                            LT reduce 89
                            GE shift  60  -- dropped by precedence
                            GE reduce 89
                            GT shift  59  -- dropped by precedence
                            GT reduce 89
                            NE shift  63  -- dropped by precedence
                            NE reduce 89
                         BITOR shift  66  -- dropped by precedence
                         BITOR reduce 89
                        BITXOR shift  65  -- dropped by precedence
                        BITXOR reduce 89
                        BITAND shift  67  -- dropped by precedence
                        BITAND reduce 89
                        LSHIFT shift  69  -- dropped by precedence
                        LSHIFT reduce 89
                        RSHIFT shift  68  -- dropped by precedence
                        RSHIFT reduce 89
                          PLUS shift  74  -- dropped by precedence
                          PLUS reduce 89
                         MINUS shift  73  -- dropped by precedence
                         MINUS reduce 89
                        DIVIDE shift  71
                        DIVIDE reduce 89  -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 89  -- dropped by precedence
                           MOD shift  70
                           MOD reduce 89  -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 89  -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 89  -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 89  -- dropped by precedence
                     SEMICOLON reduce 89
                        RPAREN reduce 89
                    RSQBRACKET reduce 89
                         COLON reduce 89
                           INC reduce 89
                           DEC reduce 89

State 171:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
     (88) expr ::= expr QMARK expr COLON expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76
                         QMARK reduce 88  -- dropped by precedence
                         COMMA reduce 88
                           LOR shift  57
                           LOR reduce 88  -- dropped by precedence
                          LAND shift  58
                          LAND reduce 88  -- dropped by precedence
                            EQ shift  64
                            EQ reduce 88  -- dropped by precedence
                            LE shift  62
                            LE reduce 88  -- dropped by precedence
                            LT shift  61
                            LT reduce 88  -- dropped by precedence
                            GE shift  60
                            GE reduce 88  -- dropped by precedence
                            GT shift  59
                            GT reduce 88  -- dropped by precedence
                            NE shift  63
                            NE reduce 88  -- dropped by precedence
                         BITOR shift  66
                         BITOR reduce 88  -- dropped by precedence
                        BITXOR shift  65
                        BITXOR reduce 88  -- dropped by precedence
                        BITAND shift  67
                        BITAND reduce 88  -- dropped by precedence
                        LSHIFT shift  69
                        LSHIFT reduce 88  -- dropped by precedence
                        RSHIFT shift  68
                        RSHIFT reduce 88  -- dropped by precedence
                          PLUS shift  74
                          PLUS reduce 88  -- dropped by precedence
                         MINUS shift  73
                         MINUS reduce 88  -- dropped by precedence
                        DIVIDE shift  71
                        DIVIDE reduce 88  -- dropped by precedence
                      MULTIPLY shift  72
                      MULTIPLY reduce 88  -- dropped by precedence
                           MOD shift  70
                           MOD reduce 88  -- dropped by precedence
                        LPAREN shift  18
                        LPAREN reduce 88  -- dropped by precedence
                    LSQBRACKET shift  78
                    LSQBRACKET reduce 88  -- dropped by precedence
                        PERIOD shift  318
                        PERIOD reduce 88  -- dropped by precedence
                     SEMICOLON reduce 88
                        RPAREN reduce 88
                    RSQBRACKET reduce 88
                         COLON reduce 88
                           INC reduce 88
                           DEC reduce 88

State 172:
     (79) expr ::= LPAREN expr RPAREN *

                         QMARK reduce 79
                         COMMA reduce 79
                           LOR reduce 79
                          LAND reduce 79
                            EQ reduce 79
                            LE reduce 79
                            LT reduce 79
                            GE reduce 79
                            GT reduce 79
                            NE reduce 79
                         BITOR reduce 79
                        BITXOR reduce 79
                        BITAND reduce 79
                        LSHIFT reduce 79
                        RSHIFT reduce 79
                          PLUS reduce 79
                         MINUS reduce 79
                        DIVIDE reduce 79
                      MULTIPLY reduce 79
                           MOD reduce 79
                        LPAREN reduce 79
                    LSQBRACKET reduce 79
                        PERIOD reduce 79
                     SEMICOLON reduce 79
                        RPAREN reduce 79
                    RSQBRACKET reduce 79
                         COLON reduce 79
                           INC reduce 79
                           DEC reduce 79

State 173:
     (69) expr ::= expr LSQBRACKET expr RSQBRACKET *

                         QMARK reduce 69
                         COMMA reduce 69
                           LOR reduce 69
                          LAND reduce 69
                            EQ reduce 69
                            LE reduce 69
                            LT reduce 69
                            GE reduce 69
                            GT reduce 69
                            NE reduce 69
                         BITOR reduce 69
                        BITXOR reduce 69
                        BITAND reduce 69
                        LSHIFT reduce 69
                        RSHIFT reduce 69
                          PLUS reduce 69
                         MINUS reduce 69
                        DIVIDE reduce 69
                      MULTIPLY reduce 69
                           MOD reduce 69
                        LPAREN reduce 69
                    LSQBRACKET reduce 69
                        PERIOD reduce 69
                     SEMICOLON reduce 69
                        RPAREN reduce 69
                    RSQBRACKET reduce 69
                         COLON reduce 69
                           INC reduce 69
                           DEC reduce 69

State 174:
     (68) expr ::= expr PERIOD NAME *

                         QMARK reduce 68
                         COMMA reduce 68
                           LOR reduce 68
                          LAND reduce 68
                            EQ reduce 68
                            LE reduce 68
                            LT reduce 68
                            GE reduce 68
                            GT reduce 68
                            NE reduce 68
                         BITOR reduce 68
                        BITXOR reduce 68
                        BITAND reduce 68
                        LSHIFT reduce 68
                        RSHIFT reduce 68
                          PLUS reduce 68
                         MINUS reduce 68
                        DIVIDE reduce 68
                      MULTIPLY reduce 68
                           MOD reduce 68
                        LPAREN reduce 68
                    LSQBRACKET reduce 68
                        PERIOD reduce 68
                     SEMICOLON reduce 68
                        RPAREN reduce 68
                    RSQBRACKET reduce 68
                         COLON reduce 68
                           INC reduce 68
                           DEC reduce 68

State 175:
     (67) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                         QMARK reduce 67
                         COMMA reduce 67
                           LOR reduce 67
                          LAND reduce 67
                            EQ reduce 67
                            LE reduce 67
                            LT reduce 67
                            GE reduce 67
                            GT reduce 67
                            NE reduce 67
                         BITOR reduce 67
                        BITXOR reduce 67
                        BITAND reduce 67
                        LSHIFT reduce 67
                        RSHIFT reduce 67
                          PLUS reduce 67
                         MINUS reduce 67
                        DIVIDE reduce 67
                      MULTIPLY reduce 67
                           MOD reduce 67
                        LPAREN shift  19
                        LPAREN reduce 67  -- dropped by precedence
                    LSQBRACKET reduce 67
                        PERIOD reduce 67
                     SEMICOLON reduce 67
                        RPAREN reduce 67
                    RSQBRACKET reduce 67
                         COLON reduce 67
                           INC reduce 67
                           DEC reduce 67

State 176:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (78) expr ::= funcexpr *

                         QMARK reduce 78
                         COMMA reduce 78
                           LOR reduce 78
                          LAND reduce 78
                            EQ reduce 78
                            LE reduce 78
                            LT reduce 78
                            GE reduce 78
                            GT reduce 78
                            NE reduce 78
                         BITOR reduce 78
                        BITXOR reduce 78
                        BITAND reduce 78
                        LSHIFT reduce 78
                        RSHIFT reduce 78
                          PLUS reduce 78
                         MINUS reduce 78
                        DIVIDE reduce 78
                      MULTIPLY reduce 78
                           MOD reduce 78
                        LPAREN reduce 78
                    LSQBRACKET shift  324
                    LSQBRACKET reduce 78  -- dropped by precedence
                        PERIOD reduce 78
                     SEMICOLON reduce 78
                        RPAREN reduce 78
                    RSQBRACKET reduce 78
                         COLON reduce 78
                           INC reduce 78
                           DEC reduce 78

State 177:
     (66) expr ::= KILLS *
          expr ::= KILLS * LPAREN fArgs RPAREN

                         QMARK reduce 66
                         COMMA reduce 66
                           LOR reduce 66
                          LAND reduce 66
                            EQ reduce 66
                            LE reduce 66
                            LT reduce 66
                            GE reduce 66
                            GT reduce 66
                            NE reduce 66
                         BITOR reduce 66
                        BITXOR reduce 66
                        BITAND reduce 66
                        LSHIFT reduce 66
                        RSHIFT reduce 66
                          PLUS reduce 66
                         MINUS reduce 66
                        DIVIDE reduce 66
                      MULTIPLY reduce 66
                           MOD reduce 66
                        LPAREN shift  20
                        LPAREN reduce 66  -- dropped by precedence
                    LSQBRACKET reduce 66
                        PERIOD reduce 66
                     SEMICOLON reduce 66
                        RPAREN reduce 66
                    RSQBRACKET reduce 66
                         COLON reduce 66
                           INC reduce 66
                           DEC reduce 66

State 178:
     (65) expr ::= NUMBER *

                         QMARK reduce 65
                         COMMA reduce 65
                           LOR reduce 65
                          LAND reduce 65
                            EQ reduce 65
                            LE reduce 65
                            LT reduce 65
                            GE reduce 65
                            GT reduce 65
                            NE reduce 65
                         BITOR reduce 65
                        BITXOR reduce 65
                        BITAND reduce 65
                        LSHIFT reduce 65
                        RSHIFT reduce 65
                          PLUS reduce 65
                         MINUS reduce 65
                        DIVIDE reduce 65
                      MULTIPLY reduce 65
                           MOD reduce 65
                        LPAREN reduce 65
                    LSQBRACKET reduce 65
                        PERIOD reduce 65
                     SEMICOLON reduce 65
                        RPAREN reduce 65
                    RSQBRACKET reduce 65
                         COLON reduce 65
                           INC reduce 65
                           DEC reduce 65

State 179:
     (60) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                         QMARK reduce 60
                         COMMA reduce 60
                           LOR reduce 60
                          LAND reduce 60
                            EQ reduce 60
                            LE reduce 60
                            LT reduce 60
                            GE reduce 60
                            GT reduce 60
                            NE reduce 60
                         BITOR reduce 60
                        BITXOR reduce 60
                        BITAND reduce 60
                        LSHIFT reduce 60
                        RSHIFT reduce 60
                          PLUS reduce 60
                         MINUS reduce 60
                        DIVIDE reduce 60
                      MULTIPLY reduce 60
                           MOD reduce 60
                        LPAREN reduce 60
                    LSQBRACKET reduce 60
                        PERIOD reduce 60
                     SEMICOLON reduce 60
                        RPAREN reduce 60
                    RSQBRACKET reduce 60
                         COLON reduce 60
                           INC reduce 60
                           DEC reduce 60

State 180:
     (15) fdef_header ::= FUNCTION NAME LPAREN nameList RPAREN *
          fdecl_chunk ::= FUNCTION NAME LPAREN nameList RPAREN * SEMICOLON

                          LNOT reduce 15
                          PLUS reduce 15
                         MINUS reduce 15
                        BITNOT reduce 15
                        LPAREN reduce 15
                    LSQBRACKET reduce 15
                     SEMICOLON shift  218
                     SEMICOLON reduce 15  -- dropped by precedence
                          NAME reduce 15
                      LBRACKET reduce 15
                           VAR reduce 15
                        NUMBER reduce 15
                         KILLS reduce 15
                           L2V reduce 15
                     MAPSTRING reduce 15
                          UNIT reduce 15
                        SWITCH reduce 15
                      LOCATION reduce 15
                         CONST reduce 15
                           INC reduce 15
                           DEC reduce 15
                            IF reduce 15
                         WHILE reduce 15
                           FOR reduce 15
                       FOREACH reduce 15
                      CONTINUE reduce 15
                         BREAK reduce 15
                        RETURN reduce 15
                 CONDITIONNAME reduce 15
                    ACTIONNAME reduce 15

State 181:
     (62) exprList_nonEmpty ::= exprList_nonEmpty COMMA expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76
                         COMMA reduce 62
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 62
                        RPAREN reduce 62
                    RSQBRACKET reduce 62

State 182:
     (61) exprList_nonEmpty ::= expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76
                         COMMA reduce 61
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 61
                        RPAREN reduce 61
                    RSQBRACKET reduce 61

State 183:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (78) expr ::= funcexpr *

                         QMARK reduce 78
                         COMMA reduce 78
                           LOR reduce 78
                          LAND reduce 78
                            EQ reduce 78
                            LE reduce 78
                            LT reduce 78
                            GE reduce 78
                            GT reduce 78
                            NE reduce 78
                         BITOR reduce 78
                        BITXOR reduce 78
                        BITAND reduce 78
                        LSHIFT reduce 78
                        RSHIFT reduce 78
                          PLUS reduce 78
                         MINUS reduce 78
                        DIVIDE reduce 78
                      MULTIPLY reduce 78
                           MOD reduce 78
                        LPAREN reduce 78
                    LSQBRACKET shift  317
                    LSQBRACKET reduce 78  -- dropped by precedence
                        PERIOD reduce 78
                     SEMICOLON reduce 78
                        RPAREN reduce 78
                    RSQBRACKET reduce 78

State 184:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (125) assign_stmt ::= DEC expr *

                         QMARK shift  76
                         COMMA reduce 125
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 125
                        RPAREN reduce 125

State 185:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (123) assign_stmt ::= INC expr *

                         QMARK shift  76
                         COMMA reduce 123
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 123
                        RPAREN reduce 123

State 186:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (136) assign_stmt ::= lvalue IBXR expr *

                         QMARK shift  76
                         COMMA reduce 136
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 136
                        RPAREN reduce 136

State 187:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (135) assign_stmt ::= lvalue IBOR expr *

                         QMARK shift  76
                         COMMA reduce 135
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 135
                        RPAREN reduce 135

State 188:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (134) assign_stmt ::= lvalue IBND expr *

                         QMARK shift  76
                         COMMA reduce 134
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 134
                        RPAREN reduce 134

State 189:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (133) assign_stmt ::= lvalue IRSH expr *

                         QMARK shift  76
                         COMMA reduce 133
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 133
                        RPAREN reduce 133

State 190:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (132) assign_stmt ::= lvalue ILSH expr *

                         QMARK shift  76
                         COMMA reduce 132
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 132
                        RPAREN reduce 132

State 191:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (131) assign_stmt ::= lvalue IMOD expr *

                         QMARK shift  76
                         COMMA reduce 131
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 131
                        RPAREN reduce 131

State 192:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (130) assign_stmt ::= lvalue IDIV expr *

                         QMARK shift  76
                         COMMA reduce 130
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 130
                        RPAREN reduce 130

State 193:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (129) assign_stmt ::= lvalue IMUL expr *

                         QMARK shift  76
                         COMMA reduce 129
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 129
                        RPAREN reduce 129

State 194:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (128) assign_stmt ::= lvalue ISUB expr *

                         QMARK shift  76
                         COMMA reduce 128
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 128
                        RPAREN reduce 128

State 195:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (127) assign_stmt ::= lvalue IADD expr *

                         QMARK shift  76
                         COMMA reduce 127
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 127
                        RPAREN reduce 127

State 196:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (121) assign_stmt ::= lvalue ASSIGN expr *

                         QMARK shift  76
                         COMMA reduce 121
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON reduce 121
                        RPAREN reduce 121

State 197:
     (67) expr ::= NAME *
          fArgs_nonEmpty ::= NAME * ASSIGN expr
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        ASSIGN shift  79
                         QMARK reduce 67
                         COMMA reduce 67
                           LOR reduce 67
                          LAND reduce 67
                            EQ reduce 67
                            LE reduce 67
                            LT reduce 67
                            GE reduce 67
                            GT reduce 67
                            NE reduce 67
                         BITOR reduce 67
                        BITXOR reduce 67
                        BITAND reduce 67
                        LSHIFT reduce 67
                        RSHIFT reduce 67
                          PLUS reduce 67
                         MINUS reduce 67
                        DIVIDE reduce 67
                      MULTIPLY reduce 67
                           MOD reduce 67
                        LPAREN shift  19
                        LPAREN reduce 67  -- dropped by precedence
                    LSQBRACKET reduce 67
                        PERIOD reduce 67
                        RPAREN reduce 67

State 198:
          bodyStmt ::= funcexpr * SEMICOLON
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (78) expr ::= funcexpr *

                         QMARK reduce 78
                           LOR reduce 78
                          LAND reduce 78
                            EQ reduce 78
                            LE reduce 78
                            LT reduce 78
                            GE reduce 78
                            GT reduce 78
                            NE reduce 78
                         BITOR reduce 78
                        BITXOR reduce 78
                        BITAND reduce 78
                        LSHIFT reduce 78
                        RSHIFT reduce 78
                          PLUS reduce 78
                         MINUS reduce 78
                        DIVIDE reduce 78
                      MULTIPLY reduce 78
                           MOD reduce 78
                        LPAREN reduce 78
                    LSQBRACKET shift  324
                    LSQBRACKET reduce 78  -- dropped by precedence
                        PERIOD reduce 78
                     SEMICOLON shift  118
                           INC reduce 78
                           DEC reduce 78

State 199:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          lvalue ::= expr * LSQBRACKET expr RSQBRACKET
          lvalue ::= expr * PERIOD NAME
          assign_stmt ::= expr * INC
          assign_stmt ::= expr * DEC

                         QMARK shift  76
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  51
                        PERIOD shift  295
                           INC shift  240
                           DEC shift  239

State 200:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (72) fArgs_nonEmpty ::= NAME ASSIGN expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76
                         COMMA reduce 72
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                        RPAREN reduce 72

State 201:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (70) fArgs_nonEmpty ::= expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76
                         COMMA reduce 70
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                        RPAREN reduce 70

State 202:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          for_header2 ::= for_header1 expr * SEMICOLON

                         QMARK shift  76
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                     SEMICOLON shift  213

State 203:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          while_header ::= while_start LPAREN expr * RPAREN

                         QMARK shift  76
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                        RPAREN shift  141

State 204:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          elif_header ::= elif_start LPAREN expr * RPAREN

                         QMARK shift  76
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                        RPAREN shift  142

State 205:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          if_header ::= if_start LPAREN expr * RPAREN

                         QMARK shift  76
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                        RPAREN shift  144

State 206:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          lvalue ::= expr LSQBRACKET expr * RSQBRACKET

                         QMARK shift  76
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                    RSQBRACKET shift  94

State 207:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= L2V LPAREN expr * RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                        RPAREN shift  158

State 208:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr QMARK expr * COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                         COLON shift  75

State 209:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                        RPAREN shift  172

State 210:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  76
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  78
                        PERIOD shift  318
                    RSQBRACKET shift  173

State 211:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * LT expr
          expr ::= expr * GE expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          lvalue ::= expr * LSQBRACKET expr RSQBRACKET
          lvalue ::= expr * PERIOD NAME

                         QMARK shift  76
                           LOR shift  57
                          LAND shift  58
                            EQ shift  64
                            LE shift  62
                            LT shift  61
                            GE shift  60
                            GT shift  59
                            NE shift  63
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        LPAREN shift  18
                    LSQBRACKET shift  51
                        PERIOD shift  295

State 212:
    (149) for_opener ::= FOR LPAREN *

                          LNOT reduce 149
                          PLUS reduce 149
                         MINUS reduce 149
                        BITNOT reduce 149
                        LPAREN reduce 149
                    LSQBRACKET reduce 149
                     SEMICOLON reduce 149
                          NAME reduce 149
                           VAR reduce 149
                        NUMBER reduce 149
                         KILLS reduce 149
                           L2V reduce 149
                     MAPSTRING reduce 149
                          UNIT reduce 149
                        SWITCH reduce 149
                      LOCATION reduce 149
                         CONST reduce 149
                           INC reduce 149
                           DEC reduce 149
                 CONDITIONNAME reduce 149

State 213:
    (162) for_header2 ::= for_header1 expr SEMICOLON *

                          LNOT reduce 162
                          PLUS reduce 162
                         MINUS reduce 162
                        BITNOT reduce 162
                        LPAREN reduce 162
                    LSQBRACKET reduce 162
                          NAME reduce 162
                        RPAREN reduce 162
                        NUMBER reduce 162
                         KILLS reduce 162
                           L2V reduce 162
                     MAPSTRING reduce 162
                          UNIT reduce 162
                        SWITCH reduce 162
                      LOCATION reduce 162
                           INC reduce 162
                           DEC reduce 162
                 CONDITIONNAME reduce 162

State 214:
    (161) for_header1 ::= for_opener for_init_stmt SEMICOLON *

                          LNOT reduce 161
                          PLUS reduce 161
                         MINUS reduce 161
                        BITNOT reduce 161
                        LPAREN reduce 161
                    LSQBRACKET reduce 161
                          NAME reduce 161
                        NUMBER reduce 161
                         KILLS reduce 161
                           L2V reduce 161
                     MAPSTRING reduce 161
                          UNIT reduce 161
                        SWITCH reduce 161
                      LOCATION reduce 161
                 CONDITIONNAME reduce 161

State 215:
    (119) lvalueList_nonEmpty ::= lvalue *
          assign_stmt ::= lvalue * ASSIGN expr
          assign_stmt ::= lvalue * IADD expr
          assign_stmt ::= lvalue * ISUB expr
          assign_stmt ::= lvalue * IMUL expr
          assign_stmt ::= lvalue * IDIV expr
          assign_stmt ::= lvalue * IMOD expr
          assign_stmt ::= lvalue * ILSH expr
          assign_stmt ::= lvalue * IRSH expr
          assign_stmt ::= lvalue * IBND expr
          assign_stmt ::= lvalue * IBOR expr
          assign_stmt ::= lvalue * IBXR expr

                        ASSIGN shift  49
                        ASSIGN reduce 119 -- dropped by precedence
                         COMMA reduce 119
                          IADD shift  48
                          ISUB shift  47
                          IMUL shift  46
                          IDIV shift  45
                          IMOD shift  44
                          ILSH shift  43
                          IRSH shift  42
                          IBND shift  41
                          IBOR shift  40
                          IBXR shift  39

State 216:
     (24) object_chunk ::= object_body RBRACKET SEMICOLON *

                             $ reduce 24
                        IMPORT reduce 24
                      FUNCTION reduce 24
                        OBJECT reduce 24
                      LBRACKET reduce 24
                           VAR reduce 24
                         CONST reduce 24

State 217:
     (16) fdef_chunk ::= fdef_header stmt *

                             $ reduce 16
                        IMPORT reduce 16
                      FUNCTION reduce 16
                        OBJECT reduce 16
                      LBRACKET reduce 16
                           VAR reduce 16
                         CONST reduce 16

State 218:
     (17) fdecl_chunk ::= FUNCTION NAME LPAREN nameList RPAREN SEMICOLON *

                             $ reduce 17
                        IMPORT reduce 17
                      FUNCTION reduce 17
                        OBJECT reduce 17
                      LBRACKET reduce 17
                           VAR reduce 17
                         CONST reduce 17

State 219:
     (10) chunk ::= blockStmt *

                             $ reduce 10
                        IMPORT reduce 10
                      FUNCTION reduce 10
                        OBJECT reduce 10
                      LBRACKET reduce 10
                           VAR reduce 10
                         CONST reduce 10

State 220:
      (9) chunk ::= cdef_global_stmt SEMICOLON *

                             $ reduce 9
                        IMPORT reduce 9
                      FUNCTION reduce 9
                        OBJECT reduce 9
                      LBRACKET reduce 9
                           VAR reduce 9
                         CONST reduce 9

State 221:
      (8) chunk ::= vdefAssign_global_stmt SEMICOLON *

                             $ reduce 8
                        IMPORT reduce 8
                      FUNCTION reduce 8
                        OBJECT reduce 8
                      LBRACKET reduce 8
                           VAR reduce 8
                         CONST reduce 8

State 222:
      (7) chunk ::= vdef_stmt SEMICOLON *

                             $ reduce 7
                        IMPORT reduce 7
                      FUNCTION reduce 7
                        OBJECT reduce 7
                      LBRACKET reduce 7
                           VAR reduce 7
                         CONST reduce 7

State 223:
      (6) chunk ::= object_chunk *

                             $ reduce 6
                        IMPORT reduce 6
                      FUNCTION reduce 6
                        OBJECT reduce 6
                      LBRACKET reduce 6
                           VAR reduce 6
                         CONST reduce 6

State 224:
      (5) chunk ::= fdecl_chunk *

                             $ reduce 5
                        IMPORT reduce 5
                      FUNCTION reduce 5
                        OBJECT reduce 5
                      LBRACKET reduce 5
                           VAR reduce 5
                         CONST reduce 5

State 225:
      (4) chunk ::= fdef_chunk *

                             $ reduce 4
                        IMPORT reduce 4
                      FUNCTION reduce 4
                        OBJECT reduce 4
                      LBRACKET reduce 4
                           VAR reduce 4
                         CONST reduce 4

State 226:
      (3) chunk ::= import_chunk SEMICOLON *

                             $ reduce 3
                        IMPORT reduce 3
                      FUNCTION reduce 3
                        OBJECT reduce 3
                      LBRACKET reduce 3
                           VAR reduce 3
                         CONST reduce 3

State 227:
      (2) chunks ::= chunks chunk *

                             $ reduce 2
                        IMPORT reduce 2
                      FUNCTION reduce 2
                        OBJECT reduce 2
                      LBRACKET reduce 2
                           VAR reduce 2
                         CONST reduce 2

State 228:
     (56) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                        ASSIGN reduce 56
                         COMMA reduce 56
                     SEMICOLON reduce 56
                        RPAREN reduce 56
                         COLON reduce 56

State 229:
     (55) nameList_nonEmpty ::= NAME *

                        ASSIGN reduce 55
                         COMMA reduce 55
                     SEMICOLON reduce 55
                        RPAREN reduce 55
                         COLON reduce 55

State 230:
     (59) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                         COMMA reduce 59
                     SEMICOLON reduce 59
                        RPAREN reduce 59
                    RSQBRACKET reduce 59

State 231:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (111) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  25
                         COMMA shift  333
                     SEMICOLON reduce 111

State 232:
     (23) object_body ::= object_body method_chunk *

                      FUNCTION reduce 23
                           VAR reduce 23
                      RBRACKET reduce 23

State 233:
     (22) method_chunk ::= method_header stmt *

                      FUNCTION reduce 22
                           VAR reduce 22
                      RBRACKET reduce 22

State 234:
     (20) object_body ::= object_body VAR nameList_nonEmpty SEMICOLON *

                      FUNCTION reduce 20
                           VAR reduce 20
                      RBRACKET reduce 20

State 235:
     (19) object_body ::= object_header *

                      FUNCTION reduce 19
                           VAR reduce 19
                      RBRACKET reduce 19

State 236:
     (18) object_header ::= OBJECT NAME LBRACKET *

                      FUNCTION reduce 18
                           VAR reduce 18
                      RBRACKET reduce 18

State 237:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (122) assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  50
                         COMMA reduce 122 -- dropped by precedence
                     SEMICOLON reduce 122
                        RPAREN reduce 122

State 238:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (111) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  30
                         COMMA shift  333
                         COMMA reduce 111 -- dropped by precedence
                     SEMICOLON reduce 111

State 239:
    (126) assign_stmt ::= expr DEC *

                         COMMA reduce 126
                     SEMICOLON reduce 126
                        RPAREN reduce 126

State 240:
    (124) assign_stmt ::= expr INC *

                         COMMA reduce 124
                     SEMICOLON reduce 124
                        RPAREN reduce 124

State 241:
     (12) dottedName ::= dottedName PERIOD NAME *

                        PERIOD reduce 12
                     SEMICOLON reduce 12
                            AS reduce 12

State 242:
          dottedName ::= dottedName * PERIOD NAME
          import_chunk ::= IMPORT dottedName * AS NAME
     (14) import_chunk ::= IMPORT dottedName *

                        PERIOD shift  339
                     SEMICOLON reduce 14
                            AS shift  338

State 243:
     (11) dottedName ::= NAME *

                        PERIOD reduce 11
                     SEMICOLON reduce 11
                            AS reduce 11

State 244:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (115) cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  50
                     SEMICOLON reduce 115

State 245:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_global_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  24
                         COMMA shift  333

State 246:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (113) vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  50
                     SEMICOLON reduce 113

State 247:
          object_body ::= object_body VAR nameList_nonEmpty * SEMICOLON
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  333
                     SEMICOLON shift  234

State 248:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
     (64) exprList ::= exprList_nonEmpty *

                         COMMA shift  50
                     SEMICOLON reduce 64

State 249:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty * RPAREN

                         COMMA shift  50
                        RPAREN shift  139

State 250:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= foreach_opener nameList_nonEmpty * COLON exprList_nonEmpty RPAREN

                         COMMA shift  333
                         COLON shift  26

State 251:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (158) for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty *

                         COMMA shift  15  -- dropped by precedence
                         COMMA reduce 158
                        RPAREN reduce 158

State 252:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (160) for_action_stmt ::= for_action_stmt_nonEmpty *

                         COMMA shift  15
                        RPAREN reduce 160

State 253:
    (157) for_action_stmt_nonEmpty ::= assign_stmt *

                         COMMA reduce 157
                        RPAREN reduce 157

State 254:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (154) for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty *

                         COMMA shift  13  -- dropped by precedence
                         COMMA reduce 154
                     SEMICOLON reduce 154

State 255:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (155) for_init_stmt ::= for_init_stmt_nonEmpty *

                         COMMA shift  13
                     SEMICOLON reduce 155

State 256:
    (153) for_init_stmt_nonEmpty ::= assign_stmt *

                         COMMA reduce 153
                     SEMICOLON reduce 153

State 257:
    (152) for_init_stmt_nonEmpty ::= cdef_stmt *

                         COMMA reduce 152
                     SEMICOLON reduce 152

State 258:
    (151) for_init_stmt_nonEmpty ::= vdefAssign_stmt *

                         COMMA reduce 151
                     SEMICOLON reduce 151

State 259:
    (150) for_init_stmt_nonEmpty ::= vdef_stmt *

                         COMMA reduce 150
                     SEMICOLON reduce 150

State 260:
    (120) lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA lvalue *

                        ASSIGN reduce 120
                         COMMA reduce 120

State 261:
          lvalueList_nonEmpty ::= lvalueList_nonEmpty * COMMA lvalue
          assign_stmt ::= lvalueList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  27
                         COMMA shift  28

State 262:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (114) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  50
                         COMMA reduce 114 -- dropped by precedence
                     SEMICOLON reduce 114

State 263:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  29
                         COMMA shift  333

State 264:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (112) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  50
                         COMMA reduce 112 -- dropped by precedence
                     SEMICOLON reduce 112

State 265:
     (54) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                         COMMA reduce 54
                    RSQBRACKET reduce 54

State 266:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  316
                    RSQBRACKET shift  315

State 267:
     (53) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                         COMMA reduce 53
                    RSQBRACKET shift  321
                    RSQBRACKET reduce 53  -- dropped by precedence

State 268:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (73) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArgs_nonEmpty *

                         COMMA shift  23  -- dropped by precedence
                         COMMA reduce 73
                        RPAREN reduce 73

State 269:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (75) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  23
                        RPAREN reduce 75

State 270:
     (71) fArgs_nonEmpty ::= STRING *

                         COMMA reduce 71
                        RPAREN reduce 71

State 271:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
     (58) nameList ::= nameList_nonEmpty *

                         COMMA shift  333
                        RPAREN reduce 58

State 272:
          object_chunk ::= object_body RBRACKET * SEMICOLON

                     SEMICOLON shift  216

State 273:
          method_header ::= FUNCTION NAME LPAREN nameList * RPAREN

                        RPAREN shift  138

State 274:
          method_header ::= FUNCTION NAME * LPAREN nameList RPAREN

                        LPAREN shift  81

State 275:
          method_header ::= FUNCTION * NAME LPAREN nameList RPAREN

                          NAME shift  274

State 276:
          object_header ::= OBJECT NAME * LBRACKET

                      LBRACKET shift  236

State 277:
          object_header ::= OBJECT * NAME LBRACKET

                          NAME shift  276

State 278:
          actionStmt ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  99

State 279:
          actionStmt ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                        RPAREN shift  278

State 280:
          actionStmt ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  16

State 281:
    (170) return_stmt ::= RETURN exprList *

                     SEMICOLON reduce 170

State 282:
    (169) break_stmt ::= BREAK *

                     SEMICOLON reduce 169

State 283:
    (168) continue_stmt ::= CONTINUE *

                     SEMICOLON reduce 168

State 284:
    (165) foreach_opener ::= FOREACH LPAREN *

                          NAME reduce 165

State 285:
          foreach_opener ::= FOREACH * LPAREN

                        LPAREN shift  284

State 286:
          for_header ::= for_header2 for_action_stmt * RPAREN

                        RPAREN shift  140

State 287:
          for_header1 ::= for_opener for_init_stmt * SEMICOLON

                     SEMICOLON shift  214

State 288:
          for_opener ::= FOR * LPAREN

                        LPAREN shift  212

State 289:
          while_header ::= while_start * LPAREN expr RPAREN

                        LPAREN shift  34

State 290:
    (146) while_start ::= WHILE *

                        LPAREN reduce 146

State 291:
          elif_header ::= elif_start * LPAREN expr RPAREN

                        LPAREN shift  35

State 292:
    (140) elif_start ::= ELSE IF *

                        LPAREN reduce 140

State 293:
          if_header ::= if_start * LPAREN expr RPAREN

                        LPAREN shift  36

State 294:
    (137) if_start ::= IF *

                        LPAREN reduce 137

State 295:
          expr ::= expr PERIOD * NAME
          lvalue ::= expr PERIOD * NAME

                          NAME shift  95

State 296:
          expr ::= KILLS LPAREN fArgs * RPAREN

                        RPAREN shift  145

State 297:
          funcexpr ::= NAME LPAREN fArgs * RPAREN

                        RPAREN shift  146

State 298:
          funcexpr ::= expr LPAREN fArgs * RPAREN

                        RPAREN shift  147

State 299:
          expr ::= LSQBRACKET exprList_nonEmpty commaSkippable * RSQBRACKET

                    RSQBRACKET shift  148

State 300:
          expr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  149

State 301:
          expr ::= CONDITIONNAME * LPAREN fArgs RPAREN

                        LPAREN shift  17

State 302:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  154

State 303:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  302

State 304:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  303

State 305:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  155

State 306:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  305

State 307:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  306

State 308:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  156

State 309:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  308

State 310:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  309

State 311:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  157

State 312:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  311

State 313:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  312

State 314:
          expr ::= L2V * LPAREN expr RPAREN

                        LPAREN shift  56

State 315:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  230

State 316:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  265

State 317:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  90

State 318:
          expr ::= expr PERIOD * NAME

                          NAME shift  174

State 319:
          bodyStmt ::= break_stmt * SEMICOLON

                     SEMICOLON shift  111

State 320:
          bodyStmt ::= continue_stmt * SEMICOLON

                     SEMICOLON shift  112

State 321:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  179

State 322:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  321

State 323:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  322

State 324:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  323

State 325:
          bodyStmt ::= assign_stmt * SEMICOLON

                     SEMICOLON shift  119

State 326:
          bodyStmt ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  120

State 327:
          bodyStmt ::= vdefAssign_stmt * SEMICOLON

                     SEMICOLON shift  121

State 328:
          bodyStmt ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  122

State 329:
          blockStmt ::= lbracket bodyStmtList return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  91

State 330:
          blockStmt ::= lbracket return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  92

State 331:
          stmt ::= return_stmt * SEMICOLON

                     SEMICOLON shift  130

State 332:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  132

State 333:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  228

State 334:
          fdef_header ::= FUNCTION NAME LPAREN nameList * RPAREN
          fdecl_chunk ::= FUNCTION NAME LPAREN nameList * RPAREN SEMICOLON

                        RPAREN shift  180

State 335:
          fdef_header ::= FUNCTION NAME * LPAREN nameList RPAREN
          fdecl_chunk ::= FUNCTION NAME * LPAREN nameList RPAREN SEMICOLON

                        LPAREN shift  82

State 336:
          fdef_header ::= FUNCTION * NAME LPAREN nameList RPAREN
          fdecl_chunk ::= FUNCTION * NAME LPAREN nameList RPAREN SEMICOLON

                          NAME shift  335

State 337:
     (13) import_chunk ::= IMPORT dottedName AS NAME *

                     SEMICOLON reduce 13

State 338:
          import_chunk ::= IMPORT dottedName AS * NAME

                          NAME shift  337

State 339:
          dottedName ::= dottedName PERIOD * NAME

                          NAME shift  241

State 340:
          chunk ::= cdef_global_stmt * SEMICOLON

                     SEMICOLON shift  220

State 341:
          chunk ::= vdefAssign_global_stmt * SEMICOLON

                     SEMICOLON shift  221

State 342:
          chunk ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  222

State 343:
          chunk ::= import_chunk * SEMICOLON

                     SEMICOLON shift  226

----------------------------------------------------
Symbols:
    0: $:
    1: IFX
    2: ELSE
    3: ASSIGN
    4: QMARK
    5: COMMA
    6: LOR
    7: LAND
    8: LNOT
    9: EQ
   10: LE
   11: LT
   12: GE
   13: GT
   14: NE
   15: BITOR
   16: BITXOR
   17: BITAND
   18: LSHIFT
   19: RSHIFT
   20: PLUS
   21: MINUS
   22: DIVIDE
   23: MULTIPLY
   24: MOD
   25: UNARY
   26: BITNOT
   27: LPAREN
   28: LSQBRACKET
   29: PERIOD
   30: SEMICOLON
   31: NAME
   32: IMPORT
   33: AS
   34: FUNCTION
   35: RPAREN
   36: OBJECT
   37: LBRACKET
   38: VAR
   39: RBRACKET
   40: NUMBER
   41: RSQBRACKET
   42: SUBSCRIPT
   43: KILLS
   44: MEMBER
   45: STRING
   46: FUNCCALL
   47: L2V
   48: MAPSTRING
   49: UNIT
   50: SWITCH
   51: LOCATION
   52: COLON
   53: CONST
   54: INC
   55: DEC
   56: IADD
   57: ISUB
   58: IMUL
   59: IDIV
   60: IMOD
   61: ILSH
   62: IRSH
   63: IBND
   64: IBOR
   65: IBXR
   66: IF
   67: WHILE
   68: FOR
   69: FOREACH
   70: CONTINUE
   71: BREAK
   72: RETURN
   73: CONDITIONNAME
   74: ACTIONNAME
   75: error:
   76: nt:
   77: program: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   78: chunks: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   79: chunk: IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   80: import_chunk: IMPORT
   81: fdef_chunk: FUNCTION
   82: fdecl_chunk: FUNCTION
   83: object_chunk: OBJECT
   84: vdef_stmt: VAR
   85: vdefAssign_global_stmt: VAR
   86: cdef_global_stmt: CONST
   87: blockStmt: LBRACKET
   88: dottedName: NAME
   89: fdef_header: FUNCTION
   90: nameList: <lambda> NAME
   91: stmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK RETURN CONDITIONNAME ACTIONNAME
   92: object_header: OBJECT
   93: object_body: OBJECT
   94: nameList_nonEmpty: NAME
   95: method_header: FUNCTION
   96: method_chunk: FUNCTION
   97: bodyStmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK CONDITIONNAME ACTIONNAME
   98: return_stmt: RETURN
   99: lbracket: LBRACKET
  100: rbracket: RBRACKET
  101: bodyStmtList: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK CONDITIONNAME ACTIONNAME
  102: vdefAssign_stmt: VAR
  103: cdef_stmt: CONST
  104: assign_stmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC CONDITIONNAME
  105: funcexpr: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
  106: actionStmt: ACTIONNAME
  107: if_stmt: IF
  108: while_stmt: WHILE
  109: for_stmt: FOR
  110: foreach_stmt: FOREACH
  111: continue_stmt: CONTINUE
  112: break_stmt: BREAK
  113: numList_nonEmpty: NUMBER
  114: exprList_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
  115: expr: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
  116: exprList: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
  117: fArgs_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME NUMBER KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
  118: fArgs: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME NUMBER KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
  119: commaSkippable: <lambda> COMMA
  120: lvalue: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
  121: lvalueList_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
  122: if_start: IF
  123: if_header: IF
  124: if_block: IF
  125: elif_start: ELSE
  126: elif_header: ELSE
  127: else_header: ELSE
  128: while_start: WHILE
  129: while_header: WHILE
  130: for_opener: FOR
  131: for_init_stmt_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC CONDITIONNAME
  132: for_init_stmt: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC CONDITIONNAME
  133: for_action_stmt_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC CONDITIONNAME
  134: for_action_stmt: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC CONDITIONNAME
  135: for_header1: FOR
  136: for_header2: FOR
  137: for_header: FOR
  138: foreach_opener: FOREACH
  139: foreach_header: FOREACH
