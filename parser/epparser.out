State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  9
                     {default} reduce 1

State 1:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  92
                     SEMICOLON shift  210
                      LBRACKET shift  216
                           VAR shift  55
                         CONST shift  54
                            IF shift  166
                         WHILE shift  160
                           FOR shift  103
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  13
                    ACTIONNAME shift  98
                         error shift  141
                     vdef_stmt shift  209
                     cdef_stmt shift  207
             nameList_nonEmpty shift  91
                          stmt shift  149
                      bodyStmt shift  218
                   return_stmt shift  217
                      lbracket shift  8
               vdefAssign_stmt shift  208
                   assign_stmt shift  206
                      funcexpr shift  140
                    actionStmt shift  204
                       if_stmt shift  203
                    while_stmt shift  202
                  foreach_stmt shift  201
                 continue_stmt shift  200
                    break_stmt shift  199
                      funcName shift  126
                      if_start shift  107
                     if_header shift  5
                      if_block shift  48
                   while_start shift  104
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 2:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  92
                     SEMICOLON shift  210
                      LBRACKET shift  216
                           VAR shift  55
                         CONST shift  54
                            IF shift  166
                         WHILE shift  160
                           FOR shift  103
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  13
                    ACTIONNAME shift  98
                         error shift  141
                     vdef_stmt shift  209
                     cdef_stmt shift  207
             nameList_nonEmpty shift  91
                          stmt shift  156
                      bodyStmt shift  218
                   return_stmt shift  217
                      lbracket shift  8
               vdefAssign_stmt shift  208
                   assign_stmt shift  206
                      funcexpr shift  140
                    actionStmt shift  204
                       if_stmt shift  203
                    while_stmt shift  202
                  foreach_stmt shift  201
                 continue_stmt shift  200
                    break_stmt shift  199
                      funcName shift  126
                      if_start shift  107
                     if_header shift  5
                      if_block shift  48
                   while_start shift  104
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 3:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  92
                     SEMICOLON shift  210
                      LBRACKET shift  216
                           VAR shift  55
                         CONST shift  54
                            IF shift  166
                         WHILE shift  160
                           FOR shift  103
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  13
                    ACTIONNAME shift  98
                         error shift  141
                     vdef_stmt shift  209
                     cdef_stmt shift  207
             nameList_nonEmpty shift  91
                          stmt shift  158
                      bodyStmt shift  218
                   return_stmt shift  217
                      lbracket shift  8
               vdefAssign_stmt shift  208
                   assign_stmt shift  206
                      funcexpr shift  140
                    actionStmt shift  204
                       if_stmt shift  203
                    while_stmt shift  202
                  foreach_stmt shift  201
                 continue_stmt shift  200
                    break_stmt shift  199
                      funcName shift  126
                      if_start shift  107
                     if_header shift  5
                      if_block shift  48
                   while_start shift  104
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  92
                     SEMICOLON shift  210
                      LBRACKET shift  216
                           VAR shift  55
                         CONST shift  54
                            IF shift  166
                         WHILE shift  160
                           FOR shift  103
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  13
                    ACTIONNAME shift  98
                         error shift  141
                     vdef_stmt shift  209
                     cdef_stmt shift  207
             nameList_nonEmpty shift  91
                          stmt shift  161
                      bodyStmt shift  218
                   return_stmt shift  217
                      lbracket shift  8
               vdefAssign_stmt shift  208
                   assign_stmt shift  206
                      funcexpr shift  140
                    actionStmt shift  204
                       if_stmt shift  203
                    while_stmt shift  202
                  foreach_stmt shift  201
                 continue_stmt shift  200
                    break_stmt shift  199
                      funcName shift  126
                      if_start shift  107
                     if_header shift  5
                      if_block shift  48
                   while_start shift  104
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  92
                     SEMICOLON shift  210
                      LBRACKET shift  216
                           VAR shift  55
                         CONST shift  54
                            IF shift  166
                         WHILE shift  160
                           FOR shift  103
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  13
                    ACTIONNAME shift  98
                         error shift  141
                     vdef_stmt shift  209
                     cdef_stmt shift  207
             nameList_nonEmpty shift  91
                          stmt shift  164
                      bodyStmt shift  218
                   return_stmt shift  217
                      lbracket shift  8
               vdefAssign_stmt shift  208
                   assign_stmt shift  206
                      funcexpr shift  140
                    actionStmt shift  204
                       if_stmt shift  203
                    while_stmt shift  202
                  foreach_stmt shift  201
                 continue_stmt shift  200
                    break_stmt shift  199
                      funcName shift  126
                      if_start shift  107
                     if_header shift  5
                      if_block shift  48
                   while_start shift  104
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 6:
          fdef_chunk ::= function_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  92
                     SEMICOLON shift  210
                      LBRACKET shift  216
                           VAR shift  55
                         CONST shift  54
                            IF shift  166
                         WHILE shift  160
                           FOR shift  103
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  13
                    ACTIONNAME shift  98
                         error shift  141
                     vdef_stmt shift  209
                     cdef_stmt shift  207
             nameList_nonEmpty shift  91
                          stmt shift  220
                      bodyStmt shift  218
                   return_stmt shift  217
                      lbracket shift  8
               vdefAssign_stmt shift  208
                   assign_stmt shift  206
                      funcexpr shift  140
                    actionStmt shift  204
                       if_stmt shift  203
                    while_stmt shift  202
                  foreach_stmt shift  201
                 continue_stmt shift  200
                    break_stmt shift  199
                      funcName shift  126
                      if_start shift  107
                     if_header shift  5
                      if_block shift  48
                   while_start shift  104
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 7:
          rbracket ::= * RBRACKET
          stmt ::= lbracket bodyStmtList * rbracket
          stmt ::= lbracket bodyStmtList * return_stmt rbracket
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  92
                     SEMICOLON shift  210
                      RBRACKET shift  214
                           VAR shift  55
                         CONST shift  54
                            IF shift  166
                         WHILE shift  160
                           FOR shift  103
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  13
                    ACTIONNAME shift  98
                         error shift  197
                     vdef_stmt shift  209
                     cdef_stmt shift  207
             nameList_nonEmpty shift  91
                      bodyStmt shift  198
                   return_stmt shift  57
                      rbracket shift  212
               vdefAssign_stmt shift  208
                   assign_stmt shift  206
                      funcexpr shift  140
                    actionStmt shift  204
                       if_stmt shift  203
                    while_stmt shift  202
                  foreach_stmt shift  201
                 continue_stmt shift  200
                    break_stmt shift  199
                      funcName shift  126
                      if_start shift  107
                     if_header shift  5
                      if_block shift  48
                   while_start shift  104
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 8:
          stmt ::= lbracket * RBRACKET
          stmt ::= lbracket * return_stmt rbracket
          stmt ::= lbracket * bodyStmtList rbracket
          stmt ::= lbracket * bodyStmtList return_stmt rbracket
          stmt ::= lbracket * error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  92
                     SEMICOLON shift  210
                      RBRACKET shift  215
                           VAR shift  55
                         CONST shift  54
                            IF shift  166
                         WHILE shift  160
                           FOR shift  103
                      CONTINUE shift  102
                         BREAK shift  101
                        RETURN shift  13
                    ACTIONNAME shift  98
                         error shift  95
                     vdef_stmt shift  209
                     cdef_stmt shift  207
             nameList_nonEmpty shift  91
                      bodyStmt shift  147
                   return_stmt shift  58
                  bodyStmtList shift  7
               vdefAssign_stmt shift  208
                   assign_stmt shift  206
                      funcexpr shift  140
                    actionStmt shift  204
                       if_stmt shift  203
                    while_stmt shift  202
                  foreach_stmt shift  201
                 continue_stmt shift  200
                    break_stmt shift  199
                      funcName shift  126
                      if_start shift  107
                     if_header shift  5
                      if_block shift  48
                   while_start shift  104
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 9:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunk ::= * import_chunk
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * cdef_stmt
          import_chunk ::= * FROM NAME IMPORT nameList_nonEmpty SEMICOLON
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList_nonEmpty RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON

                             $ reduce 0
                          FROM shift  146
                      FUNCTION shift  143
                           VAR shift  50
                         CONST shift  54
                         chunk shift  231
                  import_chunk shift  230
                    fdef_chunk shift  229
                     vdef_stmt shift  228
                     cdef_stmt shift  227
                function_start shift  142
               function_header shift  6

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (53) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                        RPAREN shift  174
                        RPAREN reduce 53  ** Parsing conflict **
                        STRING shift  177
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  68
                fArgs_nonEmpty shift  110
                         fArgs shift  109
                      funcName shift  126

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (53) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                        STRING shift  177
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  68
                fArgs_nonEmpty shift  110
                         fArgs shift  97
                      funcName shift  126
                     {default} reduce 53

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (53) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          funcexpr ::= funcName LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                        STRING shift  177
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  68
                fArgs_nonEmpty shift  110
                         fArgs shift  108
                      funcName shift  126
                     {default} reduce 53

State 13:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
     (45) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * exprList SEMICOLON

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  138
             exprList_nonEmpty shift  100
                          expr shift  69
                      exprList shift  99
                      funcName shift  126
                     {default} reduce 45

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                 CONDITIONNAME shift  111
                      funcexpr shift  132
                          expr shift  60
                      funcName shift  126
                         lexpr shift  75

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                 CONDITIONNAME shift  111
                      funcexpr shift  132
                          expr shift  60
                      funcName shift  126
                         lexpr shift  76

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                 CONDITIONNAME shift  111
                      funcexpr shift  132
                          expr shift  60
                      funcName shift  126
                         lexpr shift  77

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                 CONDITIONNAME shift  111
                      funcexpr shift  132
                          expr shift  60
                      funcName shift  126
                         lexpr shift  178

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                 CONDITIONNAME shift  111
                      funcexpr shift  132
                          expr shift  60
                      funcName shift  126
                         lexpr shift  179

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                 CONDITIONNAME shift  111
                      funcexpr shift  132
                          expr shift  60
                      funcName shift  126
                         lexpr shift  112

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                 CONDITIONNAME shift  111
                      funcexpr shift  132
                          expr shift  60
                      funcName shift  126
                         lexpr shift  180

State 21:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= L2V LPAREN * lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  18
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                 CONDITIONNAME shift  111
                      funcexpr shift  132
                          expr shift  60
                      funcName shift  126
                         lexpr shift  81

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                        STRING shift  177
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  68
                fArgs_nonEmpty shift  176
                      funcName shift  126

State 23:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= FOR LPAREN nameList_nonEmpty COLON * exprList_nonEmpty RPAREN

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  138
             exprList_nonEmpty shift  83
                          expr shift  69
                      funcName shift  126

State 24:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty SEMICOLON

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  138
             exprList_nonEmpty shift  85
                          expr shift  69
                      funcName shift  126

State 25:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty SEMICOLON

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  138
             exprList_nonEmpty shift  87
                          expr shift  69
                      funcName shift  126

State 26:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  138
             exprList_nonEmpty shift  171
                          expr shift  69
                      funcName shift  126

State 27:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= nameList_nonEmpty ASSIGN * exprList_nonEmpty SEMICOLON

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  138
             exprList_nonEmpty shift  88
                          expr shift  69
                      funcName shift  126

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  62
                      funcName shift  126

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  63
                      funcName shift  126

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  64
                      funcName shift  126

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  65
                      funcName shift  126

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  66
                      funcName shift  126

State 33:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  67
                      funcName shift  126

State 34:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  181
                      funcName shift  126

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  182
                      funcName shift  126

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  183
                      funcName shift  126

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  71
                      funcName shift  126

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  70
                      funcName shift  126

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  72
                      funcName shift  126

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  73
                      funcName shift  126

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  74
                      funcName shift  126

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  184
                      funcName shift  126

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  185
                      funcName shift  126

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  173
                      funcName shift  126

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  61
                      funcName shift  126

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  80
                      funcName shift  126

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  192
                          NAME shift  89
                        LPAREN shift  45
                           L2V shift  125
                     MAPSTRING shift  124
                          UNIT shift  121
                        SWITCH shift  118
                      LOCATION shift  115
                      funcexpr shift  132
                          expr shift  79
                      funcName shift  126

State 48:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
     (99) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  106
                          ELSE reduce 99  ** Parsing conflict **
                    elif_start shift  105
                   elif_header shift  4
                   else_header shift  1
                     {default} reduce 99

State 49:
          function_header ::= function_start LPAREN * nameList_nonEmpty RPAREN
          function_header ::= function_start LPAREN * RPAREN
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  224
                        RPAREN shift  221
             nameList_nonEmpty shift  93

State 50:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty SEMICOLON

                          NAME shift  224
             nameList_nonEmpty shift  82

State 51:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
    (115) actionStmt ::= actions *

                    ACTIONNAME shift  98
                    ACTIONNAME reduce 115 ** Parsing conflict **
                        action shift  150
                     {default} reduce 115

State 52:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
    (114) actionStmt ::= action *

                    ACTIONNAME shift  98
                    ACTIONNAME reduce 114 ** Parsing conflict **
                        action shift  151
                     {default} reduce 114

State 53:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= FOR LPAREN * nameList_nonEmpty COLON exprList_nonEmpty RPAREN

                          NAME shift  224
             nameList_nonEmpty shift  84

State 54:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON

                          NAME shift  224
             nameList_nonEmpty shift  86

State 55:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON

                          NAME shift  224
             nameList_nonEmpty shift  78

State 56:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  136
              numList_nonEmpty shift  90

State 57:
          rbracket ::= * RBRACKET
          stmt ::= lbracket bodyStmtList return_stmt * rbracket

                      RBRACKET shift  214
                      rbracket shift  211

State 58:
          rbracket ::= * RBRACKET
          stmt ::= lbracket return_stmt * rbracket

                      RBRACKET shift  214
                      rbracket shift  213

State 59:
          import_chunk ::= FROM NAME IMPORT * nameList_nonEmpty SEMICOLON
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  224
             nameList_nonEmpty shift  94

State 60:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  33
                            LE shift  31
                            LT shift  30
                            GE shift  29
                            GT shift  28
                            NE shift  32
                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42

State 61:
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                        RPAREN shift  191

State 62:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (83) lexpr ::= expr GT expr *

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 83

State 63:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (82) lexpr ::= expr GE expr *

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 82

State 64:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (81) lexpr ::= expr LT expr *

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 81

State 65:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (80) lexpr ::= expr LE expr *

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 80

State 66:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (79) lexpr ::= expr NE expr *

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 79

State 67:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (78) lexpr ::= expr EQ expr *

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 78

State 68:
     (50) fArgs_nonEmpty ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 50

State 69:
     (43) exprList_nonEmpty ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 43

State 70:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (73) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 73

State 71:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (74) expr ::= expr BITXOR expr *

                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 74

State 72:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (72) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 72

State 73:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (71) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 71

State 74:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (70) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 70

State 75:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  19
                          LAND shift  20
                        RPAREN shift  159

State 76:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  19
                          LAND shift  20
                        RPAREN shift  162

State 77:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  19
                          LAND shift  20
                        RPAREN shift  165

State 78:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          vdef_stmt ::= VAR nameList_nonEmpty * SEMICOLON
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty SEMICOLON

                         COMMA shift  144
                        ASSIGN shift  25
                     SEMICOLON shift  169

State 79:
          expr ::= expr * PLUS expr
     (65) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 65

State 80:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (66) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 66

State 81:
          expr ::= L2V LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  19
                          LAND shift  20
                        RPAREN shift  190

State 82:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          vdef_stmt ::= VAR nameList_nonEmpty * SEMICOLON

                         COMMA shift  144
                     SEMICOLON shift  169

State 83:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          foreach_header ::= FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty * RPAREN

                         COMMA shift  26
                        RPAREN shift  157

State 84:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= FOR LPAREN nameList_nonEmpty * COLON exprList_nonEmpty RPAREN

                         COMMA shift  144
                         COLON shift  23

State 85:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  167

State 86:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty SEMICOLON

                         COMMA shift  144
                        ASSIGN shift  24

State 87:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  168

State 88:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          assign_stmt ::= nameList_nonEmpty ASSIGN exprList_nonEmpty * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  170

State 89:
     (48) expr ::= NAME *
          expr ::= NAME * PERIOD NAME
     (55) funcName ::= NAME *
          funcName ::= NAME * PERIOD NAME

                        LPAREN reduce 55
                        PERIOD shift  128
                     {default} reduce 48

State 90:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  134
                    RSQBRACKET shift  133

State 91:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          assign_stmt ::= nameList_nonEmpty * ASSIGN exprList_nonEmpty SEMICOLON

                         COMMA shift  144
                        ASSIGN shift  27

State 92:
     (39) nameList_nonEmpty ::= NAME *
     (55) funcName ::= NAME *
          funcName ::= NAME * PERIOD NAME

                        LPAREN reduce 55
                        PERIOD shift  139
                     {default} reduce 39

State 93:
          function_header ::= function_start LPAREN nameList_nonEmpty * RPAREN
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  144
                        RPAREN shift  222

State 94:
          import_chunk ::= FROM NAME IMPORT nameList_nonEmpty * SEMICOLON
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  144
                     SEMICOLON shift  226

State 95:
          stmt ::= lbracket error * RBRACKET

                      RBRACKET shift  148

State 96:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  152

State 97:
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                        RPAREN shift  96

State 98:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  11

State 99:
          return_stmt ::= RETURN exprList * SEMICOLON

                     SEMICOLON shift  153

State 100:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (46) exprList ::= exprList_nonEmpty *

                         COMMA shift  26
                     {default} reduce 46

State 101:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  154

State 102:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  155

State 103:
          foreach_header ::= FOR * LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN

                        LPAREN shift  53

State 104:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  14

State 105:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  15

State 106:
          elif_start ::= ELSE * IF
     (98) else_header ::= ELSE *

                            IF shift  163
                            IF reduce 98  ** Parsing conflict **
                     {default} reduce 98

State 107:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  16

State 108:
          funcexpr ::= funcName LPAREN fArgs * RPAREN

                        RPAREN shift  172

State 109:
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  175

State 110:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (54) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  22
                     {default} reduce 54

State 111:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  10

State 112:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (85) lexpr ::= lexpr LOR lexpr *

                          LAND shift  20
                     {default} reduce 85

State 113:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  186

State 114:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  113

State 115:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  114

State 116:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  187

State 117:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  116

State 118:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  117

State 119:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  188

State 120:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  119

State 121:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  120

State 122:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  189

State 123:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  122

State 124:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  123

State 125:
          expr ::= L2V * LPAREN lexpr RPAREN

                        LPAREN shift  21

State 126:
          funcexpr ::= funcName * LPAREN fArgs RPAREN

                        LPAREN shift  12

State 127:
     (49) expr ::= NAME PERIOD NAME *
     (56) funcName ::= NAME PERIOD NAME *

                        LPAREN reduce 56
                     {default} reduce 49

State 128:
          expr ::= NAME PERIOD * NAME
          funcName ::= NAME PERIOD * NAME

                          NAME shift  127

State 129:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  135

State 130:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  129

State 131:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  130

State 132:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (58) expr ::= funcexpr *

                    LSQBRACKET shift  131
                     {default} reduce 58

State 133:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  193

State 134:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  194

State 135:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  195

State 136:
     (37) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  135
                    RSQBRACKET reduce 37  ** Parsing conflict **
                     {default} reduce 37

State 137:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  56

State 138:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (58) expr ::= funcexpr *

                    LSQBRACKET shift  137
                     {default} reduce 58

State 139:
          funcName ::= NAME PERIOD * NAME

                          NAME shift  196

State 140:
          bodyStmt ::= funcexpr * SEMICOLON

                     SEMICOLON shift  205

State 141:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  219

State 142:
          function_header ::= function_start * LPAREN nameList_nonEmpty RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  49

State 143:
          function_start ::= FUNCTION * NAME

                          NAME shift  223

State 144:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  225

State 145:
          import_chunk ::= FROM NAME * IMPORT nameList_nonEmpty SEMICOLON

                        IMPORT shift  59

State 146:
          import_chunk ::= FROM * NAME IMPORT nameList_nonEmpty SEMICOLON

                          NAME shift  145

State 147:
     (34) bodyStmtList ::= bodyStmt *

                     {default} reduce 34

State 148:
     (21) stmt ::= lbracket error RBRACKET *

                     {default} reduce 21

State 149:
    (100) if_stmt ::= if_block else_header stmt *

                     {default} reduce 100

State 150:
    (113) actions ::= actions action *

                     {default} reduce 113

State 151:
    (112) actions ::= action action *

                     {default} reduce 112

State 152:
    (111) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 111

State 153:
    (108) return_stmt ::= RETURN exprList SEMICOLON *

                     {default} reduce 108

State 154:
    (107) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 107

State 155:
    (106) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 106

State 156:
    (105) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 105

State 157:
    (104) foreach_header ::= FOR LPAREN nameList_nonEmpty COLON exprList_nonEmpty RPAREN *

                     {default} reduce 104

State 158:
    (103) while_stmt ::= while_header stmt *

                     {default} reduce 103

State 159:
    (102) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 102

State 160:
    (101) while_start ::= WHILE *

                     {default} reduce 101

State 161:
     (97) if_block ::= if_block elif_header stmt *

                     {default} reduce 97

State 162:
     (96) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 96

State 163:
     (95) elif_start ::= ELSE IF *

                     {default} reduce 95

State 164:
     (94) if_block ::= if_header stmt *

                     {default} reduce 94

State 165:
     (93) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 93

State 166:
     (92) if_start ::= IF *

                     {default} reduce 92

State 167:
     (90) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON *

                     {default} reduce 90

State 168:
     (89) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON *

                     {default} reduce 89

State 169:
     (88) vdef_stmt ::= VAR nameList_nonEmpty SEMICOLON *

                     {default} reduce 88

State 170:
     (91) assign_stmt ::= nameList_nonEmpty ASSIGN exprList_nonEmpty SEMICOLON *

                     {default} reduce 91

State 171:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (44) exprList_nonEmpty ::= exprList_nonEmpty COMMA exprList_nonEmpty *

                     {default} reduce 44

State 172:
     (57) funcexpr ::= funcName LPAREN fArgs RPAREN *

                     {default} reduce 57

State 173:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (67) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 67

State 174:
    (110) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 110

State 175:
    (109) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 109

State 176:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (52) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArgs_nonEmpty *

                     {default} reduce 52

State 177:
     (51) fArgs_nonEmpty ::= STRING *

                     {default} reduce 51

State 178:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (86) lexpr ::= LNOT lexpr *
     (87) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 87

State 179:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (86) lexpr ::= LNOT lexpr *

                     {default} reduce 86

State 180:
          lexpr ::= lexpr * LAND lexpr
     (84) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 84

State 181:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (77) expr ::= BITNOT expr *

                     {default} reduce 77

State 182:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (76) expr ::= MINUS expr *

                     {default} reduce 76

State 183:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (75) expr ::= PLUS expr *

                     {default} reduce 75

State 184:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (69) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 69

State 185:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (68) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 68

State 186:
     (64) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 64

State 187:
     (63) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 63

State 188:
     (62) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 62

State 189:
     (61) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 61

State 190:
     (60) expr ::= L2V LPAREN lexpr RPAREN *

                     {default} reduce 60

State 191:
     (59) expr ::= LPAREN expr RPAREN *

                     {default} reduce 59

State 192:
     (47) expr ::= NUMBER *

                     {default} reduce 47

State 193:
     (41) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 41

State 194:
     (38) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 38

State 195:
     (42) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 42

State 196:
     (56) funcName ::= NAME PERIOD NAME *

                     {default} reduce 56

State 197:
     (36) bodyStmtList ::= bodyStmtList error *

                     {default} reduce 36

State 198:
     (35) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 35

State 199:
     (33) bodyStmt ::= break_stmt *

                     {default} reduce 33

State 200:
     (32) bodyStmt ::= continue_stmt *

                     {default} reduce 32

State 201:
     (31) bodyStmt ::= foreach_stmt *

                     {default} reduce 31

State 202:
     (30) bodyStmt ::= while_stmt *

                     {default} reduce 30

State 203:
     (29) bodyStmt ::= if_stmt *

                     {default} reduce 29

State 204:
     (28) bodyStmt ::= actionStmt *

                     {default} reduce 28

State 205:
     (27) bodyStmt ::= funcexpr SEMICOLON *

                     {default} reduce 27

State 206:
     (26) bodyStmt ::= assign_stmt *

                     {default} reduce 26

State 207:
     (25) bodyStmt ::= cdef_stmt *

                     {default} reduce 25

State 208:
     (24) bodyStmt ::= vdefAssign_stmt *

                     {default} reduce 24

State 209:
     (23) bodyStmt ::= vdef_stmt *

                     {default} reduce 23

State 210:
     (22) bodyStmt ::= SEMICOLON *

                     {default} reduce 22

State 211:
     (20) stmt ::= lbracket bodyStmtList return_stmt rbracket *

                     {default} reduce 20

State 212:
     (19) stmt ::= lbracket bodyStmtList rbracket *

                     {default} reduce 19

State 213:
     (18) stmt ::= lbracket return_stmt rbracket *

                     {default} reduce 18

State 214:
     (16) rbracket ::= RBRACKET *

                     {default} reduce 16

State 215:
     (17) stmt ::= lbracket RBRACKET *

                     {default} reduce 17

State 216:
     (15) lbracket ::= LBRACKET *

                     {default} reduce 15

State 217:
     (14) stmt ::= return_stmt *

                     {default} reduce 14

State 218:
     (13) stmt ::= bodyStmt *

                     {default} reduce 13

State 219:
     (12) stmt ::= error SEMICOLON *

                     {default} reduce 12

State 220:
     (11) fdef_chunk ::= function_header stmt *

                     {default} reduce 11

State 221:
     (10) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 10

State 222:
      (9) function_header ::= function_start LPAREN nameList_nonEmpty RPAREN *

                     {default} reduce 9

State 223:
      (8) function_start ::= FUNCTION NAME *

                     {default} reduce 8

State 224:
     (39) nameList_nonEmpty ::= NAME *

                     {default} reduce 39

State 225:
     (40) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 40

State 226:
      (7) import_chunk ::= FROM NAME IMPORT nameList_nonEmpty SEMICOLON *

                     {default} reduce 7

State 227:
      (6) chunk ::= cdef_stmt *

                     {default} reduce 6

State 228:
      (5) chunk ::= vdef_stmt *

                     {default} reduce 5

State 229:
      (4) chunk ::= fdef_chunk *

                     {default} reduce 4

State 230:
      (3) chunk ::= import_chunk *

                     {default} reduce 3

State 231:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: FROM
   28: IMPORT
   29: SEMICOLON
   30: FUNCTION
   31: LPAREN
   32: RPAREN
   33: LBRACKET
   34: RBRACKET
   35: LSQBRACKET
   36: RSQBRACKET
   37: PERIOD
   38: STRING
   39: FUNCCALL
   40: L2V
   41: MAPSTRING
   42: UNIT
   43: SWITCH
   44: LOCATION
   45: VAR
   46: CONST
   47: IF
   48: ELSE
   49: WHILE
   50: FOR
   51: COLON
   52: CONTINUE
   53: BREAK
   54: RETURN
   55: CONDITIONNAME
   56: ACTIONNAME
   57: error:
   58: nt:
   59: program: <lambda> FROM FUNCTION VAR CONST
   60: chunks: <lambda> FROM FUNCTION VAR CONST
   61: chunk: FROM FUNCTION VAR CONST
   62: import_chunk: FROM
   63: fdef_chunk: FUNCTION
   64: vdef_stmt: VAR
   65: cdef_stmt: CONST
   66: nameList_nonEmpty: NAME
   67: function_start: FUNCTION
   68: function_header: FUNCTION
   69: stmt: NAME SEMICOLON LBRACKET VAR CONST IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   70: bodyStmt: NAME SEMICOLON VAR CONST IF WHILE FOR CONTINUE BREAK ACTIONNAME
   71: return_stmt: RETURN
   72: lbracket: LBRACKET
   73: rbracket: RBRACKET
   74: bodyStmtList: NAME SEMICOLON VAR CONST IF WHILE FOR CONTINUE BREAK ACTIONNAME
   75: vdefAssign_stmt: VAR
   76: assign_stmt: NAME
   77: funcexpr: NAME
   78: actionStmt: ACTIONNAME
   79: if_stmt: IF
   80: while_stmt: WHILE
   81: foreach_stmt: FOR
   82: continue_stmt: CONTINUE
   83: break_stmt: BREAK
   84: numList_nonEmpty: NUMBER
   85: exprList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   86: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   87: exprList: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   88: fArgs_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN STRING L2V MAPSTRING UNIT SWITCH LOCATION
   89: fArgs: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN STRING L2V MAPSTRING UNIT SWITCH LOCATION
   90: funcName: NAME
   91: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
   92: if_start: IF
   93: if_header: IF
   94: if_block: IF
   95: elif_start: ELSE
   96: elif_header: ELSE
   97: else_header: ELSE
   98: while_start: WHILE
   99: while_header: WHILE
  100: foreach_header: FOR
  101: action: ACTIONNAME
  102: actions: ACTIONNAME
