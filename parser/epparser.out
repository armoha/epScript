State 0:
          program ::= * chunks
     (74) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  7
                     {default} reduce 74

State 1:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          stmtList ::= * stmt
          stmtList ::= * stmtList stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET * stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          block ::= LBRACKET * error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * block

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  66
                        NUMBER shift  122
                        BITNOT shift  18
                           VAR shift  42
                     SEMICOLON shift  93
                      LBRACKET shift  1
                            IF shift  121
                         WHILE shift  140
                      CONTINUE shift  78
                         BREAK shift  79
                         error shift  70
                      nameList shift  72
                          expr shift  44
                     vdef_stmt shift  94
               vdefAssign_stmt shift  95
                vdefMulti_stmt shift  97
          vdefMultiAssign_stmt shift  96
                   assign_stmt shift  98
              assignMulti_stmt shift  99
                      stmtList shift  2
                          stmt shift  118
                         block shift  104
                      if_start shift  74
                     if_header shift  3
                       if_stmt shift  100
                   else_header shift  5
                   while_start shift  41
                    while_stmt shift  101
                 continue_stmt shift  102
                    break_stmt shift  103

State 2:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          stmtList ::= stmtList * stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET stmtList * RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * block

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  66
                        NUMBER shift  122
                        BITNOT shift  18
                           VAR shift  42
                     SEMICOLON shift  93
                      LBRACKET shift  1
                      RBRACKET shift  120
                            IF shift  121
                         WHILE shift  140
                      CONTINUE shift  78
                         BREAK shift  79
                         error shift  80
                      nameList shift  72
                          expr shift  44
                     vdef_stmt shift  94
               vdefAssign_stmt shift  95
                vdefMulti_stmt shift  97
          vdefMultiAssign_stmt shift  96
                   assign_stmt shift  98
              assignMulti_stmt shift  99
                          stmt shift  119
                         block shift  104
                      if_start shift  74
                     if_header shift  3
                       if_stmt shift  100
                   else_header shift  5
                   while_start shift  41
                    while_stmt shift  101
                 continue_stmt shift  102
                    break_stmt shift  103

State 3:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          if_stmt ::= if_header * stmt
          else_header ::= * if_header stmt ELSE
          else_header ::= if_header * stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * block

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  66
                        NUMBER shift  122
                        BITNOT shift  18
                           VAR shift  42
                     SEMICOLON shift  93
                      LBRACKET shift  1
                            IF shift  121
                         WHILE shift  140
                      CONTINUE shift  78
                         BREAK shift  79
                         error shift  80
                      nameList shift  72
                          expr shift  44
                     vdef_stmt shift  94
               vdefAssign_stmt shift  95
                vdefMulti_stmt shift  97
          vdefMultiAssign_stmt shift  96
                   assign_stmt shift  98
              assignMulti_stmt shift  99
                          stmt shift  82
                         block shift  104
                      if_start shift  74
                     if_header shift  3
                       if_stmt shift  100
                   else_header shift  5
                   while_start shift  41
                    while_stmt shift  101
                 continue_stmt shift  102
                    break_stmt shift  103

State 4:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          fdef_chunk ::= function_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * block

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  66
                        NUMBER shift  122
                        BITNOT shift  18
                           VAR shift  42
                     SEMICOLON shift  93
                      LBRACKET shift  1
                            IF shift  121
                         WHILE shift  140
                      CONTINUE shift  78
                         BREAK shift  79
                         error shift  80
                      nameList shift  72
                          expr shift  44
                     vdef_stmt shift  94
               vdefAssign_stmt shift  95
                vdefMulti_stmt shift  97
          vdefMultiAssign_stmt shift  96
                   assign_stmt shift  98
              assignMulti_stmt shift  99
                          stmt shift  123
                         block shift  104
                      if_start shift  74
                     if_header shift  3
                       if_stmt shift  100
                   else_header shift  5
                   while_start shift  41
                    while_stmt shift  101
                 continue_stmt shift  102
                    break_stmt shift  103

State 5:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          if_stmt ::= else_header * stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * block

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  66
                        NUMBER shift  122
                        BITNOT shift  18
                           VAR shift  42
                     SEMICOLON shift  93
                      LBRACKET shift  1
                            IF shift  121
                         WHILE shift  140
                      CONTINUE shift  78
                         BREAK shift  79
                         error shift  80
                      nameList shift  72
                          expr shift  44
                     vdef_stmt shift  94
               vdefAssign_stmt shift  95
                vdefMulti_stmt shift  97
          vdefMultiAssign_stmt shift  96
                   assign_stmt shift  98
              assignMulti_stmt shift  99
                          stmt shift  139
                         block shift  104
                      if_start shift  74
                     if_header shift  3
                       if_stmt shift  100
                   else_header shift  5
                   while_start shift  41
                    while_stmt shift  101
                 continue_stmt shift  102
                    break_stmt shift  103

State 6:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          while_stmt ::= while_start while_cond * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * block

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  66
                        NUMBER shift  122
                        BITNOT shift  18
                           VAR shift  42
                     SEMICOLON shift  93
                      LBRACKET shift  1
                            IF shift  121
                         WHILE shift  140
                      CONTINUE shift  78
                         BREAK shift  79
                         error shift  80
                      nameList shift  72
                          expr shift  44
                     vdef_stmt shift  94
               vdefAssign_stmt shift  95
                vdefMulti_stmt shift  97
          vdefMultiAssign_stmt shift  96
                   assign_stmt shift  98
              assignMulti_stmt shift  99
                          stmt shift  89
                         block shift  104
                      if_start shift  74
                     if_header shift  3
                       if_stmt shift  100
                   else_header shift  5
                   while_start shift  41
                    while_stmt shift  101
                 continue_stmt shift  102
                    break_stmt shift  103

State 7:
      (0) program ::= chunks *
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * vdefMulti_stmt
          chunks ::= chunks * chunk

                             $ reduce 0
                           VAR shift  40
                      FUNCTION shift  85
                     vdef_stmt shift  127
                vdefMulti_stmt shift  128
                function_start shift  81
               function_header shift  4
                    fdef_chunk shift  125
                         chunk shift  130

State 8:
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          emptyableExprList ::= * exprList
      (6) emptyableExprList ::= *
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= NAME LPAREN * emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                      exprList shift  83
                          expr shift  48
             emptyableExprList shift  84
                     {default} reduce 6

State 9:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN

                          LNOT shift  14
                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  43
                         lexpr shift  64

State 10:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr

                          LNOT shift  14
                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  43
                         lexpr shift  87

State 11:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr

                          LNOT shift  14
                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  43
                         lexpr shift  131

State 12:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_cond ::= LPAREN * lexpr RPAREN

                          LNOT shift  14
                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  43
                         lexpr shift  61

State 13:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr

                          LNOT shift  13
                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  43
                         lexpr shift  135

State 14:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr

                          LNOT shift  13
                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  43
                         lexpr shift  134

State 15:
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assignMulti_stmt ::= nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                      exprList shift  69
                          expr shift  48

State 16:
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefMultiAssign_stmt ::= VAR nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                      exprList shift  73
                          expr shift  48

State 17:
          exprList ::= exprList COMMA * expr
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  49

State 18:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  106

State 19:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  54

State 20:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  53

State 21:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  52

State 22:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  47

State 23:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  51

State 24:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  50

State 25:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  63

State 26:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  59

State 27:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  58

State 28:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  57

State 29:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  55

State 30:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  56

State 31:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= NAME ASSIGN * expr SEMICOLON

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  46

State 32:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  107

State 33:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  105

State 34:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  62

State 35:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  116

State 36:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  114

State 37:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  113

State 38:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR NAME ASSIGN * expr SEMICOLON

                          PLUS shift  32
                         MINUS shift  33
                          NAME shift  76
                        NUMBER shift  122
                        BITNOT shift  18
                          expr shift  45

State 39:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          function_header ::= function_start LPAREN * nameList RPAREN
          function_header ::= function_start LPAREN * RPAREN

                          NAME shift  77
                        RPAREN shift  124
                      nameList shift  67

State 40:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefMulti_stmt ::= VAR * nameList SEMICOLON

                          NAME shift  71
                      nameList shift  68

State 41:
          while_cond ::= * LPAREN lexpr RPAREN
          while_stmt ::= while_start * while_cond stmt

                        LPAREN shift  12
                    while_cond shift  6

State 42:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefAssign_stmt ::= VAR * NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= VAR * nameList SEMICOLON
          vdefMultiAssign_stmt ::= VAR * nameList ASSIGN exprList SEMICOLON

                          NAME shift  65
                      nameList shift  60

State 43:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  24
                            LE shift  22
                            LT shift  21
                            GE shift  20
                            GT shift  19
                            NE shift  23
                         BITOR shift  29
                        BITXOR shift  30
                        BITAND shift  28
                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37

State 44:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          stmt ::= expr * SEMICOLON

                         BITOR shift  29
                        BITXOR shift  30
                        BITAND shift  28
                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     SEMICOLON shift  112

State 45:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          vdefAssign_stmt ::= VAR NAME ASSIGN expr * SEMICOLON

                         BITOR shift  29
                        BITXOR shift  30
                        BITAND shift  28
                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     SEMICOLON shift  115

State 46:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          assign_stmt ::= NAME ASSIGN expr * SEMICOLON

                         BITOR shift  29
                        BITXOR shift  30
                        BITAND shift  28
                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     SEMICOLON shift  110

State 47:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (25) lexpr ::= expr LE expr *

                         BITOR shift  29
                        BITXOR shift  30
                        BITAND shift  28
                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 25

State 48:
      (3) exprList ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  29
                        BITXOR shift  30
                        BITAND shift  28
                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 3

State 49:
      (4) exprList ::= exprList COMMA expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  29
                        BITXOR shift  30
                        BITAND shift  28
                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 4

State 50:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (23) lexpr ::= expr EQ expr *

                         BITOR shift  29
                        BITXOR shift  30
                        BITAND shift  28
                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 23

State 51:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (24) lexpr ::= expr NE expr *

                         BITOR shift  29
                        BITXOR shift  30
                        BITAND shift  28
                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 24

State 52:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (26) lexpr ::= expr LT expr *

                         BITOR shift  29
                        BITXOR shift  30
                        BITAND shift  28
                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 26

State 53:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (27) lexpr ::= expr GE expr *

                         BITOR shift  29
                        BITXOR shift  30
                        BITAND shift  28
                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 27

State 54:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (28) lexpr ::= expr GT expr *

                         BITOR shift  29
                        BITXOR shift  30
                        BITAND shift  28
                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 28

State 55:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (18) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  30
                        BITAND shift  28
                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 18

State 56:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (19) expr ::= expr BITXOR expr *

                        BITAND shift  28
                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 19

State 57:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (17) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  26
                        RSHIFT shift  27
                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 17

State 58:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (16) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 16

State 59:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (15) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  25
                         MINUS shift  34
                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 15

State 60:
          nameList ::= nameList * COMMA NAME
          vdefMulti_stmt ::= VAR nameList * SEMICOLON
          vdefMultiAssign_stmt ::= VAR nameList * ASSIGN exprList SEMICOLON

                         COMMA shift  75
                        ASSIGN shift  16
                     SEMICOLON shift  132

State 61:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_cond ::= LPAREN lexpr * RPAREN

                           LOR shift  10
                          LAND shift  11
                        RPAREN shift  88

State 62:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (11) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 11

State 63:
          expr ::= expr * PLUS expr
     (10) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  36
                      MULTIPLY shift  35
                           MOD shift  37
                     {default} reduce 10

State 64:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  10
                          LAND shift  11
                        RPAREN shift  136

State 65:
          nameList ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON
          vdefAssign_stmt ::= VAR NAME * ASSIGN expr SEMICOLON

                         COMMA shift  86
                        ASSIGN shift  38
                     SEMICOLON shift  109

State 66:
          nameList ::= NAME * COMMA NAME
      (8) expr ::= NAME *
          expr ::= NAME * LPAREN emptyableExprList RPAREN
          assign_stmt ::= NAME * ASSIGN expr SEMICOLON

                         COMMA shift  86
                        ASSIGN shift  31
                        LPAREN shift  8
                     {default} reduce 8

State 67:
          nameList ::= nameList * COMMA NAME
          function_header ::= function_start LPAREN nameList * RPAREN

                         COMMA shift  75
                        RPAREN shift  126

State 68:
          nameList ::= nameList * COMMA NAME
          vdefMulti_stmt ::= VAR nameList * SEMICOLON

                         COMMA shift  75
                     SEMICOLON shift  132

State 69:
          exprList ::= exprList * COMMA expr
          assignMulti_stmt ::= nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  17
                     SEMICOLON shift  111

State 70:
          block ::= LBRACKET error * RBRACKET
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  92
                      RBRACKET shift  108

State 71:
          nameList ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON

                         COMMA shift  86
                     SEMICOLON shift  109

State 72:
          nameList ::= nameList * COMMA NAME
          assignMulti_stmt ::= nameList * ASSIGN exprList SEMICOLON

                         COMMA shift  75
                        ASSIGN shift  15

State 73:
          exprList ::= exprList * COMMA expr
          vdefMultiAssign_stmt ::= VAR nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  17
                     SEMICOLON shift  117

State 74:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  9

State 75:
          nameList ::= nameList COMMA * NAME

                          NAME shift  133

State 76:
      (8) expr ::= NAME *
          expr ::= NAME * LPAREN emptyableExprList RPAREN

                        LPAREN shift  8
                     {default} reduce 8

State 77:
          nameList ::= NAME * COMMA NAME

                         COMMA shift  86

State 78:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  90

State 79:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  91

State 80:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  92

State 81:
          function_header ::= function_start * LPAREN nameList RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  39

State 82:
     (45) if_stmt ::= if_header stmt *
          else_header ::= if_header stmt * ELSE

                          ELSE shift  137
                     {default} reduce 45

State 83:
          exprList ::= exprList * COMMA expr
      (5) emptyableExprList ::= exprList *

                         COMMA shift  17
                     {default} reduce 5

State 84:
          expr ::= NAME LPAREN emptyableExprList * RPAREN

                        RPAREN shift  138

State 85:
          function_start ::= FUNCTION * NAME

                          NAME shift  129

State 86:
          nameList ::= NAME COMMA * NAME

                          NAME shift  141

State 87:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (30) lexpr ::= lexpr LOR lexpr *

                          LAND shift  11
                     {default} reduce 30

State 88:
     (49) while_cond ::= LPAREN lexpr RPAREN *

                     {default} reduce 49

State 89:
     (50) while_stmt ::= while_start while_cond stmt *

                     {default} reduce 50

State 90:
     (51) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 51

State 91:
     (52) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 52

State 92:
     (57) stmt ::= error SEMICOLON *

                     {default} reduce 57

State 93:
     (58) stmt ::= SEMICOLON *

                     {default} reduce 58

State 94:
     (59) stmt ::= vdef_stmt *

                     {default} reduce 59

State 95:
     (60) stmt ::= vdefAssign_stmt *

                     {default} reduce 60

State 96:
     (61) stmt ::= vdefMultiAssign_stmt *

                     {default} reduce 61

State 97:
     (62) stmt ::= vdefMulti_stmt *

                     {default} reduce 62

State 98:
     (63) stmt ::= assign_stmt *

                     {default} reduce 63

State 99:
     (64) stmt ::= assignMulti_stmt *

                     {default} reduce 64

State 100:
     (66) stmt ::= if_stmt *

                     {default} reduce 66

State 101:
     (67) stmt ::= while_stmt *

                     {default} reduce 67

State 102:
     (68) stmt ::= continue_stmt *

                     {default} reduce 68

State 103:
     (69) stmt ::= break_stmt *

                     {default} reduce 69

State 104:
     (70) stmt ::= block *

                     {default} reduce 70

State 105:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (21) expr ::= MINUS expr *

                     {default} reduce 21

State 106:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (22) expr ::= BITNOT expr *

                     {default} reduce 22

State 107:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (20) expr ::= PLUS expr *

                     {default} reduce 20

State 108:
     (42) block ::= LBRACKET error RBRACKET *

                     {default} reduce 42

State 109:
     (33) vdef_stmt ::= VAR NAME SEMICOLON *

                     {default} reduce 33

State 110:
     (37) assign_stmt ::= NAME ASSIGN expr SEMICOLON *

                     {default} reduce 37

State 111:
     (38) assignMulti_stmt ::= nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 38

State 112:
     (65) stmt ::= expr SEMICOLON *

                     {default} reduce 65

State 113:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (14) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 14

State 114:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (13) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 13

State 115:
     (34) vdefAssign_stmt ::= VAR NAME ASSIGN expr SEMICOLON *

                     {default} reduce 34

State 116:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (12) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 12

State 117:
     (36) vdefMultiAssign_stmt ::= VAR nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 36

State 118:
     (39) stmtList ::= stmt *

                     {default} reduce 39

State 119:
     (40) stmtList ::= stmtList stmt *

                     {default} reduce 40

State 120:
     (41) block ::= LBRACKET stmtList RBRACKET *

                     {default} reduce 41

State 121:
     (43) if_start ::= IF *

                     {default} reduce 43

State 122:
      (7) expr ::= NUMBER *

                     {default} reduce 7

State 123:
     (56) fdef_chunk ::= function_header stmt *

                     {default} reduce 56

State 124:
     (55) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 55

State 125:
     (71) chunk ::= fdef_chunk *

                     {default} reduce 71

State 126:
     (54) function_header ::= function_start LPAREN nameList RPAREN *

                     {default} reduce 54

State 127:
     (72) chunk ::= vdef_stmt *

                     {default} reduce 72

State 128:
     (73) chunk ::= vdefMulti_stmt *

                     {default} reduce 73

State 129:
     (53) function_start ::= FUNCTION NAME *

                     {default} reduce 53

State 130:
     (75) chunks ::= chunks chunk *

                     {default} reduce 75

State 131:
          lexpr ::= lexpr * LAND lexpr
     (29) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 29

State 132:
     (35) vdefMulti_stmt ::= VAR nameList SEMICOLON *

                     {default} reduce 35

State 133:
      (2) nameList ::= nameList COMMA NAME *

                     {default} reduce 2

State 134:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (31) lexpr ::= LNOT lexpr *

                     {default} reduce 31

State 135:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (31) lexpr ::= LNOT lexpr *
     (32) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 32

State 136:
     (44) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 44

State 137:
     (46) else_header ::= if_header stmt ELSE *

                     {default} reduce 46

State 138:
      (9) expr ::= NAME LPAREN emptyableExprList RPAREN *

                     {default} reduce 9

State 139:
     (47) if_stmt ::= else_header stmt *

                     {default} reduce 47

State 140:
     (48) while_start ::= WHILE *

                     {default} reduce 48

State 141:
      (1) nameList ::= NAME COMMA NAME *

                     {default} reduce 1

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: IFX
   25: IFNOT
   26: ELSE
   27: NAME
   28: NUMBER
   29: LPAREN
   30: RPAREN
   31: BITNOT
   32: VAR
   33: SEMICOLON
   34: LBRACKET
   35: RBRACKET
   36: IF
   37: WHILE
   38: CONTINUE
   39: BREAK
   40: FUNCTION
   41: error:
   42: nt:
   43: program: VAR FUNCTION
   44: chunks: <lambda> VAR FUNCTION
   45: nameList: NAME
   46: exprList: PLUS MINUS NAME NUMBER BITNOT
   47: expr: PLUS MINUS NAME NUMBER BITNOT
   48: emptyableExprList: <lambda> PLUS MINUS NAME NUMBER BITNOT
   49: lexpr: LNOT PLUS MINUS NAME NUMBER BITNOT
   50: vdef_stmt: VAR
   51: vdefAssign_stmt: VAR
   52: vdefMulti_stmt: VAR
   53: vdefMultiAssign_stmt: VAR
   54: assign_stmt: NAME
   55: assignMulti_stmt: NAME
   56: stmtList: PLUS MINUS NAME NUMBER BITNOT VAR SEMICOLON LBRACKET IF WHILE CONTINUE BREAK
   57: stmt: PLUS MINUS NAME NUMBER BITNOT VAR SEMICOLON LBRACKET IF WHILE CONTINUE BREAK
   58: block: LBRACKET
   59: if_start: IF
   60: if_header: IF
   61: if_stmt: IF
   62: else_header: IF
   63: while_start: WHILE
   64: while_cond: LPAREN
   65: while_stmt: WHILE
   66: continue_stmt: CONTINUE
   67: break_stmt: BREAK
   68: function_start: FUNCTION
   69: function_header: FUNCTION
   70: fdef_chunk: FUNCTION
   71: chunk: VAR FUNCTION
