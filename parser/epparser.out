State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  11
                     {default} reduce 1

State 1:
          lbracket ::= * LBRACKET
          rbracket ::= * RBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= lbracket bodyStmtList * rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket bodyStmtList * return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (178) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                     SEMICOLON shift  324
                        LPAREN shift  65
                      LBRACKET shift  331
                           VAR shift  89
                      RBRACKET shift  329
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                         CONST shift  88
                           INC shift  43
                           DEC shift  42
                            IF shift  280
                         WHILE shift  274
                           FOR shift  175
                       FOREACH shift  170
                      CONTINUE shift  256
                         BREAK shift  255
                        RETURN shift  21
                         error shift  309
                     vdef_stmt shift  224
                     blockStmt shift  325
                      bodyStmt shift  310
                   return_stmt shift  225
                      lbracket shift  2
                      rbracket shift  327
               vdefAssign_stmt shift  223
                     cdef_stmt shift  222
                   assign_stmt shift  221
                      funcexpr shift  157
                    actionStmt shift  317
                       if_stmt shift  316
                    while_stmt shift  315
                      for_stmt shift  314
                  foreach_stmt shift  313
                 continue_stmt shift  216
                    break_stmt shift  215
                          expr shift  97
                        lvalue shift  128
           lvalueList_nonEmpty shift  152
                      if_start shift  179
                     if_header shift  9
                      if_block shift  41
                   while_start shift  176
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  23
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5
              actionStmt_start shift  80
                     {default} reduce 178

State 2:
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= lbracket * RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket * return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= lbracket * bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket * bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmt ::= lbracket * error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= * error
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (178) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                     SEMICOLON shift  324
                        LPAREN shift  65
                      LBRACKET shift  331
                           VAR shift  89
                      RBRACKET shift  330
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                         CONST shift  88
                           INC shift  43
                           DEC shift  42
                            IF shift  280
                         WHILE shift  274
                           FOR shift  175
                       FOREACH shift  170
                      CONTINUE shift  256
                         BREAK shift  255
                        RETURN shift  21
                         error shift  166
                     vdef_stmt shift  224
                     blockStmt shift  325
                      bodyStmt shift  248
                   return_stmt shift  226
                      lbracket shift  2
                  bodyStmtList shift  1
               vdefAssign_stmt shift  223
                     cdef_stmt shift  222
                   assign_stmt shift  221
                      funcexpr shift  157
                    actionStmt shift  317
                       if_stmt shift  316
                    while_stmt shift  315
                      for_stmt shift  314
                  foreach_stmt shift  313
                 continue_stmt shift  216
                    break_stmt shift  215
                          expr shift  97
                        lvalue shift  128
           lvalueList_nonEmpty shift  152
                      if_start shift  179
                     if_header shift  9
                      if_block shift  41
                   while_start shift  176
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  23
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5
              actionStmt_start shift  80
                     {default} reduce 178

State 3:
          method_chunk ::= method_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (178) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                     SEMICOLON shift  324
                        LPAREN shift  65
                      LBRACKET shift  331
                           VAR shift  89
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                         CONST shift  88
                           INC shift  43
                           DEC shift  42
                            IF shift  280
                         WHILE shift  274
                           FOR shift  175
                       FOREACH shift  170
                      CONTINUE shift  256
                         BREAK shift  255
                        RETURN shift  21
                         error shift  228
                     vdef_stmt shift  224
                     blockStmt shift  325
                          stmt shift  243
                      bodyStmt shift  333
                   return_stmt shift  227
                      lbracket shift  2
               vdefAssign_stmt shift  223
                     cdef_stmt shift  222
                   assign_stmt shift  221
                      funcexpr shift  157
                    actionStmt shift  317
                       if_stmt shift  316
                    while_stmt shift  315
                      for_stmt shift  314
                  foreach_stmt shift  313
                 continue_stmt shift  216
                    break_stmt shift  215
                          expr shift  97
                        lvalue shift  128
           lvalueList_nonEmpty shift  152
                      if_start shift  179
                     if_header shift  9
                      if_block shift  41
                   while_start shift  176
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  23
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5
              actionStmt_start shift  80
                     {default} reduce 178

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (178) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                     SEMICOLON shift  324
                        LPAREN shift  65
                      LBRACKET shift  331
                           VAR shift  89
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                         CONST shift  88
                           INC shift  43
                           DEC shift  42
                            IF shift  280
                         WHILE shift  274
                           FOR shift  175
                       FOREACH shift  170
                      CONTINUE shift  256
                         BREAK shift  255
                        RETURN shift  21
                         error shift  228
                     vdef_stmt shift  224
                     blockStmt shift  325
                          stmt shift  250
                      bodyStmt shift  333
                   return_stmt shift  227
                      lbracket shift  2
               vdefAssign_stmt shift  223
                     cdef_stmt shift  222
                   assign_stmt shift  221
                      funcexpr shift  157
                    actionStmt shift  317
                       if_stmt shift  316
                    while_stmt shift  315
                      for_stmt shift  314
                  foreach_stmt shift  313
                 continue_stmt shift  216
                    break_stmt shift  215
                          expr shift  97
                        lvalue shift  128
           lvalueList_nonEmpty shift  152
                      if_start shift  179
                     if_header shift  9
                      if_block shift  41
                   while_start shift  176
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  23
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5
              actionStmt_start shift  80
                     {default} reduce 178

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (178) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                     SEMICOLON shift  324
                        LPAREN shift  65
                      LBRACKET shift  331
                           VAR shift  89
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                         CONST shift  88
                           INC shift  43
                           DEC shift  42
                            IF shift  280
                         WHILE shift  274
                           FOR shift  175
                       FOREACH shift  170
                      CONTINUE shift  256
                         BREAK shift  255
                        RETURN shift  21
                         error shift  228
                     vdef_stmt shift  224
                     blockStmt shift  325
                          stmt shift  257
                      bodyStmt shift  333
                   return_stmt shift  227
                      lbracket shift  2
               vdefAssign_stmt shift  223
                     cdef_stmt shift  222
                   assign_stmt shift  221
                      funcexpr shift  157
                    actionStmt shift  317
                       if_stmt shift  316
                    while_stmt shift  315
                      for_stmt shift  314
                  foreach_stmt shift  313
                 continue_stmt shift  216
                    break_stmt shift  215
                          expr shift  97
                        lvalue shift  128
           lvalueList_nonEmpty shift  152
                      if_start shift  179
                     if_header shift  9
                      if_block shift  41
                   while_start shift  176
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  23
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5
              actionStmt_start shift  80
                     {default} reduce 178

State 6:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          for_stmt ::= for_header * stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (178) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                     SEMICOLON shift  324
                        LPAREN shift  65
                      LBRACKET shift  331
                           VAR shift  89
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                         CONST shift  88
                           INC shift  43
                           DEC shift  42
                            IF shift  280
                         WHILE shift  274
                           FOR shift  175
                       FOREACH shift  170
                      CONTINUE shift  256
                         BREAK shift  255
                        RETURN shift  21
                         error shift  228
                     vdef_stmt shift  224
                     blockStmt shift  325
                          stmt shift  260
                      bodyStmt shift  333
                   return_stmt shift  227
                      lbracket shift  2
               vdefAssign_stmt shift  223
                     cdef_stmt shift  222
                   assign_stmt shift  221
                      funcexpr shift  157
                    actionStmt shift  317
                       if_stmt shift  316
                    while_stmt shift  315
                      for_stmt shift  314
                  foreach_stmt shift  313
                 continue_stmt shift  216
                    break_stmt shift  215
                          expr shift  97
                        lvalue shift  128
           lvalueList_nonEmpty shift  152
                      if_start shift  179
                     if_header shift  9
                      if_block shift  41
                   while_start shift  176
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  23
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5
              actionStmt_start shift  80
                     {default} reduce 178

State 7:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (178) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                     SEMICOLON shift  324
                        LPAREN shift  65
                      LBRACKET shift  331
                           VAR shift  89
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                         CONST shift  88
                           INC shift  43
                           DEC shift  42
                            IF shift  280
                         WHILE shift  274
                           FOR shift  175
                       FOREACH shift  170
                      CONTINUE shift  256
                         BREAK shift  255
                        RETURN shift  21
                         error shift  228
                     vdef_stmt shift  224
                     blockStmt shift  325
                          stmt shift  272
                      bodyStmt shift  333
                   return_stmt shift  227
                      lbracket shift  2
               vdefAssign_stmt shift  223
                     cdef_stmt shift  222
                   assign_stmt shift  221
                      funcexpr shift  157
                    actionStmt shift  317
                       if_stmt shift  316
                    while_stmt shift  315
                      for_stmt shift  314
                  foreach_stmt shift  313
                 continue_stmt shift  216
                    break_stmt shift  215
                          expr shift  97
                        lvalue shift  128
           lvalueList_nonEmpty shift  152
                      if_start shift  179
                     if_header shift  9
                      if_block shift  41
                   while_start shift  176
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  23
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5
              actionStmt_start shift  80
                     {default} reduce 178

State 8:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (178) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                     SEMICOLON shift  324
                        LPAREN shift  65
                      LBRACKET shift  331
                           VAR shift  89
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                         CONST shift  88
                           INC shift  43
                           DEC shift  42
                            IF shift  280
                         WHILE shift  274
                           FOR shift  175
                       FOREACH shift  170
                      CONTINUE shift  256
                         BREAK shift  255
                        RETURN shift  21
                         error shift  228
                     vdef_stmt shift  224
                     blockStmt shift  325
                          stmt shift  275
                      bodyStmt shift  333
                   return_stmt shift  227
                      lbracket shift  2
               vdefAssign_stmt shift  223
                     cdef_stmt shift  222
                   assign_stmt shift  221
                      funcexpr shift  157
                    actionStmt shift  317
                       if_stmt shift  316
                    while_stmt shift  315
                      for_stmt shift  314
                  foreach_stmt shift  313
                 continue_stmt shift  216
                    break_stmt shift  215
                          expr shift  97
                        lvalue shift  128
           lvalueList_nonEmpty shift  152
                      if_start shift  179
                     if_header shift  9
                      if_block shift  41
                   while_start shift  176
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  23
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5
              actionStmt_start shift  80
                     {default} reduce 178

State 9:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (178) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                     SEMICOLON shift  324
                        LPAREN shift  65
                      LBRACKET shift  331
                           VAR shift  89
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                         CONST shift  88
                           INC shift  43
                           DEC shift  42
                            IF shift  280
                         WHILE shift  274
                           FOR shift  175
                       FOREACH shift  170
                      CONTINUE shift  256
                         BREAK shift  255
                        RETURN shift  21
                         error shift  228
                     vdef_stmt shift  224
                     blockStmt shift  325
                          stmt shift  278
                      bodyStmt shift  333
                   return_stmt shift  227
                      lbracket shift  2
               vdefAssign_stmt shift  223
                     cdef_stmt shift  222
                   assign_stmt shift  221
                      funcexpr shift  157
                    actionStmt shift  317
                       if_stmt shift  316
                    while_stmt shift  315
                      for_stmt shift  314
                  foreach_stmt shift  313
                 continue_stmt shift  216
                    break_stmt shift  215
                          expr shift  97
                        lvalue shift  128
           lvalueList_nonEmpty shift  152
                      if_start shift  179
                     if_header shift  9
                      if_block shift  41
                   while_start shift  176
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  23
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5
              actionStmt_start shift  80
                     {default} reduce 178

State 10:
          fdef_chunk ::= fdef_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (178) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                     SEMICOLON shift  324
                        LPAREN shift  65
                      LBRACKET shift  331
                           VAR shift  89
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                         CONST shift  88
                           INC shift  43
                           DEC shift  42
                            IF shift  280
                         WHILE shift  274
                           FOR shift  175
                       FOREACH shift  170
                      CONTINUE shift  256
                         BREAK shift  255
                        RETURN shift  21
                         error shift  228
                     vdef_stmt shift  224
                     blockStmt shift  325
                          stmt shift  335
                      bodyStmt shift  333
                   return_stmt shift  227
                      lbracket shift  2
               vdefAssign_stmt shift  223
                     cdef_stmt shift  222
                   assign_stmt shift  221
                      funcexpr shift  157
                    actionStmt shift  317
                       if_stmt shift  316
                    while_stmt shift  315
                      for_stmt shift  314
                  foreach_stmt shift  313
                 continue_stmt shift  216
                    break_stmt shift  215
                          expr shift  97
                        lvalue shift  128
           lvalueList_nonEmpty shift  152
                      if_start shift  179
                     if_header shift  9
                      if_block shift  41
                   while_start shift  176
                  while_header shift  7
                    for_opener shift  12
                   for_header1 shift  23
                   for_header2 shift  14
                    for_header shift  6
                foreach_opener shift  87
                foreach_header shift  5
              actionStmt_start shift  80
                     {default} reduce 178

State 11:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunk ::= * import_chunk SEMICOLON
          chunk ::= * fdef_chunk
          chunk ::= * fdecl_chunk
          chunk ::= * object_chunk
          chunk ::= * vdef_stmt SEMICOLON
          chunk ::= * vdefAssign_global_stmt SEMICOLON
          chunk ::= * cdef_global_stmt SEMICOLON
          chunk ::= * blockStmt
          import_chunk ::= * IMPORT dottedName AS NAME
          import_chunk ::= * IMPORT dottedName
          fdef_header ::= * FUNCTION NAME LPAREN nameList RPAREN
          fdef_chunk ::= * fdef_header stmt
          fdecl_chunk ::= * FUNCTION NAME LPAREN nameList RPAREN SEMICOLON
          object_header ::= * OBJECT NAME LBRACKET
          object_body ::= * object_header
          object_body ::= * object_body VAR nameList_nonEmpty SEMICOLON
          object_body ::= * object_body method_chunk
          object_chunk ::= * object_body RBRACKET
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_global_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_global_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty

                             $ reduce 0
                        IMPORT shift  94
                      FUNCTION shift  234
                        OBJECT shift  165
                      LBRACKET shift  331
                           VAR shift  83
                         CONST shift  82
                         chunk shift  350
                  import_chunk shift  240
                    fdef_chunk shift  348
                   fdecl_chunk shift  347
                  object_chunk shift  346
                     vdef_stmt shift  239
        vdefAssign_global_stmt shift  238
              cdef_global_stmt shift  237
                     blockStmt shift  342
                   fdef_header shift  10
                 object_header shift  246
                   object_body shift  78
                      lbracket shift  2

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt ::= * for_init_stmt_nonEmpty
    (157) for_init_stmt ::= *
          for_header1 ::= for_opener * for_init_stmt SEMICOLON

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                        LPAREN shift  65
                           VAR shift  89
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                         CONST shift  88
                           INC shift  43
                           DEC shift  42
                     vdef_stmt shift  270
               vdefAssign_stmt shift  269
                     cdef_stmt shift  268
                   assign_stmt shift  267
                      funcexpr shift  214
                          expr shift  97
                        lvalue shift  128
           lvalueList_nonEmpty shift  152
        for_init_stmt_nonEmpty shift  174
                 for_init_stmt shift  173
                     {default} reduce 157

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA * for_init_stmt_nonEmpty

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                        LPAREN shift  65
                           VAR shift  89
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                         CONST shift  88
                           INC shift  43
                           DEC shift  42
                     vdef_stmt shift  270
               vdefAssign_stmt shift  269
                     cdef_stmt shift  268
                   assign_stmt shift  267
                      funcexpr shift  214
                          expr shift  97
                        lvalue shift  128
           lvalueList_nonEmpty shift  152
        for_init_stmt_nonEmpty shift  266

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
    (160) for_action_stmt ::= *
          for_action_stmt ::= * for_action_stmt_nonEmpty
          for_header ::= for_header2 * for_action_stmt RPAREN

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                           INC shift  43
                           DEC shift  42
                   assign_stmt shift  263
                      funcexpr shift  214
                          expr shift  97
                        lvalue shift  128
           lvalueList_nonEmpty shift  152
      for_action_stmt_nonEmpty shift  172
               for_action_stmt shift  171
                     {default} reduce 160

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA * for_action_stmt_nonEmpty

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                           INC shift  43
                           DEC shift  42
                   assign_stmt shift  263
                      funcexpr shift  214
                          expr shift  97
                        lvalue shift  128
           lvalueList_nonEmpty shift  152
      for_action_stmt_nonEmpty shift  262

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (74) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  156
                        LPAREN shift  65
                        RPAREN shift  289
                    LSQBRACKET shift  22
                         KILLS shift  307
                        STRING shift  300
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  122
                fArgs_nonEmpty shift  203
                         fArgs shift  187

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (74) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  156
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                        STRING shift  300
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  122
                fArgs_nonEmpty shift  203
                         fArgs shift  168
                     {default} reduce 74

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (74) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= KILLS LPAREN * fArgs RPAREN

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  156
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                        STRING shift  300
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  122
                fArgs_nonEmpty shift  203
                         fArgs shift  190
                     {default} reduce 74

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (74) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          funcexpr ::= expr LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  156
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                        STRING shift  300
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  122
                fArgs_nonEmpty shift  203
                         fArgs shift  185
                     {default} reduce 74

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (74) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= NAME LPAREN * fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  156
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                        STRING shift  300
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  122
                fArgs_nonEmpty shift  203
                         fArgs shift  184
                     {default} reduce 74

State 21:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
     (63) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * exprList

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  211
             exprList_nonEmpty shift  206
                          expr shift  121
                      exprList shift  254
                     {default} reduce 63

State 22:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
     (63) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= LSQBRACKET * exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  211
             exprList_nonEmpty shift  206
                          expr shift  121
                      exprList shift  90
                     {default} reduce 63

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          for_header2 ::= for_header1 * lexpr SEMICOLON
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  27
                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  30
                    LSQBRACKET shift  22
                         KILLS shift  204
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                 CONDITIONNAME shift  188
                      funcexpr shift  214
                          expr shift  96
                         lexpr shift  135

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  27
                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  30
                    LSQBRACKET shift  22
                         KILLS shift  204
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                 CONDITIONNAME shift  188
                      funcexpr shift  214
                          expr shift  96
                         lexpr shift  136

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  27
                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  30
                    LSQBRACKET shift  22
                         KILLS shift  204
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                 CONDITIONNAME shift  188
                      funcexpr shift  214
                          expr shift  96
                         lexpr shift  137

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  27
                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  30
                    LSQBRACKET shift  22
                         KILLS shift  204
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                 CONDITIONNAME shift  188
                      funcexpr shift  214
                          expr shift  96
                         lexpr shift  138

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  27
                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  30
                    LSQBRACKET shift  22
                         KILLS shift  204
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                 CONDITIONNAME shift  188
                      funcexpr shift  214
                          expr shift  96
                         lexpr shift  291

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  27
                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  30
                    LSQBRACKET shift  22
                         KILLS shift  204
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                 CONDITIONNAME shift  188
                      funcexpr shift  214
                          expr shift  96
                         lexpr shift  189

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  27
                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  30
                    LSQBRACKET shift  22
                         KILLS shift  204
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                 CONDITIONNAME shift  188
                      funcexpr shift  214
                          expr shift  96
                         lexpr shift  292

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= LPAREN * lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  27
                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  30
                    LSQBRACKET shift  22
                         KILLS shift  204
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                 CONDITIONNAME shift  188
                      funcexpr shift  214
                          expr shift  95
                         lexpr shift  140

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= L2V LPAREN * lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  27
                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  30
                    LSQBRACKET shift  22
                         KILLS shift  204
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                 CONDITIONNAME shift  188
                      funcexpr shift  214
                          expr shift  96
                         lexpr shift  139

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  156
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                        STRING shift  300
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  122
                fArgs_nonEmpty shift  299

State 33:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  211
             exprList_nonEmpty shift  159
                          expr shift  121

State 34:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  211
             exprList_nonEmpty shift  160
                          expr shift  121

State 35:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= foreach_opener nameList_nonEmpty COLON * exprList_nonEmpty RPAREN

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  211
             exprList_nonEmpty shift  150
                          expr shift  121

State 36:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalueList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  211
             exprList_nonEmpty shift  180
                          expr shift  121

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA * lvalue

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  124
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  103
                        lvalue shift  281

State 38:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  211
             exprList_nonEmpty shift  181
                          expr shift  121

State 39:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  211
             exprList_nonEmpty shift  182
                          expr shift  121

State 40:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  211
             exprList_nonEmpty shift  301
                          expr shift  121

State 41:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
    (145) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  178
                    elif_start shift  177
                   elif_header shift  8
                   else_header shift  4
                     {default} reduce 145

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= DEC * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  101

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= INC * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  102

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBXR * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  104

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBOR * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  105

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBND * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  106

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IRSH * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  107

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ILSH * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  108

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IMOD * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  109

State 50:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IDIV * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  110

State 51:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IMUL * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  111

State 52:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ISUB * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  112

State 53:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IADD * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  113

State 54:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ASSIGN * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  114

State 55:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= expr LSQBRACKET * expr RSQBRACKET

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  98

State 56:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  115

State 57:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  116

State 58:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  117

State 59:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  118

State 60:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  119

State 61:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  120

State 62:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  141

State 63:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  142

State 64:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  143

State 65:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  99

State 66:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  129

State 67:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  127

State 68:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  130

State 69:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  131

State 70:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  132

State 71:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  144

State 72:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  145

State 73:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  146

State 74:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  133

State 75:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  134

State 76:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  100

State 77:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= NAME ASSIGN * expr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  64
                         MINUS shift  63
                        BITNOT shift  62
                        NUMBER shift  308
                          NAME shift  213
                        LPAREN shift  65
                    LSQBRACKET shift  22
                         KILLS shift  307
                           L2V shift  205
                     MAPSTRING shift  202
                          UNIT shift  199
                        SWITCH shift  196
                      LOCATION shift  193
                      funcexpr shift  214
                          expr shift  123

State 78:
          object_body ::= object_body * VAR nameList_nonEmpty SEMICOLON
          method_header ::= * FUNCTION NAME LPAREN nameList RPAREN
          method_chunk ::= * method_header stmt
          object_body ::= object_body * method_chunk
          object_chunk ::= object_body * RBRACKET

                      FUNCTION shift  163
                           VAR shift  84
                      RBRACKET shift  241
                 method_header shift  3
                  method_chunk shift  242

State 79:
          method_header ::= FUNCTION NAME LPAREN * nameList RPAREN
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
     (57) nameList ::= *
          nameList ::= * nameList_nonEmpty

                          NAME shift  337
                      nameList shift  161
             nameList_nonEmpty shift  230
                     {default} reduce 57

State 80:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= actionStmt_start * action
          actionStmt ::= actionStmt_start * actions

                    ACTIONNAME shift  169
                        action shift  86
                       actions shift  85

State 81:
          fdef_header ::= FUNCTION NAME LPAREN * nameList RPAREN
          fdecl_chunk ::= FUNCTION NAME LPAREN * nameList RPAREN SEMICOLON
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
     (57) nameList ::= *
          nameList ::= * nameList_nonEmpty

                          NAME shift  337
                      nameList shift  232
             nameList_nonEmpty shift  230
                     {default} reduce 57

State 82:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_global_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  337
             nameList_nonEmpty shift  147

State 83:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_global_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  337
             nameList_nonEmpty shift  148

State 84:
          object_body ::= object_body VAR * nameList_nonEmpty SEMICOLON
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  337
             nameList_nonEmpty shift  149

State 85:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
    (180) actionStmt ::= actionStmt_start actions *

                    ACTIONNAME shift  169
                        action shift  251
                     {default} reduce 180

State 86:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
    (179) actionStmt ::= actionStmt_start action *

                    ACTIONNAME shift  169
                        action shift  252
                     {default} reduce 179

State 87:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= foreach_opener * nameList_nonEmpty COLON exprList_nonEmpty RPAREN

                          NAME shift  337
             nameList_nonEmpty shift  151

State 88:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  337
             nameList_nonEmpty shift  153

State 89:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  337
             nameList_nonEmpty shift  154

State 90:
          commaSkippable ::= * COMMA
     (81) commaSkippable ::= *
          expr ::= LSQBRACKET exprList * commaSkippable RSQBRACKET

                         COMMA shift  287
                commaSkippable shift  186
                     {default} reduce 81

State 91:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  209
              numList_nonEmpty shift  155

State 92:
          rbracket ::= * RBRACKET
          blockStmt ::= lbracket bodyStmtList return_stmt SEMICOLON * rbracket

                      RBRACKET shift  329
                      rbracket shift  326

State 93:
          rbracket ::= * RBRACKET
          blockStmt ::= lbracket return_stmt SEMICOLON * rbracket

                      RBRACKET shift  329
                      rbracket shift  328

State 94:
          dottedName ::= * NAME
          dottedName ::= * dottedName PERIOD NAME
          import_chunk ::= IMPORT * dottedName AS NAME
          import_chunk ::= IMPORT * dottedName

                          NAME shift  341
                    dottedName shift  158

State 95:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (101) lexpr ::= expr *
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  61
                            LE shift  59
                            LT shift  58
                            GE shift  57
                            GT shift  56
                            NE shift  60
                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                        RPAREN shift  304
                    LSQBRACKET shift  76
                     {default} reduce 101

State 96:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (101) lexpr ::= expr *
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  61
                            LE shift  59
                            LT shift  58
                            GE shift  57
                            GT shift  56
                            NE shift  60
                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 101

State 97:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lvalue ::= expr * LSQBRACKET expr RSQBRACKET
          lvalue ::= expr * PERIOD NAME
          assign_stmt ::= expr * INC
          assign_stmt ::= expr * DEC

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  183
                        LPAREN shift  19
                    LSQBRACKET shift  55
                           INC shift  283
                           DEC shift  282

State 98:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lvalue ::= expr LSQBRACKET expr * RSQBRACKET

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                    RSQBRACKET shift  125

State 99:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                        RPAREN shift  304
                    LSQBRACKET shift  76

State 100:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                    RSQBRACKET shift  305

State 101:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (126) assign_stmt ::= DEC expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 126

State 102:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (124) assign_stmt ::= INC expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 124

State 103:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lvalue ::= expr * LSQBRACKET expr RSQBRACKET
          lvalue ::= expr * PERIOD NAME

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  183
                        LPAREN shift  19
                    LSQBRACKET shift  55

State 104:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (137) assign_stmt ::= lvalue IBXR expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 137

State 105:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (136) assign_stmt ::= lvalue IBOR expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 136

State 106:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (135) assign_stmt ::= lvalue IBND expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 135

State 107:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (134) assign_stmt ::= lvalue IRSH expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 134

State 108:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (133) assign_stmt ::= lvalue ILSH expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 133

State 109:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (132) assign_stmt ::= lvalue IMOD expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 132

State 110:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (131) assign_stmt ::= lvalue IDIV expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 131

State 111:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (130) assign_stmt ::= lvalue IMUL expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 130

State 112:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (129) assign_stmt ::= lvalue ISUB expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 129

State 113:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (128) assign_stmt ::= lvalue IADD expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 128

State 114:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (122) assign_stmt ::= lvalue ASSIGN expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 122

State 115:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (108) lexpr ::= expr GT expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 108

State 116:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (107) lexpr ::= expr GE expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 107

State 117:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (106) lexpr ::= expr LT expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 106

State 118:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (105) lexpr ::= expr LE expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 105

State 119:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (104) lexpr ::= expr NE expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 104

State 120:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (103) lexpr ::= expr EQ expr *

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 103

State 121:
     (61) exprList_nonEmpty ::= expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 61

State 122:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (70) fArgs_nonEmpty ::= expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 70

State 123:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (72) fArgs_nonEmpty ::= NAME ASSIGN expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  67
                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 72

State 124:
     (67) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
    (117) lvalue ::= NAME *

                        ASSIGN reduce 117
                         COMMA reduce 117
                        LPAREN shift  20
                          IADD reduce 117
                          ISUB reduce 117
                          IMUL reduce 117
                          IDIV reduce 117
                          IMOD reduce 117
                          ILSH reduce 117
                          IRSH reduce 117
                          IBND reduce 117
                          IBOR reduce 117
                          IBXR reduce 117
                     {default} reduce 67

State 125:
     (69) expr ::= expr LSQBRACKET expr RSQBRACKET *
    (118) lvalue ::= expr LSQBRACKET expr RSQBRACKET *

                        ASSIGN reduce 118
                         COMMA reduce 118
                          IADD reduce 118
                          ISUB reduce 118
                          IMUL reduce 118
                          IDIV reduce 118
                          IMOD reduce 118
                          ILSH reduce 118
                          IRSH reduce 118
                          IBND reduce 118
                          IBOR reduce 118
                          IBXR reduce 118
                     {default} reduce 69

State 126:
     (68) expr ::= expr PERIOD NAME *
    (119) lvalue ::= expr PERIOD NAME *

                        ASSIGN reduce 119
                         COMMA reduce 119
                          IADD reduce 119
                          ISUB reduce 119
                          IMUL reduce 119
                          IDIV reduce 119
                          IMOD reduce 119
                          ILSH reduce 119
                          IRSH reduce 119
                          IBND reduce 119
                          IBOR reduce 119
                          IBXR reduce 119
                     {default} reduce 68

State 127:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (96) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  66
                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 96

State 128:
    (120) lvalueList_nonEmpty ::= lvalue *
          assign_stmt ::= lvalue * ASSIGN expr
          assign_stmt ::= lvalue * IADD expr
          assign_stmt ::= lvalue * ISUB expr
          assign_stmt ::= lvalue * IMUL expr
          assign_stmt ::= lvalue * IDIV expr
          assign_stmt ::= lvalue * IMOD expr
          assign_stmt ::= lvalue * ILSH expr
          assign_stmt ::= lvalue * IRSH expr
          assign_stmt ::= lvalue * IBND expr
          assign_stmt ::= lvalue * IBOR expr
          assign_stmt ::= lvalue * IBXR expr

                        ASSIGN shift  54
                          IADD shift  53
                          ISUB shift  52
                          IMUL shift  51
                          IDIV shift  50
                          IMOD shift  49
                          ILSH shift  48
                          IRSH shift  47
                          IBND shift  46
                          IBOR shift  45
                          IBXR shift  44
                     {default} reduce 120

State 129:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (97) expr ::= expr BITXOR expr *

                        BITAND shift  68
                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 97

State 130:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (95) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  70
                        RSHIFT shift  69
                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 95

State 131:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (94) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 94

State 132:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (93) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  75
                         MINUS shift  74
                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 93

State 133:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (89) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 89

State 134:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
     (88) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  72
                      MULTIPLY shift  73
                           MOD shift  71
                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 88

State 135:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          for_header2 ::= for_header1 lexpr * SEMICOLON

                           LOR shift  28
                          LAND shift  29
                     SEMICOLON shift  264

State 136:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  28
                          LAND shift  29
                        RPAREN shift  273

State 137:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  28
                          LAND shift  29
                        RPAREN shift  276

State 138:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  28
                          LAND shift  29
                        RPAREN shift  279

State 139:
          expr ::= L2V LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  28
                          LAND shift  29
                        RPAREN shift  288

State 140:
          lexpr ::= LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  28
                          LAND shift  29
                        RPAREN shift  293

State 141:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (100) expr ::= BITNOT expr *

                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 100

State 142:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (99) expr ::= MINUS expr *

                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 99

State 143:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (98) expr ::= PLUS expr *

                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 98

State 144:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (92) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 92

State 145:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (91) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 91

State 146:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (90) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        PERIOD shift  212
                        LPAREN shift  19
                    LSQBRACKET shift  76
                     {default} reduce 90

State 147:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_global_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  33
                         COMMA shift  229

State 148:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (112) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  34
                         COMMA shift  229
                     {default} reduce 112

State 149:
          object_body ::= object_body VAR nameList_nonEmpty * SEMICOLON
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  229
                     SEMICOLON shift  245

State 150:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty * RPAREN

                         COMMA shift  40
                        RPAREN shift  258

State 151:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= foreach_opener nameList_nonEmpty * COLON exprList_nonEmpty RPAREN

                         COMMA shift  229
                         COLON shift  35

State 152:
          lvalueList_nonEmpty ::= lvalueList_nonEmpty * COMMA lvalue
          assign_stmt ::= lvalueList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  36
                         COMMA shift  37

State 153:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  38
                         COMMA shift  229

State 154:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (112) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  39
                         COMMA shift  229
                     {default} reduce 112

State 155:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  208
                    RSQBRACKET shift  207

State 156:
     (67) expr ::= NAME *
          fArgs_nonEmpty ::= NAME * ASSIGN expr
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        ASSIGN shift  77
                        LPAREN shift  20
                     {default} reduce 67

State 157:
          bodyStmt ::= funcexpr * SEMICOLON
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (78) expr ::= funcexpr *

                     SEMICOLON shift  319
                    LSQBRACKET shift  220
                     {default} reduce 78

State 158:
          dottedName ::= dottedName * PERIOD NAME
          import_chunk ::= IMPORT dottedName * AS NAME
     (14) import_chunk ::= IMPORT dottedName *

                        PERIOD shift  236
                            AS shift  235
                     {default} reduce 14

State 159:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (116) cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  40
                     {default} reduce 116

State 160:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (114) vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  40
                     {default} reduce 114

State 161:
          method_header ::= FUNCTION NAME LPAREN nameList * RPAREN

                        RPAREN shift  244

State 162:
          method_header ::= FUNCTION NAME * LPAREN nameList RPAREN

                        LPAREN shift  79

State 163:
          method_header ::= FUNCTION * NAME LPAREN nameList RPAREN

                          NAME shift  162

State 164:
          object_header ::= OBJECT NAME * LBRACKET

                      LBRACKET shift  247

State 165:
          object_header ::= OBJECT * NAME LBRACKET

                          NAME shift  164

State 166:
          blockStmt ::= lbracket error * RBRACKET
     (49) bodyStmtList ::= error *

                      RBRACKET shift  249
                     {default} reduce 49

State 167:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  253

State 168:
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                        RPAREN shift  167

State 169:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  17

State 170:
          foreach_opener ::= FOREACH * LPAREN

                        LPAREN shift  259

State 171:
          for_header ::= for_header2 for_action_stmt * RPAREN

                        RPAREN shift  261

State 172:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (161) for_action_stmt ::= for_action_stmt_nonEmpty *

                         COMMA shift  15
                     {default} reduce 161

State 173:
          for_header1 ::= for_opener for_init_stmt * SEMICOLON

                     SEMICOLON shift  265

State 174:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (156) for_init_stmt ::= for_init_stmt_nonEmpty *

                         COMMA shift  13
                     {default} reduce 156

State 175:
          for_opener ::= FOR * LPAREN

                        LPAREN shift  271

State 176:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  24

State 177:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  25

State 178:
          elif_start ::= ELSE * IF
    (144) else_header ::= ELSE *

                            IF shift  277
                     {default} reduce 144

State 179:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  26

State 180:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (123) assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  40
                     {default} reduce 123

State 181:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (115) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  40
                     {default} reduce 115

State 182:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (113) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  40
                     {default} reduce 113

State 183:
          expr ::= expr PERIOD * NAME
          lvalue ::= expr PERIOD * NAME

                          NAME shift  126

State 184:
          funcexpr ::= NAME LPAREN fArgs * RPAREN

                        RPAREN shift  284

State 185:
          funcexpr ::= expr LPAREN fArgs * RPAREN

                        RPAREN shift  285

State 186:
          expr ::= LSQBRACKET exprList commaSkippable * RSQBRACKET

                    RSQBRACKET shift  286

State 187:
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  290

State 188:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  16

State 189:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
    (110) lexpr ::= lexpr LOR lexpr *

                          LAND shift  29
                     {default} reduce 110

State 190:
          lexpr ::= KILLS LPAREN fArgs * RPAREN

                        RPAREN shift  294

State 191:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  295

State 192:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  191

State 193:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  192

State 194:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  296

State 195:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  194

State 196:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  195

State 197:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  297

State 198:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  197

State 199:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  198

State 200:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  298

State 201:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  200

State 202:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  201

State 203:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (75) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  32
                     {default} reduce 75

State 204:
     (66) expr ::= KILLS *
          lexpr ::= KILLS * LPAREN fArgs RPAREN

                        LPAREN shift  18
                     {default} reduce 66

State 205:
          expr ::= L2V * LPAREN lexpr RPAREN

                        LPAREN shift  31

State 206:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (64) exprList ::= exprList_nonEmpty *

                         COMMA shift  40
                     {default} reduce 64

State 207:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  302

State 208:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  303

State 209:
     (53) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  217
                     {default} reduce 53

State 210:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  91

State 211:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (78) expr ::= funcexpr *

                    LSQBRACKET shift  210
                     {default} reduce 78

State 212:
          expr ::= expr PERIOD * NAME

                          NAME shift  306

State 213:
     (67) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        LPAREN shift  20
                     {default} reduce 67

State 214:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (78) expr ::= funcexpr *

                    LSQBRACKET shift  220
                     {default} reduce 78

State 215:
          bodyStmt ::= break_stmt * SEMICOLON

                     SEMICOLON shift  311

State 216:
          bodyStmt ::= continue_stmt * SEMICOLON

                     SEMICOLON shift  312

State 217:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  318

State 218:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  217

State 219:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  218

State 220:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  219

State 221:
          bodyStmt ::= assign_stmt * SEMICOLON

                     SEMICOLON shift  320

State 222:
          bodyStmt ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  321

State 223:
          bodyStmt ::= vdefAssign_stmt * SEMICOLON

                     SEMICOLON shift  322

State 224:
          bodyStmt ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  323

State 225:
          blockStmt ::= lbracket bodyStmtList return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  92

State 226:
          blockStmt ::= lbracket return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  93

State 227:
          stmt ::= return_stmt * SEMICOLON

                     SEMICOLON shift  332

State 228:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  334

State 229:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  336

State 230:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
     (58) nameList ::= nameList_nonEmpty *

                         COMMA shift  229
                     {default} reduce 58

State 231:
     (15) fdef_header ::= FUNCTION NAME LPAREN nameList RPAREN *
          fdecl_chunk ::= FUNCTION NAME LPAREN nameList RPAREN * SEMICOLON

                     SEMICOLON shift  338
                     {default} reduce 15

State 232:
          fdef_header ::= FUNCTION NAME LPAREN nameList * RPAREN
          fdecl_chunk ::= FUNCTION NAME LPAREN nameList * RPAREN SEMICOLON

                        RPAREN shift  231

State 233:
          fdef_header ::= FUNCTION NAME * LPAREN nameList RPAREN
          fdecl_chunk ::= FUNCTION NAME * LPAREN nameList RPAREN SEMICOLON

                        LPAREN shift  81

State 234:
          fdef_header ::= FUNCTION * NAME LPAREN nameList RPAREN
          fdecl_chunk ::= FUNCTION * NAME LPAREN nameList RPAREN SEMICOLON

                          NAME shift  233

State 235:
          import_chunk ::= IMPORT dottedName AS * NAME

                          NAME shift  339

State 236:
          dottedName ::= dottedName PERIOD * NAME

                          NAME shift  340

State 237:
          chunk ::= cdef_global_stmt * SEMICOLON

                     SEMICOLON shift  343

State 238:
          chunk ::= vdefAssign_global_stmt * SEMICOLON

                     SEMICOLON shift  344

State 239:
          chunk ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  345

State 240:
          chunk ::= import_chunk * SEMICOLON

                     SEMICOLON shift  349

State 241:
     (24) object_chunk ::= object_body RBRACKET *

                     {default} reduce 24

State 242:
     (23) object_body ::= object_body method_chunk *

                     {default} reduce 23

State 243:
     (22) method_chunk ::= method_header stmt *

                     {default} reduce 22

State 244:
     (21) method_header ::= FUNCTION NAME LPAREN nameList RPAREN *

                     {default} reduce 21

State 245:
     (20) object_body ::= object_body VAR nameList_nonEmpty SEMICOLON *

                     {default} reduce 20

State 246:
     (19) object_body ::= object_header *

                     {default} reduce 19

State 247:
     (18) object_header ::= OBJECT NAME LBRACKET *

                     {default} reduce 18

State 248:
     (50) bodyStmtList ::= bodyStmt *

                     {default} reduce 50

State 249:
     (34) blockStmt ::= lbracket error RBRACKET *

                     {default} reduce 34

State 250:
    (146) if_stmt ::= if_block else_header stmt *

                     {default} reduce 146

State 251:
    (177) actions ::= actions action *

                     {default} reduce 177

State 252:
    (176) actions ::= action action *

                     {default} reduce 176

State 253:
    (175) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 175

State 254:
    (171) return_stmt ::= RETURN exprList *

                     {default} reduce 171

State 255:
    (170) break_stmt ::= BREAK *

                     {default} reduce 170

State 256:
    (169) continue_stmt ::= CONTINUE *

                     {default} reduce 169

State 257:
    (168) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 168

State 258:
    (167) foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN *

                     {default} reduce 167

State 259:
    (166) foreach_opener ::= FOREACH LPAREN *

                     {default} reduce 166

State 260:
    (165) for_stmt ::= for_header stmt *

                     {default} reduce 165

State 261:
    (164) for_header ::= for_header2 for_action_stmt RPAREN *

                     {default} reduce 164

State 262:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (159) for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty *

                     {default} reduce 159

State 263:
    (158) for_action_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 158

State 264:
    (163) for_header2 ::= for_header1 lexpr SEMICOLON *

                     {default} reduce 163

State 265:
    (162) for_header1 ::= for_opener for_init_stmt SEMICOLON *

                     {default} reduce 162

State 266:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (155) for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty *

                     {default} reduce 155

State 267:
    (154) for_init_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 154

State 268:
    (153) for_init_stmt_nonEmpty ::= cdef_stmt *

                     {default} reduce 153

State 269:
    (152) for_init_stmt_nonEmpty ::= vdefAssign_stmt *

                     {default} reduce 152

State 270:
    (151) for_init_stmt_nonEmpty ::= vdef_stmt *

                     {default} reduce 151

State 271:
    (150) for_opener ::= FOR LPAREN *

                     {default} reduce 150

State 272:
    (149) while_stmt ::= while_header stmt *

                     {default} reduce 149

State 273:
    (148) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 148

State 274:
    (147) while_start ::= WHILE *

                     {default} reduce 147

State 275:
    (143) if_block ::= if_block elif_header stmt *

                     {default} reduce 143

State 276:
    (142) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 142

State 277:
    (141) elif_start ::= ELSE IF *

                     {default} reduce 141

State 278:
    (140) if_block ::= if_header stmt *

                     {default} reduce 140

State 279:
    (139) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 139

State 280:
    (138) if_start ::= IF *

                     {default} reduce 138

State 281:
    (121) lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA lvalue *

                     {default} reduce 121

State 282:
    (127) assign_stmt ::= expr DEC *

                     {default} reduce 127

State 283:
    (125) assign_stmt ::= expr INC *

                     {default} reduce 125

State 284:
     (76) funcexpr ::= NAME LPAREN fArgs RPAREN *

                     {default} reduce 76

State 285:
     (77) funcexpr ::= expr LPAREN fArgs RPAREN *

                     {default} reduce 77

State 286:
     (82) expr ::= LSQBRACKET exprList commaSkippable RSQBRACKET *

                     {default} reduce 82

State 287:
     (80) commaSkippable ::= COMMA *

                     {default} reduce 80

State 288:
     (83) expr ::= L2V LPAREN lexpr RPAREN *

                     {default} reduce 83

State 289:
    (174) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 174

State 290:
    (172) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 172

State 291:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
    (111) lexpr ::= LNOT lexpr *

                     {default} reduce 111

State 292:
          lexpr ::= lexpr * LAND lexpr
    (109) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 109

State 293:
    (102) lexpr ::= LPAREN lexpr RPAREN *

                     {default} reduce 102

State 294:
    (173) lexpr ::= KILLS LPAREN fArgs RPAREN *

                     {default} reduce 173

State 295:
     (87) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 87

State 296:
     (86) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 86

State 297:
     (85) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 85

State 298:
     (84) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 84

State 299:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (73) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArgs_nonEmpty *

                     {default} reduce 73

State 300:
     (71) fArgs_nonEmpty ::= STRING *

                     {default} reduce 71

State 301:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (62) exprList_nonEmpty ::= exprList_nonEmpty COMMA exprList_nonEmpty *

                     {default} reduce 62

State 302:
     (59) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 59

State 303:
     (54) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 54

State 304:
     (79) expr ::= LPAREN expr RPAREN *

                     {default} reduce 79

State 305:
     (69) expr ::= expr LSQBRACKET expr RSQBRACKET *

                     {default} reduce 69

State 306:
     (68) expr ::= expr PERIOD NAME *

                     {default} reduce 68

State 307:
     (66) expr ::= KILLS *

                     {default} reduce 66

State 308:
     (65) expr ::= NUMBER *

                     {default} reduce 65

State 309:
     (52) bodyStmtList ::= bodyStmtList error *

                     {default} reduce 52

State 310:
     (51) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 51

State 311:
     (48) bodyStmt ::= break_stmt SEMICOLON *

                     {default} reduce 48

State 312:
     (47) bodyStmt ::= continue_stmt SEMICOLON *

                     {default} reduce 47

State 313:
     (46) bodyStmt ::= foreach_stmt *

                     {default} reduce 46

State 314:
     (45) bodyStmt ::= for_stmt *

                     {default} reduce 45

State 315:
     (44) bodyStmt ::= while_stmt *

                     {default} reduce 44

State 316:
     (43) bodyStmt ::= if_stmt *

                     {default} reduce 43

State 317:
     (42) bodyStmt ::= actionStmt *

                     {default} reduce 42

State 318:
     (60) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 60

State 319:
     (41) bodyStmt ::= funcexpr SEMICOLON *

                     {default} reduce 41

State 320:
     (40) bodyStmt ::= assign_stmt SEMICOLON *

                     {default} reduce 40

State 321:
     (39) bodyStmt ::= cdef_stmt SEMICOLON *

                     {default} reduce 39

State 322:
     (38) bodyStmt ::= vdefAssign_stmt SEMICOLON *

                     {default} reduce 38

State 323:
     (37) bodyStmt ::= vdef_stmt SEMICOLON *

                     {default} reduce 37

State 324:
     (36) bodyStmt ::= SEMICOLON *

                     {default} reduce 36

State 325:
     (35) bodyStmt ::= blockStmt *

                     {default} reduce 35

State 326:
     (33) blockStmt ::= lbracket bodyStmtList return_stmt SEMICOLON rbracket *

                     {default} reduce 33

State 327:
     (32) blockStmt ::= lbracket bodyStmtList rbracket *

                     {default} reduce 32

State 328:
     (31) blockStmt ::= lbracket return_stmt SEMICOLON rbracket *

                     {default} reduce 31

State 329:
     (29) rbracket ::= RBRACKET *

                     {default} reduce 29

State 330:
     (30) blockStmt ::= lbracket RBRACKET *

                     {default} reduce 30

State 331:
     (28) lbracket ::= LBRACKET *

                     {default} reduce 28

State 332:
     (27) stmt ::= return_stmt SEMICOLON *

                     {default} reduce 27

State 333:
     (26) stmt ::= bodyStmt *

                     {default} reduce 26

State 334:
     (25) stmt ::= error SEMICOLON *

                     {default} reduce 25

State 335:
     (16) fdef_chunk ::= fdef_header stmt *

                     {default} reduce 16

State 336:
     (56) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 56

State 337:
     (55) nameList_nonEmpty ::= NAME *

                     {default} reduce 55

State 338:
     (17) fdecl_chunk ::= FUNCTION NAME LPAREN nameList RPAREN SEMICOLON *

                     {default} reduce 17

State 339:
     (13) import_chunk ::= IMPORT dottedName AS NAME *

                     {default} reduce 13

State 340:
     (12) dottedName ::= dottedName PERIOD NAME *

                     {default} reduce 12

State 341:
     (11) dottedName ::= NAME *

                     {default} reduce 11

State 342:
     (10) chunk ::= blockStmt *

                     {default} reduce 10

State 343:
      (9) chunk ::= cdef_global_stmt SEMICOLON *

                     {default} reduce 9

State 344:
      (8) chunk ::= vdefAssign_global_stmt SEMICOLON *

                     {default} reduce 8

State 345:
      (7) chunk ::= vdef_stmt SEMICOLON *

                     {default} reduce 7

State 346:
      (6) chunk ::= object_chunk *

                     {default} reduce 6

State 347:
      (5) chunk ::= fdecl_chunk *

                     {default} reduce 5

State 348:
      (4) chunk ::= fdef_chunk *

                     {default} reduce 4

State 349:
      (3) chunk ::= import_chunk SEMICOLON *

                     {default} reduce 3

State 350:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: ASSIGN
    2: COMMA
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: SEMICOLON
   28: PERIOD
   29: IMPORT
   30: AS
   31: FUNCTION
   32: LPAREN
   33: RPAREN
   34: OBJECT
   35: LBRACKET
   36: VAR
   37: RBRACKET
   38: LSQBRACKET
   39: RSQBRACKET
   40: KILLS
   41: STRING
   42: FUNCCALL
   43: L2V
   44: MAPSTRING
   45: UNIT
   46: SWITCH
   47: LOCATION
   48: CONST
   49: INC
   50: DEC
   51: IADD
   52: ISUB
   53: IMUL
   54: IDIV
   55: IMOD
   56: ILSH
   57: IRSH
   58: IBND
   59: IBOR
   60: IBXR
   61: IF
   62: ELSE
   63: WHILE
   64: FOR
   65: FOREACH
   66: COLON
   67: CONTINUE
   68: BREAK
   69: RETURN
   70: CONDITIONNAME
   71: ACTIONNAME
   72: error:
   73: nt:
   74: program: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   75: chunks: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   76: chunk: IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   77: import_chunk: IMPORT
   78: fdef_chunk: FUNCTION
   79: fdecl_chunk: FUNCTION
   80: object_chunk: OBJECT
   81: vdef_stmt: VAR
   82: vdefAssign_global_stmt: VAR
   83: cdef_global_stmt: CONST
   84: blockStmt: LBRACKET
   85: dottedName: NAME
   86: fdef_header: FUNCTION
   87: nameList: <lambda> NAME
   88: stmt: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET VAR LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK RETURN ACTIONNAME
   89: object_header: OBJECT
   90: object_body: OBJECT
   91: nameList_nonEmpty: NAME
   92: method_header: FUNCTION
   93: method_chunk: FUNCTION
   94: bodyStmt: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET VAR LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK ACTIONNAME
   95: return_stmt: RETURN
   96: lbracket: LBRACKET
   97: rbracket: RBRACKET
   98: bodyStmtList: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET VAR LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK ACTIONNAME
   99: vdefAssign_stmt: VAR
  100: cdef_stmt: CONST
  101: assign_stmt: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC
  102: funcexpr: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  103: actionStmt: ACTIONNAME
  104: if_stmt: IF
  105: while_stmt: WHILE
  106: for_stmt: FOR
  107: foreach_stmt: FOREACH
  108: continue_stmt: CONTINUE
  109: break_stmt: BREAK
  110: numList_nonEmpty: NUMBER
  111: exprList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  112: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  113: exprList: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  114: fArgs_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION
  115: fArgs: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION
  116: commaSkippable: <lambda> COMMA
  117: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
  118: lvalue: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  119: lvalueList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  120: if_start: IF
  121: if_header: IF
  122: if_block: IF
  123: elif_start: ELSE
  124: elif_header: ELSE
  125: else_header: ELSE
  126: while_start: WHILE
  127: while_header: WHILE
  128: for_opener: FOR
  129: for_init_stmt_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN VAR LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC
  130: for_init_stmt: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN VAR LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC
  131: for_action_stmt_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC
  132: for_action_stmt: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC
  133: for_header1: FOR
  134: for_header2: FOR
  135: for_header: FOR
  136: foreach_opener: FOREACH
  137: foreach_header: FOREACH
  138: action: ACTIONNAME
  139: actions: ACTIONNAME
  140: actionStmt_start: <lambda>
