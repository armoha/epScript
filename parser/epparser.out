State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  12
                     {default} reduce 1

State 1:
          lbracket ::= * LBRACKET
          rbracket ::= * RBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= lbracket bodyStmtList * rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket bodyStmtList * return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  104
                     SEMICOLON shift  275
                        LPAREN shift  68
                      LBRACKET shift  282
                      RBRACKET shift  280
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                           VAR shift  77
                         CONST shift  75
                            IF shift  236
                         WHILE shift  230
                           FOR shift  144
                       FOREACH shift  141
                      CONTINUE shift  211
                         BREAK shift  210
                        RETURN shift  19
                    ACTIONNAME shift  139
                         error shift  260
                     vdef_stmt shift  189
                     cdef_stmt shift  187
                      bodyStmt shift  261
                   return_stmt shift  190
                      lbracket shift  2
                      rbracket shift  278
                     blockStmt shift  276
               vdefAssign_stmt shift  188
                   assign_stmt shift  186
                      funcexpr shift  133
                    actionStmt shift  268
                       if_stmt shift  267
                    while_stmt shift  266
                      for_stmt shift  265
                  foreach_stmt shift  264
                 continue_stmt shift  181
                    break_stmt shift  180
                          expr shift  96
                        lvalue shift  107
           lvalueList_nonEmpty shift  128
                      if_start shift  148
                     if_header shift  8
                      if_block shift  36
                   while_start shift  145
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  20
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  74
                foreach_header shift  4
                        action shift  73
                       actions shift  72

State 2:
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= lbracket * RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket * return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= lbracket * bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket * bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmt ::= lbracket * error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  104
                     SEMICOLON shift  275
                        LPAREN shift  68
                      LBRACKET shift  282
                      RBRACKET shift  281
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                           VAR shift  77
                         CONST shift  75
                            IF shift  236
                         WHILE shift  230
                           FOR shift  144
                       FOREACH shift  141
                      CONTINUE shift  211
                         BREAK shift  210
                        RETURN shift  19
                    ACTIONNAME shift  139
                         error shift  136
                     vdef_stmt shift  189
                     cdef_stmt shift  187
                      bodyStmt shift  203
                   return_stmt shift  191
                      lbracket shift  2
                     blockStmt shift  276
                  bodyStmtList shift  1
               vdefAssign_stmt shift  188
                   assign_stmt shift  186
                      funcexpr shift  133
                    actionStmt shift  268
                       if_stmt shift  267
                    while_stmt shift  266
                      for_stmt shift  265
                  foreach_stmt shift  264
                 continue_stmt shift  181
                    break_stmt shift  180
                          expr shift  96
                        lvalue shift  107
           lvalueList_nonEmpty shift  128
                      if_start shift  148
                     if_header shift  8
                      if_block shift  36
                   while_start shift  145
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  20
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  74
                foreach_header shift  4
                        action shift  73
                       actions shift  72

State 3:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  104
                     SEMICOLON shift  275
                        LPAREN shift  68
                      LBRACKET shift  282
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                           VAR shift  77
                         CONST shift  75
                            IF shift  236
                         WHILE shift  230
                           FOR shift  144
                       FOREACH shift  141
                      CONTINUE shift  211
                         BREAK shift  210
                        RETURN shift  19
                    ACTIONNAME shift  139
                         error shift  193
                     vdef_stmt shift  189
                     cdef_stmt shift  187
                          stmt shift  205
                      bodyStmt shift  284
                   return_stmt shift  192
                      lbracket shift  2
                     blockStmt shift  276
               vdefAssign_stmt shift  188
                   assign_stmt shift  186
                      funcexpr shift  133
                    actionStmt shift  268
                       if_stmt shift  267
                    while_stmt shift  266
                      for_stmt shift  265
                  foreach_stmt shift  264
                 continue_stmt shift  181
                    break_stmt shift  180
                          expr shift  96
                        lvalue shift  107
           lvalueList_nonEmpty shift  128
                      if_start shift  148
                     if_header shift  8
                      if_block shift  36
                   while_start shift  145
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  20
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  74
                foreach_header shift  4
                        action shift  73
                       actions shift  72

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  104
                     SEMICOLON shift  275
                        LPAREN shift  68
                      LBRACKET shift  282
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                           VAR shift  77
                         CONST shift  75
                            IF shift  236
                         WHILE shift  230
                           FOR shift  144
                       FOREACH shift  141
                      CONTINUE shift  211
                         BREAK shift  210
                        RETURN shift  19
                    ACTIONNAME shift  139
                         error shift  193
                     vdef_stmt shift  189
                     cdef_stmt shift  187
                          stmt shift  212
                      bodyStmt shift  284
                   return_stmt shift  192
                      lbracket shift  2
                     blockStmt shift  276
               vdefAssign_stmt shift  188
                   assign_stmt shift  186
                      funcexpr shift  133
                    actionStmt shift  268
                       if_stmt shift  267
                    while_stmt shift  266
                      for_stmt shift  265
                  foreach_stmt shift  264
                 continue_stmt shift  181
                    break_stmt shift  180
                          expr shift  96
                        lvalue shift  107
           lvalueList_nonEmpty shift  128
                      if_start shift  148
                     if_header shift  8
                      if_block shift  36
                   while_start shift  145
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  20
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  74
                foreach_header shift  4
                        action shift  73
                       actions shift  72

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          for_stmt ::= for_header * stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  104
                     SEMICOLON shift  275
                        LPAREN shift  68
                      LBRACKET shift  282
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                           VAR shift  77
                         CONST shift  75
                            IF shift  236
                         WHILE shift  230
                           FOR shift  144
                       FOREACH shift  141
                      CONTINUE shift  211
                         BREAK shift  210
                        RETURN shift  19
                    ACTIONNAME shift  139
                         error shift  193
                     vdef_stmt shift  189
                     cdef_stmt shift  187
                          stmt shift  215
                      bodyStmt shift  284
                   return_stmt shift  192
                      lbracket shift  2
                     blockStmt shift  276
               vdefAssign_stmt shift  188
                   assign_stmt shift  186
                      funcexpr shift  133
                    actionStmt shift  268
                       if_stmt shift  267
                    while_stmt shift  266
                      for_stmt shift  265
                  foreach_stmt shift  264
                 continue_stmt shift  181
                    break_stmt shift  180
                          expr shift  96
                        lvalue shift  107
           lvalueList_nonEmpty shift  128
                      if_start shift  148
                     if_header shift  8
                      if_block shift  36
                   while_start shift  145
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  20
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  74
                foreach_header shift  4
                        action shift  73
                       actions shift  72

State 6:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  104
                     SEMICOLON shift  275
                        LPAREN shift  68
                      LBRACKET shift  282
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                           VAR shift  77
                         CONST shift  75
                            IF shift  236
                         WHILE shift  230
                           FOR shift  144
                       FOREACH shift  141
                      CONTINUE shift  211
                         BREAK shift  210
                        RETURN shift  19
                    ACTIONNAME shift  139
                         error shift  193
                     vdef_stmt shift  189
                     cdef_stmt shift  187
                          stmt shift  228
                      bodyStmt shift  284
                   return_stmt shift  192
                      lbracket shift  2
                     blockStmt shift  276
               vdefAssign_stmt shift  188
                   assign_stmt shift  186
                      funcexpr shift  133
                    actionStmt shift  268
                       if_stmt shift  267
                    while_stmt shift  266
                      for_stmt shift  265
                  foreach_stmt shift  264
                 continue_stmt shift  181
                    break_stmt shift  180
                          expr shift  96
                        lvalue shift  107
           lvalueList_nonEmpty shift  128
                      if_start shift  148
                     if_header shift  8
                      if_block shift  36
                   while_start shift  145
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  20
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  74
                foreach_header shift  4
                        action shift  73
                       actions shift  72

State 7:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  104
                     SEMICOLON shift  275
                        LPAREN shift  68
                      LBRACKET shift  282
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                           VAR shift  77
                         CONST shift  75
                            IF shift  236
                         WHILE shift  230
                           FOR shift  144
                       FOREACH shift  141
                      CONTINUE shift  211
                         BREAK shift  210
                        RETURN shift  19
                    ACTIONNAME shift  139
                         error shift  193
                     vdef_stmt shift  189
                     cdef_stmt shift  187
                          stmt shift  231
                      bodyStmt shift  284
                   return_stmt shift  192
                      lbracket shift  2
                     blockStmt shift  276
               vdefAssign_stmt shift  188
                   assign_stmt shift  186
                      funcexpr shift  133
                    actionStmt shift  268
                       if_stmt shift  267
                    while_stmt shift  266
                      for_stmt shift  265
                  foreach_stmt shift  264
                 continue_stmt shift  181
                    break_stmt shift  180
                          expr shift  96
                        lvalue shift  107
           lvalueList_nonEmpty shift  128
                      if_start shift  148
                     if_header shift  8
                      if_block shift  36
                   while_start shift  145
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  20
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  74
                foreach_header shift  4
                        action shift  73
                       actions shift  72

State 8:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  104
                     SEMICOLON shift  275
                        LPAREN shift  68
                      LBRACKET shift  282
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                           VAR shift  77
                         CONST shift  75
                            IF shift  236
                         WHILE shift  230
                           FOR shift  144
                       FOREACH shift  141
                      CONTINUE shift  211
                         BREAK shift  210
                        RETURN shift  19
                    ACTIONNAME shift  139
                         error shift  193
                     vdef_stmt shift  189
                     cdef_stmt shift  187
                          stmt shift  234
                      bodyStmt shift  284
                   return_stmt shift  192
                      lbracket shift  2
                     blockStmt shift  276
               vdefAssign_stmt shift  188
                   assign_stmt shift  186
                      funcexpr shift  133
                    actionStmt shift  268
                       if_stmt shift  267
                    while_stmt shift  266
                      for_stmt shift  265
                  foreach_stmt shift  264
                 continue_stmt shift  181
                    break_stmt shift  180
                          expr shift  96
                        lvalue shift  107
           lvalueList_nonEmpty shift  128
                      if_start shift  148
                     if_header shift  8
                      if_block shift  36
                   while_start shift  145
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  20
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  74
                foreach_header shift  4
                        action shift  73
                       actions shift  72

State 9:
          fdef_chunk ::= function_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  104
                     SEMICOLON shift  275
                        LPAREN shift  68
                      LBRACKET shift  282
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                           VAR shift  77
                         CONST shift  75
                            IF shift  236
                         WHILE shift  230
                           FOR shift  144
                       FOREACH shift  141
                      CONTINUE shift  211
                         BREAK shift  210
                        RETURN shift  19
                    ACTIONNAME shift  139
                         error shift  193
                     vdef_stmt shift  189
                     cdef_stmt shift  187
                          stmt shift  286
                      bodyStmt shift  284
                   return_stmt shift  192
                      lbracket shift  2
                     blockStmt shift  276
               vdefAssign_stmt shift  188
                   assign_stmt shift  186
                      funcexpr shift  133
                    actionStmt shift  268
                       if_stmt shift  267
                    while_stmt shift  266
                      for_stmt shift  265
                  foreach_stmt shift  264
                 continue_stmt shift  181
                    break_stmt shift  180
                          expr shift  96
                        lvalue shift  107
           lvalueList_nonEmpty shift  128
                      if_start shift  148
                     if_header shift  8
                      if_block shift  36
                   while_start shift  145
                  while_header shift  6
                    for_opener shift  10
                   for_header1 shift  20
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  74
                foreach_header shift  4
                        action shift  73
                       actions shift  72

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt ::= * for_init_stmt_nonEmpty
    (129) for_init_stmt ::= *
          for_header1 ::= for_opener * for_init_stmt SEMICOLON

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  104
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                           VAR shift  77
                         CONST shift  75
                     vdef_stmt shift  226
                     cdef_stmt shift  224
               vdefAssign_stmt shift  225
                   assign_stmt shift  223
                      funcexpr shift  179
                          expr shift  96
                        lvalue shift  107
           lvalueList_nonEmpty shift  128
        for_init_stmt_nonEmpty shift  143
                 for_init_stmt shift  142
                     {default} reduce 129

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA * for_init_stmt_nonEmpty

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  104
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                           VAR shift  77
                         CONST shift  75
                     vdef_stmt shift  226
                     cdef_stmt shift  224
               vdefAssign_stmt shift  225
                   assign_stmt shift  223
                      funcexpr shift  179
                          expr shift  96
                        lvalue shift  107
           lvalueList_nonEmpty shift  128
        for_init_stmt_nonEmpty shift  222

State 12:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunk ::= * import_chunk SEMICOLON
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt SEMICOLON
          chunk ::= * cdef_stmt SEMICOLON
          import_chunk ::= * FROM NAME IMPORT nameList_nonEmpty
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList_nonEmpty RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          vdef_stmt ::= * VAR nameList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty

                             $ reduce 0
                          FROM shift  199
                      FUNCTION shift  195
                           VAR shift  71
                         CONST shift  75
                         chunk shift  296
                  import_chunk shift  202
                    fdef_chunk shift  294
                     vdef_stmt shift  201
                     cdef_stmt shift  200
                function_start shift  194
               function_header shift  9

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_header ::= for_header2 * for_action_stmt_nonEmpty RPAREN
          for_header ::= for_header2 * RPAREN

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  104
                        LPAREN shift  68
                        RPAREN shift  216
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                   assign_stmt shift  219
                      funcexpr shift  179
                          expr shift  96
                        lvalue shift  107
           lvalueList_nonEmpty shift  128
      for_action_stmt_nonEmpty shift  127

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA * for_action_stmt_nonEmpty

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  104
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                   assign_stmt shift  219
                      funcexpr shift  179
                          expr shift  96
                        lvalue shift  107
           lvalueList_nonEmpty shift  128
      for_action_stmt_nonEmpty shift  218

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (56) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                        RPAREN shift  244
                        RPAREN reduce 56  ** Parsing conflict **
                        STRING shift  256
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  103
                fArgs_nonEmpty shift  176
                         fArgs shift  160

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (56) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                        STRING shift  256
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  103
                fArgs_nonEmpty shift  176
                         fArgs shift  138
                     {default} reduce 56

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (56) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          funcexpr ::= expr LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                        STRING shift  256
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  103
                fArgs_nonEmpty shift  176
                         fArgs shift  159
                     {default} reduce 56

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (56) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= NAME LPAREN * fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                        STRING shift  256
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  103
                fArgs_nonEmpty shift  176
                         fArgs shift  158
                     {default} reduce 56

State 19:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
     (47) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * exprList

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  156
             exprList_nonEmpty shift  140
                          expr shift  95
                      exprList shift  209
                     {default} reduce 47

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          for_header2 ::= for_header1 * lexpr SEMICOLON
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  25
                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                 CONDITIONNAME shift  161
                      funcexpr shift  179
                          expr shift  81
                         lexpr shift  114

State 21:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  25
                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                 CONDITIONNAME shift  161
                      funcexpr shift  179
                          expr shift  81
                         lexpr shift  115

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  25
                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                 CONDITIONNAME shift  161
                      funcexpr shift  179
                          expr shift  81
                         lexpr shift  116

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  25
                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                 CONDITIONNAME shift  161
                      funcexpr shift  179
                          expr shift  81
                         lexpr shift  117

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  24
                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                 CONDITIONNAME shift  161
                      funcexpr shift  179
                          expr shift  81
                         lexpr shift  246

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  24
                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                 CONDITIONNAME shift  161
                      funcexpr shift  179
                          expr shift  81
                         lexpr shift  247

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  25
                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                 CONDITIONNAME shift  161
                      funcexpr shift  179
                          expr shift  81
                         lexpr shift  162

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  25
                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                 CONDITIONNAME shift  161
                      funcexpr shift  179
                          expr shift  81
                         lexpr shift  248

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= L2V LPAREN * lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  25
                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                 CONDITIONNAME shift  161
                      funcexpr shift  179
                          expr shift  81
                         lexpr shift  118

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                        STRING shift  256
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  103
                fArgs_nonEmpty shift  255

State 30:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= foreach_opener nameList_nonEmpty COLON * exprList_nonEmpty RPAREN

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  156
             exprList_nonEmpty shift  125
                          expr shift  95

State 31:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalueList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  156
             exprList_nonEmpty shift  149
                          expr shift  95

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET NAME RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA * lvalue

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  104
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  96
                        lvalue shift  237

State 33:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  156
             exprList_nonEmpty shift  150
                          expr shift  95

State 34:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  156
             exprList_nonEmpty shift  238
                          expr shift  95

State 35:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  156
             exprList_nonEmpty shift  151
                          expr shift  95

State 36:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
    (117) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  147
                          ELSE reduce 117 ** Parsing conflict **
                    elif_start shift  146
                   elif_header shift  7
                   else_header shift  3
                     {default} reduce 117

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBXR * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  84

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBOR * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  85

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBND * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  86

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IRSH * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  87

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ILSH * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  88

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IMOD * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  89

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IDIV * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  90

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IMUL * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  91

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ISUB * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  92

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IADD * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  93

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ASSIGN * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  94

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= expr LSQBRACKET * NAME RSQBRACKET

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  132
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  83

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  97

State 50:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  98

State 51:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  99

State 52:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  100

State 53:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  101

State 54:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  119

State 55:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  120

State 56:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  121

State 57:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  102

State 58:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  108

State 59:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  106

State 60:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  109

State 61:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  110

State 62:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  111

State 63:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  122

State 64:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  123

State 65:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  124

State 66:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  112

State 67:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  113

State 68:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  82

State 69:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  56
                         MINUS shift  55
                        BITNOT shift  54
                        NUMBER shift  259
                          NAME shift  178
                        LPAREN shift  68
                           L2V shift  175
                     MAPSTRING shift  174
                          UNIT shift  171
                        SWITCH shift  168
                      LOCATION shift  165
                      funcexpr shift  179
                          expr shift  83

State 70:
          function_header ::= function_start LPAREN * nameList_nonEmpty RPAREN
          function_header ::= function_start LPAREN * RPAREN
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  290
                        RPAREN shift  287
             nameList_nonEmpty shift  134

State 71:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty

                          NAME shift  290
             nameList_nonEmpty shift  135

State 72:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
    (149) actionStmt ::= actions *

                    ACTIONNAME shift  139
                    ACTIONNAME reduce 149 ** Parsing conflict **
                        action shift  206
                     {default} reduce 149

State 73:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
    (148) actionStmt ::= action *

                    ACTIONNAME shift  139
                    ACTIONNAME reduce 148 ** Parsing conflict **
                        action shift  207
                     {default} reduce 148

State 74:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= foreach_opener * nameList_nonEmpty COLON exprList_nonEmpty RPAREN

                          NAME shift  290
             nameList_nonEmpty shift  126

State 75:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  290
             nameList_nonEmpty shift  129

State 76:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  154
              numList_nonEmpty shift  130

State 77:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  290
             nameList_nonEmpty shift  131

State 78:
          rbracket ::= * RBRACKET
          blockStmt ::= lbracket bodyStmtList return_stmt SEMICOLON * rbracket

                      RBRACKET shift  280
                      rbracket shift  277

State 79:
          rbracket ::= * RBRACKET
          blockStmt ::= lbracket return_stmt SEMICOLON * rbracket

                      RBRACKET shift  280
                      rbracket shift  279

State 80:
          import_chunk ::= FROM NAME IMPORT * nameList_nonEmpty
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  290
             nameList_nonEmpty shift  197

State 81:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  57
                            LE shift  52
                            LT shift  51
                            GE shift  50
                            GT shift  49
                            NE shift  53
                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177

State 82:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                        RPAREN shift  254
                    LSQBRACKET shift  69
                        PERIOD shift  177

State 83:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                    RSQBRACKET shift  257
                        PERIOD shift  177

State 84:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (109) assign_stmt ::= lvalue IBXR expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 109

State 85:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (108) assign_stmt ::= lvalue IBOR expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 108

State 86:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (107) assign_stmt ::= lvalue IBND expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 107

State 87:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (106) assign_stmt ::= lvalue IRSH expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 106

State 88:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (105) assign_stmt ::= lvalue ILSH expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 105

State 89:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (104) assign_stmt ::= lvalue IMOD expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 104

State 90:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (103) assign_stmt ::= lvalue IDIV expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 103

State 91:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (102) assign_stmt ::= lvalue IMUL expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 102

State 92:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (101) assign_stmt ::= lvalue ISUB expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 101

State 93:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (100) assign_stmt ::= lvalue IADD expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 100

State 94:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (98) assign_stmt ::= lvalue ASSIGN expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 98

State 95:
     (45) exprList_nonEmpty ::= expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 45

State 96:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lvalue ::= expr * LSQBRACKET NAME RSQBRACKET
          lvalue ::= expr * PERIOD NAME

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  48
                        PERIOD shift  157

State 97:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (85) lexpr ::= expr GT expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 85

State 98:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (84) lexpr ::= expr GE expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 84

State 99:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (83) lexpr ::= expr LT expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 83

State 100:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (82) lexpr ::= expr LE expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 82

State 101:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (81) lexpr ::= expr NE expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 81

State 102:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (80) lexpr ::= expr EQ expr *

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 80

State 103:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (53) fArgs_nonEmpty ::= expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  59
                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                    LSQBRACKET shift  69
                        PERIOD shift  177
                     {default} reduce 53

State 104:
     (50) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
     (93) lvalue ::= NAME *

                         BITOR reduce 50
                        BITXOR reduce 50
                        BITAND reduce 50
                        LSHIFT reduce 50
                        RSHIFT reduce 50
                          PLUS reduce 50
                         MINUS reduce 50
                        DIVIDE reduce 50
                      MULTIPLY reduce 50
                           MOD reduce 50
                        LPAREN shift  18
                        LPAREN reduce 50  ** Parsing conflict **
                    LSQBRACKET reduce 50
                        PERIOD reduce 50
                     {default} reduce 93

State 105:
     (51) expr ::= expr PERIOD NAME *
     (95) lvalue ::= expr PERIOD NAME *

                        ASSIGN reduce 95
                         COMMA reduce 95
                          IADD reduce 95
                          ISUB reduce 95
                          IMUL reduce 95
                          IDIV reduce 95
                          IMOD reduce 95
                          ILSH reduce 95
                          IRSH reduce 95
                          IBND reduce 95
                          IBOR reduce 95
                          IBXR reduce 95
                     {default} reduce 51

State 106:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (75) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  58
                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                        LPAREN reduce 75  ** Parsing conflict **
                    LSQBRACKET shift  69
                    LSQBRACKET reduce 75  ** Parsing conflict **
                        PERIOD shift  177
                        PERIOD reduce 75  ** Parsing conflict **
                     {default} reduce 75

State 107:
     (96) lvalueList_nonEmpty ::= lvalue *
          assign_stmt ::= lvalue * ASSIGN expr
          assign_stmt ::= lvalue * IADD expr
          assign_stmt ::= lvalue * ISUB expr
          assign_stmt ::= lvalue * IMUL expr
          assign_stmt ::= lvalue * IDIV expr
          assign_stmt ::= lvalue * IMOD expr
          assign_stmt ::= lvalue * ILSH expr
          assign_stmt ::= lvalue * IRSH expr
          assign_stmt ::= lvalue * IBND expr
          assign_stmt ::= lvalue * IBOR expr
          assign_stmt ::= lvalue * IBXR expr

                        ASSIGN shift  47
                        ASSIGN reduce 96  ** Parsing conflict **
                          IADD shift  46
                          ISUB shift  45
                          IMUL shift  44
                          IDIV shift  43
                          IMOD shift  42
                          ILSH shift  41
                          IRSH shift  40
                          IBND shift  39
                          IBOR shift  38
                          IBXR shift  37
                     {default} reduce 96

State 108:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (76) expr ::= expr BITXOR expr *

                        BITAND shift  60
                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                        LPAREN reduce 76  ** Parsing conflict **
                    LSQBRACKET shift  69
                    LSQBRACKET reduce 76  ** Parsing conflict **
                        PERIOD shift  177
                        PERIOD reduce 76  ** Parsing conflict **
                     {default} reduce 76

State 109:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (74) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  62
                        RSHIFT shift  61
                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                        LPAREN reduce 74  ** Parsing conflict **
                    LSQBRACKET shift  69
                    LSQBRACKET reduce 74  ** Parsing conflict **
                        PERIOD shift  177
                        PERIOD reduce 74  ** Parsing conflict **
                     {default} reduce 74

State 110:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (73) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                        LPAREN reduce 73  ** Parsing conflict **
                    LSQBRACKET shift  69
                    LSQBRACKET reduce 73  ** Parsing conflict **
                        PERIOD shift  177
                        PERIOD reduce 73  ** Parsing conflict **
                     {default} reduce 73

State 111:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (72) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  67
                         MINUS shift  66
                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                        LPAREN reduce 72  ** Parsing conflict **
                    LSQBRACKET shift  69
                    LSQBRACKET reduce 72  ** Parsing conflict **
                        PERIOD shift  177
                        PERIOD reduce 72  ** Parsing conflict **
                     {default} reduce 72

State 112:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (68) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                        LPAREN reduce 68  ** Parsing conflict **
                    LSQBRACKET shift  69
                    LSQBRACKET reduce 68  ** Parsing conflict **
                        PERIOD shift  177
                        PERIOD reduce 68  ** Parsing conflict **
                     {default} reduce 68

State 113:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
     (67) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  64
                      MULTIPLY shift  65
                           MOD shift  63
                        LPAREN shift  17
                        LPAREN reduce 67  ** Parsing conflict **
                    LSQBRACKET shift  69
                    LSQBRACKET reduce 67  ** Parsing conflict **
                        PERIOD shift  177
                        PERIOD reduce 67  ** Parsing conflict **
                     {default} reduce 67

State 114:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          for_header2 ::= for_header1 lexpr * SEMICOLON

                           LOR shift  26
                          LAND shift  27
                     SEMICOLON shift  220

State 115:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  26
                          LAND shift  27
                        RPAREN shift  229

State 116:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  26
                          LAND shift  27
                        RPAREN shift  232

State 117:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  26
                          LAND shift  27
                        RPAREN shift  235

State 118:
          expr ::= L2V LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  26
                          LAND shift  27
                        RPAREN shift  249

State 119:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (79) expr ::= BITNOT expr *

                        LPAREN shift  17
                        LPAREN reduce 79  ** Parsing conflict **
                    LSQBRACKET shift  69
                    LSQBRACKET reduce 79  ** Parsing conflict **
                        PERIOD shift  177
                        PERIOD reduce 79  ** Parsing conflict **
                     {default} reduce 79

State 120:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (78) expr ::= MINUS expr *

                        LPAREN shift  17
                        LPAREN reduce 78  ** Parsing conflict **
                    LSQBRACKET shift  69
                    LSQBRACKET reduce 78  ** Parsing conflict **
                        PERIOD shift  177
                        PERIOD reduce 78  ** Parsing conflict **
                     {default} reduce 78

State 121:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (77) expr ::= PLUS expr *

                        LPAREN shift  17
                        LPAREN reduce 77  ** Parsing conflict **
                    LSQBRACKET shift  69
                    LSQBRACKET reduce 77  ** Parsing conflict **
                        PERIOD shift  177
                        PERIOD reduce 77  ** Parsing conflict **
                     {default} reduce 77

State 122:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (71) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LPAREN shift  17
                        LPAREN reduce 71  ** Parsing conflict **
                    LSQBRACKET shift  69
                    LSQBRACKET reduce 71  ** Parsing conflict **
                        PERIOD shift  177
                        PERIOD reduce 71  ** Parsing conflict **
                     {default} reduce 71

State 123:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (70) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LPAREN shift  17
                        LPAREN reduce 70  ** Parsing conflict **
                    LSQBRACKET shift  69
                    LSQBRACKET reduce 70  ** Parsing conflict **
                        PERIOD shift  177
                        PERIOD reduce 70  ** Parsing conflict **
                     {default} reduce 70

State 124:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (69) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LPAREN shift  17
                        LPAREN reduce 69  ** Parsing conflict **
                    LSQBRACKET shift  69
                    LSQBRACKET reduce 69  ** Parsing conflict **
                        PERIOD shift  177
                        PERIOD reduce 69  ** Parsing conflict **
                     {default} reduce 69

State 125:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty * RPAREN

                         COMMA shift  34
                        RPAREN shift  213

State 126:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= foreach_opener nameList_nonEmpty * COLON exprList_nonEmpty RPAREN

                         COMMA shift  196
                         COLON shift  30

State 127:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
          for_header ::= for_header2 for_action_stmt_nonEmpty * RPAREN

                         COMMA shift  14
                        RPAREN shift  217

State 128:
          lvalueList_nonEmpty ::= lvalueList_nonEmpty * COMMA lvalue
          assign_stmt ::= lvalueList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  31
                         COMMA shift  32

State 129:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  33
                         COMMA shift  196

State 130:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  153
                    RSQBRACKET shift  152

State 131:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
     (90) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  35
                         COMMA shift  196
                         COMMA reduce 90  ** Parsing conflict **
                     {default} reduce 90

State 132:
     (50) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
          lvalue ::= expr LSQBRACKET NAME * RSQBRACKET

                        LPAREN shift  18
                        LPAREN reduce 50  ** Parsing conflict **
                    RSQBRACKET shift  241
                    RSQBRACKET reduce 50  ** Parsing conflict **
                     {default} reduce 50

State 133:
          bodyStmt ::= funcexpr * SEMICOLON
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (60) expr ::= funcexpr *

                     SEMICOLON shift  270
                    LSQBRACKET shift  185
                    LSQBRACKET reduce 60  ** Parsing conflict **
                     {default} reduce 60

State 134:
          function_header ::= function_start LPAREN nameList_nonEmpty * RPAREN
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  196
                        RPAREN shift  288

State 135:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
     (90) vdef_stmt ::= VAR nameList_nonEmpty *

                         COMMA shift  196
                     {default} reduce 90

State 136:
          blockStmt ::= lbracket error * RBRACKET

                      RBRACKET shift  204

State 137:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  208

State 138:
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                        RPAREN shift  137

State 139:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  16

State 140:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (48) exprList ::= exprList_nonEmpty *

                         COMMA shift  34
                     {default} reduce 48

State 141:
          foreach_opener ::= FOREACH * LPAREN

                        LPAREN shift  214

State 142:
          for_header1 ::= for_opener for_init_stmt * SEMICOLON

                     SEMICOLON shift  221

State 143:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (128) for_init_stmt ::= for_init_stmt_nonEmpty *

                         COMMA shift  11
                     {default} reduce 128

State 144:
          for_opener ::= FOR * LPAREN

                        LPAREN shift  227

State 145:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  21

State 146:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  22

State 147:
          elif_start ::= ELSE * IF
    (116) else_header ::= ELSE *

                            IF shift  233
                            IF reduce 116 ** Parsing conflict **
                     {default} reduce 116

State 148:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  23

State 149:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (99) assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  34
                     {default} reduce 99

State 150:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (92) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  34
                     {default} reduce 92

State 151:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (91) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  34
                     {default} reduce 91

State 152:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  239

State 153:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  240

State 154:
     (39) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  182
                    RSQBRACKET reduce 39  ** Parsing conflict **
                     {default} reduce 39

State 155:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  76

State 156:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (60) expr ::= funcexpr *

                    LSQBRACKET shift  155
                    LSQBRACKET reduce 60  ** Parsing conflict **
                     {default} reduce 60

State 157:
          expr ::= expr PERIOD * NAME
          lvalue ::= expr PERIOD * NAME

                          NAME shift  105

State 158:
          funcexpr ::= NAME LPAREN fArgs * RPAREN

                        RPAREN shift  242

State 159:
          funcexpr ::= expr LPAREN fArgs * RPAREN

                        RPAREN shift  243

State 160:
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  245

State 161:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  15

State 162:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (87) lexpr ::= lexpr LOR lexpr *

                          LAND shift  27
                     {default} reduce 87

State 163:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  250

State 164:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  163

State 165:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  164

State 166:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  251

State 167:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  166

State 168:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  167

State 169:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  252

State 170:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  169

State 171:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  170

State 172:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  253

State 173:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  172

State 174:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  173

State 175:
          expr ::= L2V * LPAREN lexpr RPAREN

                        LPAREN shift  28

State 176:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (57) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  29
                     {default} reduce 57

State 177:
          expr ::= expr PERIOD * NAME

                          NAME shift  258

State 178:
     (50) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        LPAREN shift  18
                        LPAREN reduce 50  ** Parsing conflict **
                     {default} reduce 50

State 179:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (60) expr ::= funcexpr *

                    LSQBRACKET shift  185
                    LSQBRACKET reduce 60  ** Parsing conflict **
                     {default} reduce 60

State 180:
          bodyStmt ::= break_stmt * SEMICOLON

                     SEMICOLON shift  262

State 181:
          bodyStmt ::= continue_stmt * SEMICOLON

                     SEMICOLON shift  263

State 182:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  269

State 183:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  182

State 184:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  183

State 185:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  184

State 186:
          bodyStmt ::= assign_stmt * SEMICOLON

                     SEMICOLON shift  271

State 187:
          bodyStmt ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  272

State 188:
          bodyStmt ::= vdefAssign_stmt * SEMICOLON

                     SEMICOLON shift  273

State 189:
          bodyStmt ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  274

State 190:
          blockStmt ::= lbracket bodyStmtList return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  78

State 191:
          blockStmt ::= lbracket return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  79

State 192:
          stmt ::= return_stmt * SEMICOLON

                     SEMICOLON shift  283

State 193:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  285

State 194:
          function_header ::= function_start * LPAREN nameList_nonEmpty RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  70

State 195:
          function_start ::= FUNCTION * NAME

                          NAME shift  289

State 196:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  291

State 197:
      (7) import_chunk ::= FROM NAME IMPORT nameList_nonEmpty *
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  196
                     {default} reduce 7

State 198:
          import_chunk ::= FROM NAME * IMPORT nameList_nonEmpty

                        IMPORT shift  80

State 199:
          import_chunk ::= FROM * NAME IMPORT nameList_nonEmpty

                          NAME shift  198

State 200:
          chunk ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  292

State 201:
          chunk ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  293

State 202:
          chunk ::= import_chunk * SEMICOLON

                     SEMICOLON shift  295

State 203:
     (36) bodyStmtList ::= bodyStmt *

                     {default} reduce 36

State 204:
     (21) blockStmt ::= lbracket error RBRACKET *

                     {default} reduce 21

State 205:
    (118) if_stmt ::= if_block else_header stmt *

                     {default} reduce 118

State 206:
    (147) actions ::= actions action *

                     {default} reduce 147

State 207:
    (146) actions ::= action action *

                     {default} reduce 146

State 208:
    (145) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 145

State 209:
    (142) return_stmt ::= RETURN exprList *

                     {default} reduce 142

State 210:
    (141) break_stmt ::= BREAK *

                     {default} reduce 141

State 211:
    (140) continue_stmt ::= CONTINUE *

                     {default} reduce 140

State 212:
    (139) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 139

State 213:
    (138) foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN *

                     {default} reduce 138

State 214:
    (137) foreach_opener ::= FOREACH LPAREN *

                     {default} reduce 137

State 215:
    (136) for_stmt ::= for_header stmt *

                     {default} reduce 136

State 216:
    (135) for_header ::= for_header2 RPAREN *

                     {default} reduce 135

State 217:
    (134) for_header ::= for_header2 for_action_stmt_nonEmpty RPAREN *

                     {default} reduce 134

State 218:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (131) for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty *

                     {default} reduce 131

State 219:
    (130) for_action_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 130

State 220:
    (133) for_header2 ::= for_header1 lexpr SEMICOLON *

                     {default} reduce 133

State 221:
    (132) for_header1 ::= for_opener for_init_stmt SEMICOLON *

                     {default} reduce 132

State 222:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (127) for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty *

                     {default} reduce 127

State 223:
    (126) for_init_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 126

State 224:
    (125) for_init_stmt_nonEmpty ::= cdef_stmt *

                     {default} reduce 125

State 225:
    (124) for_init_stmt_nonEmpty ::= vdefAssign_stmt *

                     {default} reduce 124

State 226:
    (123) for_init_stmt_nonEmpty ::= vdef_stmt *

                     {default} reduce 123

State 227:
    (122) for_opener ::= FOR LPAREN *

                     {default} reduce 122

State 228:
    (121) while_stmt ::= while_header stmt *

                     {default} reduce 121

State 229:
    (120) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 120

State 230:
    (119) while_start ::= WHILE *

                     {default} reduce 119

State 231:
    (115) if_block ::= if_block elif_header stmt *

                     {default} reduce 115

State 232:
    (114) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 114

State 233:
    (113) elif_start ::= ELSE IF *

                     {default} reduce 113

State 234:
    (112) if_block ::= if_header stmt *

                     {default} reduce 112

State 235:
    (111) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 111

State 236:
    (110) if_start ::= IF *

                     {default} reduce 110

State 237:
     (97) lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA lvalue *

                     {default} reduce 97

State 238:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (46) exprList_nonEmpty ::= exprList_nonEmpty COMMA exprList_nonEmpty *

                     {default} reduce 46

State 239:
     (43) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 43

State 240:
     (40) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 40

State 241:
     (94) lvalue ::= expr LSQBRACKET NAME RSQBRACKET *

                     {default} reduce 94

State 242:
     (58) funcexpr ::= NAME LPAREN fArgs RPAREN *

                     {default} reduce 58

State 243:
     (59) funcexpr ::= expr LPAREN fArgs RPAREN *

                     {default} reduce 59

State 244:
    (144) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 144

State 245:
    (143) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 143

State 246:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (88) lexpr ::= LNOT lexpr *
     (89) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 89

State 247:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (88) lexpr ::= LNOT lexpr *

                     {default} reduce 88

State 248:
          lexpr ::= lexpr * LAND lexpr
     (86) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 86

State 249:
     (62) expr ::= L2V LPAREN lexpr RPAREN *

                     {default} reduce 62

State 250:
     (66) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 66

State 251:
     (65) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 65

State 252:
     (64) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 64

State 253:
     (63) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 63

State 254:
     (61) expr ::= LPAREN expr RPAREN *

                     {default} reduce 61

State 255:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (55) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArgs_nonEmpty *

                     {default} reduce 55

State 256:
     (54) fArgs_nonEmpty ::= STRING *

                     {default} reduce 54

State 257:
     (52) expr ::= expr LSQBRACKET expr RSQBRACKET *

                     {default} reduce 52

State 258:
     (51) expr ::= expr PERIOD NAME *

                     {default} reduce 51

State 259:
     (49) expr ::= NUMBER *

                     {default} reduce 49

State 260:
     (38) bodyStmtList ::= bodyStmtList error *

                     {default} reduce 38

State 261:
     (37) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 37

State 262:
     (35) bodyStmt ::= break_stmt SEMICOLON *

                     {default} reduce 35

State 263:
     (34) bodyStmt ::= continue_stmt SEMICOLON *

                     {default} reduce 34

State 264:
     (33) bodyStmt ::= foreach_stmt *

                     {default} reduce 33

State 265:
     (32) bodyStmt ::= for_stmt *

                     {default} reduce 32

State 266:
     (31) bodyStmt ::= while_stmt *

                     {default} reduce 31

State 267:
     (30) bodyStmt ::= if_stmt *

                     {default} reduce 30

State 268:
     (29) bodyStmt ::= actionStmt *

                     {default} reduce 29

State 269:
     (44) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 44

State 270:
     (28) bodyStmt ::= funcexpr SEMICOLON *

                     {default} reduce 28

State 271:
     (27) bodyStmt ::= assign_stmt SEMICOLON *

                     {default} reduce 27

State 272:
     (26) bodyStmt ::= cdef_stmt SEMICOLON *

                     {default} reduce 26

State 273:
     (25) bodyStmt ::= vdefAssign_stmt SEMICOLON *

                     {default} reduce 25

State 274:
     (24) bodyStmt ::= vdef_stmt SEMICOLON *

                     {default} reduce 24

State 275:
     (23) bodyStmt ::= SEMICOLON *

                     {default} reduce 23

State 276:
     (22) bodyStmt ::= blockStmt *

                     {default} reduce 22

State 277:
     (20) blockStmt ::= lbracket bodyStmtList return_stmt SEMICOLON rbracket *

                     {default} reduce 20

State 278:
     (19) blockStmt ::= lbracket bodyStmtList rbracket *

                     {default} reduce 19

State 279:
     (18) blockStmt ::= lbracket return_stmt SEMICOLON rbracket *

                     {default} reduce 18

State 280:
     (16) rbracket ::= RBRACKET *

                     {default} reduce 16

State 281:
     (17) blockStmt ::= lbracket RBRACKET *

                     {default} reduce 17

State 282:
     (15) lbracket ::= LBRACKET *

                     {default} reduce 15

State 283:
     (14) stmt ::= return_stmt SEMICOLON *

                     {default} reduce 14

State 284:
     (13) stmt ::= bodyStmt *

                     {default} reduce 13

State 285:
     (12) stmt ::= error SEMICOLON *

                     {default} reduce 12

State 286:
     (11) fdef_chunk ::= function_header stmt *

                     {default} reduce 11

State 287:
     (10) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 10

State 288:
      (9) function_header ::= function_start LPAREN nameList_nonEmpty RPAREN *

                     {default} reduce 9

State 289:
      (8) function_start ::= FUNCTION NAME *

                     {default} reduce 8

State 290:
     (41) nameList_nonEmpty ::= NAME *

                     {default} reduce 41

State 291:
     (42) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 42

State 292:
      (6) chunk ::= cdef_stmt SEMICOLON *

                     {default} reduce 6

State 293:
      (5) chunk ::= vdef_stmt SEMICOLON *

                     {default} reduce 5

State 294:
      (4) chunk ::= fdef_chunk *

                     {default} reduce 4

State 295:
      (3) chunk ::= import_chunk SEMICOLON *

                     {default} reduce 3

State 296:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: ASSIGN
    2: COMMA
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: SEMICOLON
   28: FROM
   29: IMPORT
   30: FUNCTION
   31: LPAREN
   32: RPAREN
   33: LBRACKET
   34: RBRACKET
   35: LSQBRACKET
   36: RSQBRACKET
   37: PERIOD
   38: STRING
   39: FUNCCALL
   40: L2V
   41: MAPSTRING
   42: UNIT
   43: SWITCH
   44: LOCATION
   45: VAR
   46: CONST
   47: IADD
   48: ISUB
   49: IMUL
   50: IDIV
   51: IMOD
   52: ILSH
   53: IRSH
   54: IBND
   55: IBOR
   56: IBXR
   57: IF
   58: ELSE
   59: WHILE
   60: FOR
   61: FOREACH
   62: COLON
   63: CONTINUE
   64: BREAK
   65: RETURN
   66: CONDITIONNAME
   67: ACTIONNAME
   68: error:
   69: nt:
   70: program: <lambda> FROM FUNCTION VAR CONST
   71: chunks: <lambda> FROM FUNCTION VAR CONST
   72: chunk: FROM FUNCTION VAR CONST
   73: import_chunk: FROM
   74: fdef_chunk: FUNCTION
   75: vdef_stmt: VAR
   76: cdef_stmt: CONST
   77: nameList_nonEmpty: NAME
   78: function_start: FUNCTION
   79: function_header: FUNCTION
   80: stmt: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST IF WHILE FOR FOREACH CONTINUE BREAK RETURN ACTIONNAME
   81: bodyStmt: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST IF WHILE FOR FOREACH CONTINUE BREAK ACTIONNAME
   82: return_stmt: RETURN
   83: lbracket: LBRACKET
   84: rbracket: RBRACKET
   85: blockStmt: LBRACKET
   86: bodyStmtList: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST IF WHILE FOR FOREACH CONTINUE BREAK ACTIONNAME
   87: vdefAssign_stmt: VAR
   88: assign_stmt: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   89: funcexpr: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   90: actionStmt: ACTIONNAME
   91: if_stmt: IF
   92: while_stmt: WHILE
   93: for_stmt: FOR
   94: foreach_stmt: FOREACH
   95: continue_stmt: CONTINUE
   96: break_stmt: BREAK
   97: numList_nonEmpty: NUMBER
   98: exprList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   99: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
  100: exprList: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
  101: fArgs_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN STRING L2V MAPSTRING UNIT SWITCH LOCATION
  102: fArgs: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN STRING L2V MAPSTRING UNIT SWITCH LOCATION
  103: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
  104: lvalue: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
  105: lvalueList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
  106: if_start: IF
  107: if_header: IF
  108: if_block: IF
  109: elif_start: ELSE
  110: elif_header: ELSE
  111: else_header: ELSE
  112: while_start: WHILE
  113: while_header: WHILE
  114: for_opener: FOR
  115: for_init_stmt_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST
  116: for_init_stmt: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION VAR CONST
  117: for_action_stmt_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
  118: for_header1: FOR
  119: for_header2: FOR
  120: for_header: FOR
  121: foreach_opener: FOREACH
  122: foreach_header: FOREACH
  123: action: ACTIONNAME
  124: actions: ACTIONNAME
