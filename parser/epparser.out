State 0:
          program ::= * chunks
    (103) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  8
                     {default} reduce 103

State 1:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          stmtList ::= * stmt
          stmtList ::= * stmtList stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET * stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          block ::= LBRACKET * error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN caExpr RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  51
                     SEMICOLON shift  160
                      LBRACKET shift  1
                            IF shift  184
                         WHILE shift  173
                           FOR shift  104
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  17
                    ACTIONNAME shift  101
                         error shift  79
                      nameList shift  87
                      funcexpr shift  98
                     vdef_stmt shift  159
               vdefAssign_stmt shift  158
                vdefMulti_stmt shift  156
          vdefMultiAssign_stmt shift  157
                   assign_stmt shift  155
              assignMulti_stmt shift  154
                      stmtList shift  2
                          stmt shift  187
                         block shift  145
                      if_start shift  109
                     if_header shift  6
                       if_stmt shift  151
                   else_header shift  5
                   while_start shift  105
                  while_header shift  4
                    while_stmt shift  150
                foreach_header shift  3
                  foreach_stmt shift  149
                 continue_stmt shift  148
                    break_stmt shift  147
                   return_stmt shift  146
                        action shift  49
                       actions shift  48
                    actionStmt shift  152

State 2:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          stmtList ::= stmtList * stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET stmtList * RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN caExpr RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  51
                     SEMICOLON shift  160
                      LBRACKET shift  1
                      RBRACKET shift  185
                            IF shift  184
                         WHILE shift  173
                           FOR shift  104
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  17
                    ACTIONNAME shift  101
                         error shift  99
                      nameList shift  87
                      funcexpr shift  98
                     vdef_stmt shift  159
               vdefAssign_stmt shift  158
                vdefMulti_stmt shift  156
          vdefMultiAssign_stmt shift  157
                   assign_stmt shift  155
              assignMulti_stmt shift  154
                          stmt shift  186
                         block shift  145
                      if_start shift  109
                     if_header shift  6
                       if_stmt shift  151
                   else_header shift  5
                   while_start shift  105
                  while_header shift  4
                    while_stmt shift  150
                foreach_header shift  3
                  foreach_stmt shift  149
                 continue_stmt shift  148
                    break_stmt shift  147
                   return_stmt shift  146
                        action shift  49
                       actions shift  48
                    actionStmt shift  152

State 3:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN caExpr RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  51
                     SEMICOLON shift  160
                      LBRACKET shift  1
                            IF shift  184
                         WHILE shift  173
                           FOR shift  104
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  17
                    ACTIONNAME shift  101
                         error shift  99
                      nameList shift  87
                      funcexpr shift  98
                     vdef_stmt shift  159
               vdefAssign_stmt shift  158
                vdefMulti_stmt shift  156
          vdefMultiAssign_stmt shift  157
                   assign_stmt shift  155
              assignMulti_stmt shift  154
                          stmt shift  169
                         block shift  145
                      if_start shift  109
                     if_header shift  6
                       if_stmt shift  151
                   else_header shift  5
                   while_start shift  105
                  while_header shift  4
                    while_stmt shift  150
                foreach_header shift  3
                  foreach_stmt shift  149
                 continue_stmt shift  148
                    break_stmt shift  147
                   return_stmt shift  146
                        action shift  49
                       actions shift  48
                    actionStmt shift  152

State 4:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN caExpr RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  51
                     SEMICOLON shift  160
                      LBRACKET shift  1
                            IF shift  184
                         WHILE shift  173
                           FOR shift  104
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  17
                    ACTIONNAME shift  101
                         error shift  99
                      nameList shift  87
                      funcexpr shift  98
                     vdef_stmt shift  159
               vdefAssign_stmt shift  158
                vdefMulti_stmt shift  156
          vdefMultiAssign_stmt shift  157
                   assign_stmt shift  155
              assignMulti_stmt shift  154
                          stmt shift  171
                         block shift  145
                      if_start shift  109
                     if_header shift  6
                       if_stmt shift  151
                   else_header shift  5
                   while_start shift  105
                  while_header shift  4
                    while_stmt shift  150
                foreach_header shift  3
                  foreach_stmt shift  149
                 continue_stmt shift  148
                    break_stmt shift  147
                   return_stmt shift  146
                        action shift  49
                       actions shift  48
                    actionStmt shift  152

State 5:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          if_stmt ::= else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN caExpr RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  51
                     SEMICOLON shift  160
                      LBRACKET shift  1
                            IF shift  184
                         WHILE shift  173
                           FOR shift  104
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  17
                    ACTIONNAME shift  101
                         error shift  99
                      nameList shift  87
                      funcexpr shift  98
                     vdef_stmt shift  159
               vdefAssign_stmt shift  158
                vdefMulti_stmt shift  156
          vdefMultiAssign_stmt shift  157
                   assign_stmt shift  155
              assignMulti_stmt shift  154
                          stmt shift  174
                         block shift  145
                      if_start shift  109
                     if_header shift  6
                       if_stmt shift  151
                   else_header shift  5
                   while_start shift  105
                  while_header shift  4
                    while_stmt shift  150
                foreach_header shift  3
                  foreach_stmt shift  149
                 continue_stmt shift  148
                    break_stmt shift  147
                   return_stmt shift  146
                        action shift  49
                       actions shift  48
                    actionStmt shift  152

State 6:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          if_stmt ::= if_header * stmt
          else_header ::= * if_header stmt ELSE
          else_header ::= if_header * stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN caExpr RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  51
                     SEMICOLON shift  160
                      LBRACKET shift  1
                            IF shift  184
                         WHILE shift  173
                           FOR shift  104
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  17
                    ACTIONNAME shift  101
                         error shift  99
                      nameList shift  87
                      funcexpr shift  98
                     vdef_stmt shift  159
               vdefAssign_stmt shift  158
                vdefMulti_stmt shift  156
          vdefMultiAssign_stmt shift  157
                   assign_stmt shift  155
              assignMulti_stmt shift  154
                          stmt shift  106
                         block shift  145
                      if_start shift  109
                     if_header shift  6
                       if_stmt shift  151
                   else_header shift  5
                   while_start shift  105
                  while_header shift  4
                    while_stmt shift  150
                foreach_header shift  3
                  foreach_stmt shift  149
                 continue_stmt shift  148
                    break_stmt shift  147
                   return_stmt shift  146
                        action shift  49
                       actions shift  48
                    actionStmt shift  152

State 7:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          fdef_chunk ::= function_header * stmt
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN caExpr RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  78
                           VAR shift  51
                     SEMICOLON shift  160
                      LBRACKET shift  1
                            IF shift  184
                         WHILE shift  173
                           FOR shift  104
                      CONTINUE shift  103
                         BREAK shift  102
                        RETURN shift  17
                    ACTIONNAME shift  101
                         error shift  99
                      nameList shift  87
                      funcexpr shift  98
                     vdef_stmt shift  159
               vdefAssign_stmt shift  158
                vdefMulti_stmt shift  156
          vdefMultiAssign_stmt shift  157
                   assign_stmt shift  155
              assignMulti_stmt shift  154
                          stmt shift  143
                         block shift  145
                      if_start shift  109
                     if_header shift  6
                       if_stmt shift  151
                   else_header shift  5
                   while_start shift  105
                  while_header shift  4
                    while_stmt shift  150
                foreach_header shift  3
                  foreach_stmt shift  149
                 continue_stmt shift  148
                    break_stmt shift  147
                   return_stmt shift  146
                        action shift  49
                       actions shift  48
                    actionStmt shift  152

State 8:
      (0) program ::= chunks *
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          import_chunk ::= * FROM NAME IMPORT nameList
          import_chunk ::= * FROM NAME IMPORT NAME
          chunk ::= * import_chunk
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * vdefMulti_stmt
          chunks ::= chunks * chunk

                             $ reduce 0
                           VAR shift  53
                      FUNCTION shift  135
                          FROM shift  97
                     vdef_stmt shift  140
                vdefMulti_stmt shift  139
                function_start shift  134
               function_header shift  7
                    fdef_chunk shift  141
                  import_chunk shift  142
                         chunk shift  138

State 9:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN caExpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  12
                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                 CONDITIONNAME shift  107
                      funcexpr shift  126
                          expr shift  54
                         lexpr shift  72

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          caExpr ::= * expr
          caExpr ::= * STRING
          caExpr ::= * caExpr COMMA caExpr
          lexpr ::= CONDITIONNAME LPAREN * caExpr RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                        RPAREN shift  177
                     MAPSTRING shift  121
                        STRING shift  180
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  58
                        caExpr shift  84

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN caExpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  11
                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                 CONDITIONNAME shift  107
                      funcexpr shift  126
                          expr shift  54
                         lexpr shift  181

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN caExpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  11
                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                 CONDITIONNAME shift  107
                      funcexpr shift  126
                          expr shift  54
                         lexpr shift  182

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN caExpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  12
                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                 CONDITIONNAME shift  107
                      funcexpr shift  126
                          expr shift  54
                         lexpr shift  108

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN caExpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  12
                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                 CONDITIONNAME shift  107
                      funcexpr shift  126
                          expr shift  54
                         lexpr shift  183

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN caExpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  12
                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                 CONDITIONNAME shift  107
                      funcexpr shift  126
                          expr shift  54
                         lexpr shift  73

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          caExpr ::= * expr
          caExpr ::= * STRING
          caExpr ::= * caExpr COMMA caExpr
          action ::= ACTIONNAME LPAREN * caExpr RPAREN SEMICOLON

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                        STRING shift  180
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  58
                        caExpr shift  80

State 17:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * SEMICOLON
          return_stmt ::= RETURN * exprList SEMICOLON

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                     SEMICOLON shift  165
                      exprList shift  81
                      funcexpr shift  132
                          expr shift  66

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          caExpr ::= * expr
          caExpr ::= * STRING
          caExpr ::= * caExpr COMMA caExpr
          caExpr ::= caExpr COMMA * caExpr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                        STRING shift  180
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  58
                        caExpr shift  179

State 19:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= NAME LPAREN * exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          funcexpr ::= NAME LPAREN * RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                        RPAREN shift  192
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      exprList shift  88
                      funcexpr shift  132
                          expr shift  66

State 20:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= FOR LPAREN nameList COLON * exprList RPAREN

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      exprList shift  82
                      funcexpr shift  132
                          expr shift  66

State 21:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefMultiAssign_stmt ::= VAR nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      exprList shift  85
                      funcexpr shift  132
                          expr shift  66

State 22:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assignMulti_stmt ::= nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      exprList shift  86
                      funcexpr shift  132
                          expr shift  66

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  59

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  60

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  61

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  62

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  63

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  64

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR NAME ASSIGN * expr SEMICOLON

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  55

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= NAME ASSIGN * expr SEMICOLON

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  56

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= exprList COMMA * expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  65

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  194

State 33:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  195

State 34:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  196

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  68

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  67

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  69

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  70

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  71

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  197

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  198

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  199

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  77

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  57

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  205
                          NAME shift  122
                        LPAREN shift  44
                     MAPSTRING shift  121
                          UNIT shift  118
                        SWITCH shift  115
                      LOCATION shift  112
                      funcexpr shift  126
                          expr shift  76

State 46:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          function_header ::= function_start LPAREN * nameList RPAREN
          function_header ::= function_start LPAREN * RPAREN

                          NAME shift  133
                        RPAREN shift  210
                      nameList shift  91

State 47:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          import_chunk ::= FROM NAME IMPORT * nameList
          import_chunk ::= FROM NAME IMPORT * NAME

                          NAME shift  95
                      nameList shift  94

State 48:
          action ::= * ACTIONNAME LPAREN caExpr RPAREN SEMICOLON
          actions ::= actions * action
     (79) actionStmt ::= actions *

                    ACTIONNAME shift  101
                    ACTIONNAME reduce 79  ** Parsing conflict **
                        action shift  162
                     {default} reduce 79

State 49:
          action ::= * ACTIONNAME LPAREN caExpr RPAREN SEMICOLON
          actions ::= action * action
     (78) actionStmt ::= action *

                    ACTIONNAME shift  101
                    ACTIONNAME reduce 78  ** Parsing conflict **
                        action shift  163
                     {default} reduce 78

State 50:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          foreach_header ::= FOR LPAREN * nameList COLON exprList RPAREN

                          NAME shift  133
                      nameList shift  83

State 51:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefAssign_stmt ::= VAR * NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= VAR * nameList SEMICOLON
          vdefMultiAssign_stmt ::= VAR * nameList ASSIGN exprList SEMICOLON

                          NAME shift  75
                      nameList shift  74

State 52:
          numList ::= * NUMBER COMMA NUMBER
          numList ::= * numList COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET * numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  90
                       numList shift  89

State 53:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefMulti_stmt ::= VAR * nameList SEMICOLON

                          NAME shift  93
                      nameList shift  92

State 54:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  28
                            LE shift  26
                            LT shift  25
                            GE shift  24
                            GT shift  23
                            NE shift  27
                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40

State 55:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          vdefAssign_stmt ::= VAR NAME ASSIGN expr * SEMICOLON

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     SEMICOLON shift  189

State 56:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          assign_stmt ::= NAME ASSIGN expr * SEMICOLON

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     SEMICOLON shift  191

State 57:
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                        RPAREN shift  204

State 58:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (70) caExpr ::= expr *

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 70

State 59:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (37) lexpr ::= expr GT expr *

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 37

State 60:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (36) lexpr ::= expr GE expr *

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 36

State 61:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (35) lexpr ::= expr LT expr *

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 35

State 62:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (34) lexpr ::= expr LE expr *

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 34

State 63:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (33) lexpr ::= expr NE expr *

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 33

State 64:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (32) lexpr ::= expr EQ expr *

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 32

State 65:
      (8) exprList ::= exprList COMMA expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 8

State 66:
      (7) exprList ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 7

State 67:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (27) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 27

State 68:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (28) expr ::= expr BITXOR expr *

                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 28

State 69:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (26) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 26

State 70:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (25) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 25

State 71:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (24) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 24

State 72:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  13
                          LAND shift  14
                        RPAREN shift  172

State 73:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  13
                          LAND shift  14
                        RPAREN shift  176

State 74:
          nameList ::= nameList * COMMA NAME
          vdefMulti_stmt ::= VAR nameList * SEMICOLON
          vdefMultiAssign_stmt ::= VAR nameList * ASSIGN exprList SEMICOLON

                         COMMA shift  136
                        ASSIGN shift  21
                     SEMICOLON shift  213

State 75:
          nameList ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON
          vdefAssign_stmt ::= VAR NAME * ASSIGN expr SEMICOLON

                         COMMA shift  137
                        ASSIGN shift  29
                     SEMICOLON shift  215

State 76:
          expr ::= expr * PLUS expr
     (19) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 19

State 77:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (20) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 20

State 78:
          nameList ::= NAME * COMMA NAME
          funcexpr ::= NAME * LPAREN exprList RPAREN
          funcexpr ::= NAME * LPAREN RPAREN
          assign_stmt ::= NAME * ASSIGN expr SEMICOLON

                         COMMA shift  137
                        ASSIGN shift  30
                        LPAREN shift  19

State 79:
          block ::= LBRACKET error * RBRACKET
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  161
                      RBRACKET shift  144

State 80:
          caExpr ::= caExpr * COMMA caExpr
          action ::= ACTIONNAME LPAREN caExpr * RPAREN SEMICOLON

                         COMMA shift  18
                        RPAREN shift  100

State 81:
          exprList ::= exprList * COMMA expr
          return_stmt ::= RETURN exprList * SEMICOLON

                         COMMA shift  31
                     SEMICOLON shift  166

State 82:
          exprList ::= exprList * COMMA expr
          foreach_header ::= FOR LPAREN nameList COLON exprList * RPAREN

                         COMMA shift  31
                        RPAREN shift  170

State 83:
          nameList ::= nameList * COMMA NAME
          foreach_header ::= FOR LPAREN nameList * COLON exprList RPAREN

                         COMMA shift  136
                         COLON shift  20

State 84:
          caExpr ::= caExpr * COMMA caExpr
          lexpr ::= CONDITIONNAME LPAREN caExpr * RPAREN

                         COMMA shift  18
                        RPAREN shift  178

State 85:
          exprList ::= exprList * COMMA expr
          vdefMultiAssign_stmt ::= VAR nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  31
                     SEMICOLON shift  188

State 86:
          exprList ::= exprList * COMMA expr
          assignMulti_stmt ::= nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  31
                     SEMICOLON shift  190

State 87:
          nameList ::= nameList * COMMA NAME
          assignMulti_stmt ::= nameList * ASSIGN exprList SEMICOLON

                         COMMA shift  136
                        ASSIGN shift  22

State 88:
          exprList ::= exprList * COMMA expr
          funcexpr ::= NAME LPAREN exprList * RPAREN

                         COMMA shift  31
                        RPAREN shift  193

State 89:
          numList ::= numList * COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList * RSQBRACKET RSQBRACKET

                         COMMA shift  128
                    RSQBRACKET shift  127

State 90:
          numList ::= NUMBER * COMMA NUMBER
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                         COMMA shift  130
                    RSQBRACKET shift  129

State 91:
          nameList ::= nameList * COMMA NAME
          function_header ::= function_start LPAREN nameList * RPAREN

                         COMMA shift  136
                        RPAREN shift  211

State 92:
          nameList ::= nameList * COMMA NAME
          vdefMulti_stmt ::= VAR nameList * SEMICOLON

                         COMMA shift  136
                     SEMICOLON shift  213

State 93:
          nameList ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON

                         COMMA shift  137
                     SEMICOLON shift  215

State 94:
          nameList ::= nameList * COMMA NAME
     (97) import_chunk ::= FROM NAME IMPORT nameList *

                         COMMA shift  136
                     {default} reduce 97

State 95:
          nameList ::= NAME * COMMA NAME
     (98) import_chunk ::= FROM NAME IMPORT NAME *

                         COMMA shift  137
                     {default} reduce 98

State 96:
          import_chunk ::= FROM NAME * IMPORT nameList
          import_chunk ::= FROM NAME * IMPORT NAME

                        IMPORT shift  47

State 97:
          import_chunk ::= FROM * NAME IMPORT nameList
          import_chunk ::= FROM * NAME IMPORT NAME

                          NAME shift  96

State 98:
          stmt ::= funcexpr * SEMICOLON

                     SEMICOLON shift  153

State 99:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  161

State 100:
          action ::= ACTIONNAME LPAREN caExpr RPAREN * SEMICOLON

                     SEMICOLON shift  164

State 101:
          action ::= ACTIONNAME * LPAREN caExpr RPAREN SEMICOLON

                        LPAREN shift  16

State 102:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  167

State 103:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  168

State 104:
          foreach_header ::= FOR * LPAREN nameList COLON exprList RPAREN

                        LPAREN shift  50

State 105:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  9

State 106:
     (54) if_stmt ::= if_header stmt *
          else_header ::= if_header stmt * ELSE

                          ELSE shift  175
                          ELSE reduce 54  ** Parsing conflict **
                     {default} reduce 54

State 107:
          lexpr ::= CONDITIONNAME * LPAREN caExpr RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  10

State 108:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (39) lexpr ::= lexpr LOR lexpr *

                          LAND shift  14
                     {default} reduce 39

State 109:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  15

State 110:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  200

State 111:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  110

State 112:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  111

State 113:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  201

State 114:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  113

State 115:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  114

State 116:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  202

State 117:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  116

State 118:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  117

State 119:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  203

State 120:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  119

State 121:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  120

State 122:
     (10) expr ::= NAME *
          funcexpr ::= NAME * LPAREN exprList RPAREN
          funcexpr ::= NAME * LPAREN RPAREN

                        LPAREN shift  19
                     {default} reduce 10

State 123:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  129

State 124:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  123

State 125:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  124

State 126:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (13) expr ::= funcexpr *

                    LSQBRACKET shift  125
                     {default} reduce 13

State 127:
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  206

State 128:
          numList ::= numList COMMA * NUMBER

                        NUMBER shift  207

State 129:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  208

State 130:
          numList ::= NUMBER COMMA * NUMBER

                        NUMBER shift  209

State 131:
          exprList ::= funcexpr LSQBRACKET * LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  52

State 132:
          exprList ::= funcexpr * LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (13) expr ::= funcexpr *

                    LSQBRACKET shift  131
                     {default} reduce 13

State 133:
          nameList ::= NAME * COMMA NAME

                         COMMA shift  137

State 134:
          function_header ::= function_start * LPAREN nameList RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  46

State 135:
          function_start ::= FUNCTION * NAME

                          NAME shift  212

State 136:
          nameList ::= nameList COMMA * NAME

                          NAME shift  214

State 137:
          nameList ::= NAME COMMA * NAME

                          NAME shift  216

State 138:
    (104) chunks ::= chunks chunk *

                     {default} reduce 104

State 139:
    (102) chunk ::= vdefMulti_stmt *

                     {default} reduce 102

State 140:
    (101) chunk ::= vdef_stmt *

                     {default} reduce 101

State 141:
    (100) chunk ::= fdef_chunk *

                     {default} reduce 100

State 142:
     (99) chunk ::= import_chunk *

                     {default} reduce 99

State 143:
     (67) fdef_chunk ::= function_header stmt *

                     {default} reduce 67

State 144:
     (51) block ::= LBRACKET error RBRACKET *

                     {default} reduce 51

State 145:
     (96) stmt ::= block *

                     {default} reduce 96

State 146:
     (95) stmt ::= return_stmt *

                     {default} reduce 95

State 147:
     (94) stmt ::= break_stmt *

                     {default} reduce 94

State 148:
     (93) stmt ::= continue_stmt *

                     {default} reduce 93

State 149:
     (92) stmt ::= foreach_stmt *

                     {default} reduce 92

State 150:
     (91) stmt ::= while_stmt *

                     {default} reduce 91

State 151:
     (90) stmt ::= if_stmt *

                     {default} reduce 90

State 152:
     (89) stmt ::= actionStmt *

                     {default} reduce 89

State 153:
     (88) stmt ::= funcexpr SEMICOLON *

                     {default} reduce 88

State 154:
     (87) stmt ::= assignMulti_stmt *

                     {default} reduce 87

State 155:
     (86) stmt ::= assign_stmt *

                     {default} reduce 86

State 156:
     (85) stmt ::= vdefMulti_stmt *

                     {default} reduce 85

State 157:
     (84) stmt ::= vdefMultiAssign_stmt *

                     {default} reduce 84

State 158:
     (83) stmt ::= vdefAssign_stmt *

                     {default} reduce 83

State 159:
     (82) stmt ::= vdef_stmt *

                     {default} reduce 82

State 160:
     (81) stmt ::= SEMICOLON *

                     {default} reduce 81

State 161:
     (80) stmt ::= error SEMICOLON *

                     {default} reduce 80

State 162:
     (77) actions ::= actions action *

                     {default} reduce 77

State 163:
     (76) actions ::= action action *

                     {default} reduce 76

State 164:
     (75) action ::= ACTIONNAME LPAREN caExpr RPAREN SEMICOLON *

                     {default} reduce 75

State 165:
     (68) return_stmt ::= RETURN SEMICOLON *

                     {default} reduce 68

State 166:
     (69) return_stmt ::= RETURN exprList SEMICOLON *

                     {default} reduce 69

State 167:
     (63) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 63

State 168:
     (62) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 62

State 169:
     (61) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 61

State 170:
     (60) foreach_header ::= FOR LPAREN nameList COLON exprList RPAREN *

                     {default} reduce 60

State 171:
     (59) while_stmt ::= while_header stmt *

                     {default} reduce 59

State 172:
     (58) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 58

State 173:
     (57) while_start ::= WHILE *

                     {default} reduce 57

State 174:
     (56) if_stmt ::= else_header stmt *

                     {default} reduce 56

State 175:
     (55) else_header ::= if_header stmt ELSE *

                     {default} reduce 55

State 176:
     (53) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 53

State 177:
     (74) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 74

State 178:
     (73) lexpr ::= CONDITIONNAME LPAREN caExpr RPAREN *

                     {default} reduce 73

State 179:
          caExpr ::= caExpr * COMMA caExpr
     (72) caExpr ::= caExpr COMMA caExpr *

                     {default} reduce 72

State 180:
     (71) caExpr ::= STRING *

                     {default} reduce 71

State 181:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (40) lexpr ::= LNOT lexpr *
     (41) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 41

State 182:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (40) lexpr ::= LNOT lexpr *

                     {default} reduce 40

State 183:
          lexpr ::= lexpr * LAND lexpr
     (38) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 38

State 184:
     (52) if_start ::= IF *

                     {default} reduce 52

State 185:
     (50) block ::= LBRACKET stmtList RBRACKET *

                     {default} reduce 50

State 186:
     (49) stmtList ::= stmtList stmt *

                     {default} reduce 49

State 187:
     (48) stmtList ::= stmt *

                     {default} reduce 48

State 188:
     (45) vdefMultiAssign_stmt ::= VAR nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 45

State 189:
     (43) vdefAssign_stmt ::= VAR NAME ASSIGN expr SEMICOLON *

                     {default} reduce 43

State 190:
     (47) assignMulti_stmt ::= nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 47

State 191:
     (46) assign_stmt ::= NAME ASSIGN expr SEMICOLON *

                     {default} reduce 46

State 192:
     (12) funcexpr ::= NAME LPAREN RPAREN *

                     {default} reduce 12

State 193:
     (11) funcexpr ::= NAME LPAREN exprList RPAREN *

                     {default} reduce 11

State 194:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (31) expr ::= BITNOT expr *

                     {default} reduce 31

State 195:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (30) expr ::= MINUS expr *

                     {default} reduce 30

State 196:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (29) expr ::= PLUS expr *

                     {default} reduce 29

State 197:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (23) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 23

State 198:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (22) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 22

State 199:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (21) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 21

State 200:
     (18) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 18

State 201:
     (17) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 17

State 202:
     (16) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 16

State 203:
     (15) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 15

State 204:
     (14) expr ::= LPAREN expr RPAREN *

                     {default} reduce 14

State 205:
      (9) expr ::= NUMBER *

                     {default} reduce 9

State 206:
      (5) exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET *

                     {default} reduce 5

State 207:
      (2) numList ::= numList COMMA NUMBER *

                     {default} reduce 2

State 208:
      (6) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 6

State 209:
      (1) numList ::= NUMBER COMMA NUMBER *

                     {default} reduce 1

State 210:
     (66) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 66

State 211:
     (65) function_header ::= function_start LPAREN nameList RPAREN *

                     {default} reduce 65

State 212:
     (64) function_start ::= FUNCTION NAME *

                     {default} reduce 64

State 213:
     (44) vdefMulti_stmt ::= VAR nameList SEMICOLON *

                     {default} reduce 44

State 214:
      (4) nameList ::= nameList COMMA NAME *

                     {default} reduce 4

State 215:
     (42) vdef_stmt ::= VAR NAME SEMICOLON *

                     {default} reduce 42

State 216:
      (3) nameList ::= NAME COMMA NAME *

                     {default} reduce 3

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: LSQBRACKET
   28: RSQBRACKET
   29: LPAREN
   30: RPAREN
   31: FUNCCALL
   32: MAPSTRING
   33: STRING
   34: UNIT
   35: SWITCH
   36: LOCATION
   37: VAR
   38: SEMICOLON
   39: LBRACKET
   40: RBRACKET
   41: IF
   42: IFX
   43: ELSE
   44: WHILE
   45: FOR
   46: COLON
   47: CONTINUE
   48: BREAK
   49: FUNCTION
   50: RETURN
   51: CONDITIONNAME
   52: ACTIONNAME
   53: FROM
   54: IMPORT
   55: error:
   56: nt:
   57: program: <lambda> VAR FUNCTION FROM
   58: chunks: <lambda> VAR FUNCTION FROM
   59: numList: NUMBER
   60: nameList: NAME
   61: exprList: PLUS MINUS BITNOT NUMBER NAME LPAREN MAPSTRING UNIT SWITCH LOCATION
   62: funcexpr: NAME
   63: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN MAPSTRING UNIT SWITCH LOCATION
   64: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
   65: vdef_stmt: VAR
   66: vdefAssign_stmt: VAR
   67: vdefMulti_stmt: VAR
   68: vdefMultiAssign_stmt: VAR
   69: assign_stmt: NAME
   70: assignMulti_stmt: NAME
   71: stmtList: NAME VAR SEMICOLON LBRACKET IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   72: stmt: NAME VAR SEMICOLON LBRACKET IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   73: block: LBRACKET
   74: if_start: IF
   75: if_header: IF
   76: if_stmt: IF
   77: else_header: IF
   78: while_start: WHILE
   79: while_header: WHILE
   80: while_stmt: WHILE
   81: foreach_header: FOR
   82: foreach_stmt: FOR
   83: continue_stmt: CONTINUE
   84: break_stmt: BREAK
   85: function_start: FUNCTION
   86: function_header: FUNCTION
   87: fdef_chunk: FUNCTION
   88: return_stmt: RETURN
   89: caExpr: PLUS MINUS BITNOT NUMBER NAME LPAREN MAPSTRING STRING UNIT SWITCH LOCATION
   90: action: ACTIONNAME
   91: actions: ACTIONNAME
   92: actionStmt: ACTIONNAME
   93: import_chunk: FROM
   94: chunk: VAR FUNCTION FROM
