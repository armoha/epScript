State 0:
          program ::= * chunks
    (104) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  8
                     {default} reduce 104

State 1:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameListMulti SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameListMulti ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          stmtList ::= * stmt
          stmtList ::= * stmtList stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET * stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          block ::= LBRACKET * error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  51
                     SEMICOLON shift  159
                      LBRACKET shift  1
                            IF shift  181
                         WHILE shift  172
                           FOR shift  100
                      CONTINUE shift  98
                         BREAK shift  97
                        RETURN shift  18
                    ACTIONNAME shift  96
                         error shift  78
                 nameListMulti shift  87
                      funcexpr shift  93
                     vdef_stmt shift  158
               vdefAssign_stmt shift  157
                vdefMulti_stmt shift  155
          vdefMultiAssign_stmt shift  156
                   assign_stmt shift  154
              assignMulti_stmt shift  153
                      stmtList shift  2
                          stmt shift  184
                         block shift  144
                      if_start shift  105
                     if_header shift  6
                       if_stmt shift  150
                   else_header shift  5
                   while_start shift  101
                  while_header shift  4
                    while_stmt shift  149
                foreach_header shift  3
                  foreach_stmt shift  148
                 continue_stmt shift  147
                    break_stmt shift  146
                   return_stmt shift  145
                        action shift  50
                       actions shift  49
                    actionStmt shift  151

State 2:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameListMulti SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameListMulti ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          stmtList ::= stmtList * stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET stmtList * RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  51
                     SEMICOLON shift  159
                      LBRACKET shift  1
                      RBRACKET shift  182
                            IF shift  181
                         WHILE shift  172
                           FOR shift  100
                      CONTINUE shift  98
                         BREAK shift  97
                        RETURN shift  18
                    ACTIONNAME shift  96
                         error shift  94
                 nameListMulti shift  87
                      funcexpr shift  93
                     vdef_stmt shift  158
               vdefAssign_stmt shift  157
                vdefMulti_stmt shift  155
          vdefMultiAssign_stmt shift  156
                   assign_stmt shift  154
              assignMulti_stmt shift  153
                          stmt shift  183
                         block shift  144
                      if_start shift  105
                     if_header shift  6
                       if_stmt shift  150
                   else_header shift  5
                   while_start shift  101
                  while_header shift  4
                    while_stmt shift  149
                foreach_header shift  3
                  foreach_stmt shift  148
                 continue_stmt shift  147
                    break_stmt shift  146
                   return_stmt shift  145
                        action shift  50
                       actions shift  49
                    actionStmt shift  151

State 3:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameListMulti SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameListMulti ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  51
                     SEMICOLON shift  159
                      LBRACKET shift  1
                            IF shift  181
                         WHILE shift  172
                           FOR shift  100
                      CONTINUE shift  98
                         BREAK shift  97
                        RETURN shift  18
                    ACTIONNAME shift  96
                         error shift  94
                 nameListMulti shift  87
                      funcexpr shift  93
                     vdef_stmt shift  158
               vdefAssign_stmt shift  157
                vdefMulti_stmt shift  155
          vdefMultiAssign_stmt shift  156
                   assign_stmt shift  154
              assignMulti_stmt shift  153
                          stmt shift  168
                         block shift  144
                      if_start shift  105
                     if_header shift  6
                       if_stmt shift  150
                   else_header shift  5
                   while_start shift  101
                  while_header shift  4
                    while_stmt shift  149
                foreach_header shift  3
                  foreach_stmt shift  148
                 continue_stmt shift  147
                    break_stmt shift  146
                   return_stmt shift  145
                        action shift  50
                       actions shift  49
                    actionStmt shift  151

State 4:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameListMulti SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameListMulti ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  51
                     SEMICOLON shift  159
                      LBRACKET shift  1
                            IF shift  181
                         WHILE shift  172
                           FOR shift  100
                      CONTINUE shift  98
                         BREAK shift  97
                        RETURN shift  18
                    ACTIONNAME shift  96
                         error shift  94
                 nameListMulti shift  87
                      funcexpr shift  93
                     vdef_stmt shift  158
               vdefAssign_stmt shift  157
                vdefMulti_stmt shift  155
          vdefMultiAssign_stmt shift  156
                   assign_stmt shift  154
              assignMulti_stmt shift  153
                          stmt shift  170
                         block shift  144
                      if_start shift  105
                     if_header shift  6
                       if_stmt shift  150
                   else_header shift  5
                   while_start shift  101
                  while_header shift  4
                    while_stmt shift  149
                foreach_header shift  3
                  foreach_stmt shift  148
                 continue_stmt shift  147
                    break_stmt shift  146
                   return_stmt shift  145
                        action shift  50
                       actions shift  49
                    actionStmt shift  151

State 5:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameListMulti SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameListMulti ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          if_stmt ::= else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  51
                     SEMICOLON shift  159
                      LBRACKET shift  1
                            IF shift  181
                         WHILE shift  172
                           FOR shift  100
                      CONTINUE shift  98
                         BREAK shift  97
                        RETURN shift  18
                    ACTIONNAME shift  96
                         error shift  94
                 nameListMulti shift  87
                      funcexpr shift  93
                     vdef_stmt shift  158
               vdefAssign_stmt shift  157
                vdefMulti_stmt shift  155
          vdefMultiAssign_stmt shift  156
                   assign_stmt shift  154
              assignMulti_stmt shift  153
                          stmt shift  173
                         block shift  144
                      if_start shift  105
                     if_header shift  6
                       if_stmt shift  150
                   else_header shift  5
                   while_start shift  101
                  while_header shift  4
                    while_stmt shift  149
                foreach_header shift  3
                  foreach_stmt shift  148
                 continue_stmt shift  147
                    break_stmt shift  146
                   return_stmt shift  145
                        action shift  50
                       actions shift  49
                    actionStmt shift  151

State 6:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameListMulti SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameListMulti ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          if_stmt ::= if_header * stmt
          else_header ::= * if_header stmt ELSE
          else_header ::= if_header * stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  51
                     SEMICOLON shift  159
                      LBRACKET shift  1
                            IF shift  181
                         WHILE shift  172
                           FOR shift  100
                      CONTINUE shift  98
                         BREAK shift  97
                        RETURN shift  18
                    ACTIONNAME shift  96
                         error shift  94
                 nameListMulti shift  87
                      funcexpr shift  93
                     vdef_stmt shift  158
               vdefAssign_stmt shift  157
                vdefMulti_stmt shift  155
          vdefMultiAssign_stmt shift  156
                   assign_stmt shift  154
              assignMulti_stmt shift  153
                          stmt shift  102
                         block shift  144
                      if_start shift  105
                     if_header shift  6
                       if_stmt shift  150
                   else_header shift  5
                   while_start shift  101
                  while_header shift  4
                    while_stmt shift  149
                foreach_header shift  3
                  foreach_stmt shift  148
                 continue_stmt shift  147
                    break_stmt shift  146
                   return_stmt shift  145
                        action shift  50
                       actions shift  49
                    actionStmt shift  151

State 7:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameListMulti SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameListMulti ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameListMulti ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          fdef_chunk ::= function_header * stmt
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * funcexpr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          NAME shift  77
                           VAR shift  51
                     SEMICOLON shift  159
                      LBRACKET shift  1
                            IF shift  181
                         WHILE shift  172
                           FOR shift  100
                      CONTINUE shift  98
                         BREAK shift  97
                        RETURN shift  18
                    ACTIONNAME shift  96
                         error shift  94
                 nameListMulti shift  87
                      funcexpr shift  93
                     vdef_stmt shift  158
               vdefAssign_stmt shift  157
                vdefMulti_stmt shift  155
          vdefMultiAssign_stmt shift  156
                   assign_stmt shift  154
              assignMulti_stmt shift  153
                          stmt shift  142
                         block shift  144
                      if_start shift  105
                     if_header shift  6
                       if_stmt shift  150
                   else_header shift  5
                   while_start shift  101
                  while_header shift  4
                    while_stmt shift  149
                foreach_header shift  3
                  foreach_stmt shift  148
                 continue_stmt shift  147
                    break_stmt shift  146
                   return_stmt shift  145
                        action shift  50
                       actions shift  49
                    actionStmt shift  151

State 8:
      (0) program ::= chunks *
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefMulti_stmt ::= * VAR nameListMulti SEMICOLON
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          import_chunk ::= * FROM NAME IMPORT nameList
          chunk ::= * import_chunk
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * vdefMulti_stmt
          chunks ::= chunks * chunk

                             $ reduce 0
                           VAR shift  53
                      FUNCTION shift  133
                          FROM shift  92
                     vdef_stmt shift  138
                vdefMulti_stmt shift  137
                function_start shift  132
               function_header shift  7
                    fdef_chunk shift  139
                  import_chunk shift  140
                         chunk shift  136

State 9:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  12
                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                 CONDITIONNAME shift  103
                      funcexpr shift  128
                          expr shift  54
                         lexpr shift  71

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        STRING shift  196
                        LPAREN shift  44
                        RPAREN shift  176
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  65
                         fArgs shift  82

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  11
                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                 CONDITIONNAME shift  103
                      funcexpr shift  128
                          expr shift  54
                         lexpr shift  178

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  11
                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                 CONDITIONNAME shift  103
                      funcexpr shift  128
                          expr shift  54
                         lexpr shift  179

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  12
                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                 CONDITIONNAME shift  103
                      funcexpr shift  128
                          expr shift  54
                         lexpr shift  104

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  12
                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                 CONDITIONNAME shift  103
                      funcexpr shift  128
                          expr shift  54
                         lexpr shift  180

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  12
                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                 CONDITIONNAME shift  103
                      funcexpr shift  128
                          expr shift  54
                         lexpr shift  72

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= NAME LPAREN * fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          funcexpr ::= NAME LPAREN * RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        STRING shift  196
                        LPAREN shift  44
                        RPAREN shift  193
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  65
                         fArgs shift  88

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        STRING shift  196
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  65
                         fArgs shift  79

State 18:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * SEMICOLON
          return_stmt ::= RETURN * exprList SEMICOLON

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                     SEMICOLON shift  164
                      exprList shift  80
                      funcexpr shift  110
                          expr shift  64

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          fArgs ::= * expr
          fArgs ::= * STRING
          fArgs ::= * fArgs COMMA fArgs
          fArgs ::= fArgs COMMA * fArgs
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        STRING shift  196
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  65
                         fArgs shift  195

State 20:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= FOR LPAREN nameList COLON * exprList RPAREN

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      exprList shift  81
                      funcexpr shift  110
                          expr shift  64

State 21:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefMultiAssign_stmt ::= VAR nameListMulti ASSIGN * exprList SEMICOLON

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      exprList shift  83
                      funcexpr shift  110
                          expr shift  64

State 22:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          exprList ::= exprList COMMA * exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      exprList shift  188
                      funcexpr shift  110
                          expr shift  64

State 23:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assignMulti_stmt ::= nameListMulti ASSIGN * exprList SEMICOLON

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      exprList shift  84
                      funcexpr shift  110
                          expr shift  64

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  58

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  59

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  60

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  61

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  62

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  63

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR NAME ASSIGN * expr SEMICOLON

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  55

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= NAME ASSIGN * expr SEMICOLON

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  56

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  197

State 33:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  198

State 34:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  199

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  67

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  66

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  68

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  69

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  70

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  200

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  201

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  202

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  76

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  57

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  34
                         MINUS shift  33
                        BITNOT shift  32
                        NUMBER shift  208
                          NAME shift  123
                        LPAREN shift  44
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  128
                          expr shift  75

State 46:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          function_header ::= function_start LPAREN * nameList RPAREN
          function_header ::= function_start LPAREN * RPAREN

                          NAME shift  131
                        RPAREN shift  210
                 nameListMulti shift  130
                      nameList shift  129

State 47:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          import_chunk ::= FROM NAME IMPORT * nameList

                          NAME shift  131
                 nameListMulti shift  130
                      nameList shift  141

State 48:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          nameList ::= * NAME
          nameList ::= * nameListMulti
          foreach_header ::= FOR LPAREN * nameList COLON exprList RPAREN

                          NAME shift  131
                 nameListMulti shift  130
                      nameList shift  99

State 49:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
     (81) actionStmt ::= actions *

                    ACTIONNAME shift  96
                    ACTIONNAME reduce 81  ** Parsing conflict **
                        action shift  161
                     {default} reduce 81

State 50:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
     (80) actionStmt ::= action *

                    ACTIONNAME shift  96
                    ACTIONNAME reduce 80  ** Parsing conflict **
                        action shift  162
                     {default} reduce 80

State 51:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefAssign_stmt ::= VAR * NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= VAR * nameListMulti SEMICOLON
          vdefMultiAssign_stmt ::= VAR * nameListMulti ASSIGN exprList SEMICOLON

                          NAME shift  74
                 nameListMulti shift  73

State 52:
          numList ::= * NUMBER COMMA NUMBER
          numList ::= * numList COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET * numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  86
                       numList shift  85

State 53:
          nameListMulti ::= * NAME COMMA NAME
          nameListMulti ::= * nameListMulti COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefMulti_stmt ::= VAR * nameListMulti SEMICOLON

                          NAME shift  90
                 nameListMulti shift  89

State 54:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  29
                            LE shift  27
                            LT shift  26
                            GE shift  25
                            GT shift  24
                            NE shift  28
                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40

State 55:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          vdefAssign_stmt ::= VAR NAME ASSIGN expr * SEMICOLON

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     SEMICOLON shift  186

State 56:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          assign_stmt ::= NAME ASSIGN expr * SEMICOLON

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     SEMICOLON shift  192

State 57:
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                        RPAREN shift  207

State 58:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (42) lexpr ::= expr GT expr *

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 42

State 59:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (41) lexpr ::= expr GE expr *

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 41

State 60:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (40) lexpr ::= expr LT expr *

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 40

State 61:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (39) lexpr ::= expr LE expr *

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 39

State 62:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (38) lexpr ::= expr NE expr *

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 38

State 63:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (37) lexpr ::= expr EQ expr *

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 37

State 64:
      (9) exprList ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 9

State 65:
     (13) fArgs ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  36
                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 13

State 66:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (32) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  35
                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 32

State 67:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (33) expr ::= expr BITXOR expr *

                        BITAND shift  37
                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 33

State 68:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (31) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  39
                        RSHIFT shift  38
                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 31

State 69:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (30) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 30

State 70:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (29) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  45
                         MINUS shift  43
                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 29

State 71:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  13
                          LAND shift  14
                        RPAREN shift  171

State 72:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  13
                          LAND shift  14
                        RPAREN shift  175

State 73:
          nameListMulti ::= nameListMulti * COMMA NAME
          vdefMulti_stmt ::= VAR nameListMulti * SEMICOLON
          vdefMultiAssign_stmt ::= VAR nameListMulti * ASSIGN exprList SEMICOLON

                         COMMA shift  134
                        ASSIGN shift  21
                     SEMICOLON shift  213

State 74:
          nameListMulti ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON
          vdefAssign_stmt ::= VAR NAME * ASSIGN expr SEMICOLON

                         COMMA shift  135
                        ASSIGN shift  30
                     SEMICOLON shift  215

State 75:
          expr ::= expr * PLUS expr
     (24) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 24

State 76:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (25) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  41
                      MULTIPLY shift  42
                           MOD shift  40
                     {default} reduce 25

State 77:
          nameListMulti ::= NAME * COMMA NAME
          funcexpr ::= NAME * LPAREN fArgs RPAREN
          funcexpr ::= NAME * LPAREN RPAREN
          assign_stmt ::= NAME * ASSIGN expr SEMICOLON

                         COMMA shift  135
                        ASSIGN shift  31
                        LPAREN shift  16

State 78:
          block ::= LBRACKET error * RBRACKET
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  160
                      RBRACKET shift  143

State 79:
          fArgs ::= fArgs * COMMA fArgs
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                         COMMA shift  19
                        RPAREN shift  95

State 80:
          exprList ::= exprList * COMMA exprList
          return_stmt ::= RETURN exprList * SEMICOLON

                         COMMA shift  22
                     SEMICOLON shift  165

State 81:
          exprList ::= exprList * COMMA exprList
          foreach_header ::= FOR LPAREN nameList COLON exprList * RPAREN

                         COMMA shift  22
                        RPAREN shift  169

State 82:
          fArgs ::= fArgs * COMMA fArgs
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                         COMMA shift  19
                        RPAREN shift  177

State 83:
          exprList ::= exprList * COMMA exprList
          vdefMultiAssign_stmt ::= VAR nameListMulti ASSIGN exprList * SEMICOLON

                         COMMA shift  22
                     SEMICOLON shift  185

State 84:
          exprList ::= exprList * COMMA exprList
          assignMulti_stmt ::= nameListMulti ASSIGN exprList * SEMICOLON

                         COMMA shift  22
                     SEMICOLON shift  187

State 85:
          numList ::= numList * COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList * RSQBRACKET RSQBRACKET

                         COMMA shift  107
                    RSQBRACKET shift  106

State 86:
          numList ::= NUMBER * COMMA NUMBER
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                         COMMA shift  108
                    RSQBRACKET shift  124

State 87:
          nameListMulti ::= nameListMulti * COMMA NAME
          assignMulti_stmt ::= nameListMulti * ASSIGN exprList SEMICOLON

                         COMMA shift  134
                        ASSIGN shift  23

State 88:
          fArgs ::= fArgs * COMMA fArgs
          funcexpr ::= NAME LPAREN fArgs * RPAREN

                         COMMA shift  19
                        RPAREN shift  194

State 89:
          nameListMulti ::= nameListMulti * COMMA NAME
          vdefMulti_stmt ::= VAR nameListMulti * SEMICOLON

                         COMMA shift  134
                     SEMICOLON shift  213

State 90:
          nameListMulti ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON

                         COMMA shift  135
                     SEMICOLON shift  215

State 91:
          import_chunk ::= FROM NAME * IMPORT nameList

                        IMPORT shift  47

State 92:
          import_chunk ::= FROM * NAME IMPORT nameList

                          NAME shift  91

State 93:
          stmt ::= funcexpr * SEMICOLON

                     SEMICOLON shift  152

State 94:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  160

State 95:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  163

State 96:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  17

State 97:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  166

State 98:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  167

State 99:
          foreach_header ::= FOR LPAREN nameList * COLON exprList RPAREN

                         COLON shift  20

State 100:
          foreach_header ::= FOR * LPAREN nameList COLON exprList RPAREN

                        LPAREN shift  48

State 101:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  9

State 102:
     (59) if_stmt ::= if_header stmt *
          else_header ::= if_header stmt * ELSE

                          ELSE shift  174
                          ELSE reduce 59  ** Parsing conflict **
                     {default} reduce 59

State 103:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  10

State 104:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (44) lexpr ::= lexpr LOR lexpr *

                          LAND shift  14
                     {default} reduce 44

State 105:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  15

State 106:
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  189

State 107:
          numList ::= numList COMMA * NUMBER

                        NUMBER shift  190

State 108:
          numList ::= NUMBER COMMA * NUMBER

                        NUMBER shift  191

State 109:
          exprList ::= funcexpr LSQBRACKET * LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  52

State 110:
          exprList ::= funcexpr * LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (18) expr ::= funcexpr *

                    LSQBRACKET shift  109
                     {default} reduce 18

State 111:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  203

State 112:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  111

State 113:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  112

State 114:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  204

State 115:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  114

State 116:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  115

State 117:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  205

State 118:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  117

State 119:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  118

State 120:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  206

State 121:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  120

State 122:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  121

State 123:
     (12) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
          funcexpr ::= NAME * LPAREN RPAREN

                        LPAREN shift  16
                     {default} reduce 12

State 124:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  209

State 125:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  124

State 126:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  125

State 127:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  126

State 128:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (18) expr ::= funcexpr *

                    LSQBRACKET shift  127
                     {default} reduce 18

State 129:
          function_header ::= function_start LPAREN nameList * RPAREN

                        RPAREN shift  211

State 130:
          nameListMulti ::= nameListMulti * COMMA NAME
      (6) nameList ::= nameListMulti *

                         COMMA shift  134
                     {default} reduce 6

State 131:
          nameListMulti ::= NAME * COMMA NAME
      (5) nameList ::= NAME *

                         COMMA shift  135
                     {default} reduce 5

State 132:
          function_header ::= function_start * LPAREN nameList RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  46

State 133:
          function_start ::= FUNCTION * NAME

                          NAME shift  212

State 134:
          nameListMulti ::= nameListMulti COMMA * NAME

                          NAME shift  214

State 135:
          nameListMulti ::= NAME COMMA * NAME

                          NAME shift  216

State 136:
    (105) chunks ::= chunks chunk *

                     {default} reduce 105

State 137:
    (103) chunk ::= vdefMulti_stmt *

                     {default} reduce 103

State 138:
    (102) chunk ::= vdef_stmt *

                     {default} reduce 102

State 139:
    (101) chunk ::= fdef_chunk *

                     {default} reduce 101

State 140:
    (100) chunk ::= import_chunk *

                     {default} reduce 100

State 141:
     (99) import_chunk ::= FROM NAME IMPORT nameList *

                     {default} reduce 99

State 142:
     (72) fdef_chunk ::= function_header stmt *

                     {default} reduce 72

State 143:
     (56) block ::= LBRACKET error RBRACKET *

                     {default} reduce 56

State 144:
     (98) stmt ::= block *

                     {default} reduce 98

State 145:
     (97) stmt ::= return_stmt *

                     {default} reduce 97

State 146:
     (96) stmt ::= break_stmt *

                     {default} reduce 96

State 147:
     (95) stmt ::= continue_stmt *

                     {default} reduce 95

State 148:
     (94) stmt ::= foreach_stmt *

                     {default} reduce 94

State 149:
     (93) stmt ::= while_stmt *

                     {default} reduce 93

State 150:
     (92) stmt ::= if_stmt *

                     {default} reduce 92

State 151:
     (91) stmt ::= actionStmt *

                     {default} reduce 91

State 152:
     (90) stmt ::= funcexpr SEMICOLON *

                     {default} reduce 90

State 153:
     (89) stmt ::= assignMulti_stmt *

                     {default} reduce 89

State 154:
     (88) stmt ::= assign_stmt *

                     {default} reduce 88

State 155:
     (87) stmt ::= vdefMulti_stmt *

                     {default} reduce 87

State 156:
     (86) stmt ::= vdefMultiAssign_stmt *

                     {default} reduce 86

State 157:
     (85) stmt ::= vdefAssign_stmt *

                     {default} reduce 85

State 158:
     (84) stmt ::= vdef_stmt *

                     {default} reduce 84

State 159:
     (83) stmt ::= SEMICOLON *

                     {default} reduce 83

State 160:
     (82) stmt ::= error SEMICOLON *

                     {default} reduce 82

State 161:
     (79) actions ::= actions action *

                     {default} reduce 79

State 162:
     (78) actions ::= action action *

                     {default} reduce 78

State 163:
     (77) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 77

State 164:
     (73) return_stmt ::= RETURN SEMICOLON *

                     {default} reduce 73

State 165:
     (74) return_stmt ::= RETURN exprList SEMICOLON *

                     {default} reduce 74

State 166:
     (68) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 68

State 167:
     (67) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 67

State 168:
     (66) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 66

State 169:
     (65) foreach_header ::= FOR LPAREN nameList COLON exprList RPAREN *

                     {default} reduce 65

State 170:
     (64) while_stmt ::= while_header stmt *

                     {default} reduce 64

State 171:
     (63) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 63

State 172:
     (62) while_start ::= WHILE *

                     {default} reduce 62

State 173:
     (61) if_stmt ::= else_header stmt *

                     {default} reduce 61

State 174:
     (60) else_header ::= if_header stmt ELSE *

                     {default} reduce 60

State 175:
     (58) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 58

State 176:
     (76) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 76

State 177:
     (75) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 75

State 178:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (45) lexpr ::= LNOT lexpr *
     (46) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 46

State 179:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (45) lexpr ::= LNOT lexpr *

                     {default} reduce 45

State 180:
          lexpr ::= lexpr * LAND lexpr
     (43) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 43

State 181:
     (57) if_start ::= IF *

                     {default} reduce 57

State 182:
     (55) block ::= LBRACKET stmtList RBRACKET *

                     {default} reduce 55

State 183:
     (54) stmtList ::= stmtList stmt *

                     {default} reduce 54

State 184:
     (53) stmtList ::= stmt *

                     {default} reduce 53

State 185:
     (50) vdefMultiAssign_stmt ::= VAR nameListMulti ASSIGN exprList SEMICOLON *

                     {default} reduce 50

State 186:
     (48) vdefAssign_stmt ::= VAR NAME ASSIGN expr SEMICOLON *

                     {default} reduce 48

State 187:
     (52) assignMulti_stmt ::= nameListMulti ASSIGN exprList SEMICOLON *

                     {default} reduce 52

State 188:
          exprList ::= exprList * COMMA exprList
     (10) exprList ::= exprList COMMA exprList *

                     {default} reduce 10

State 189:
      (7) exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET *

                     {default} reduce 7

State 190:
      (2) numList ::= numList COMMA NUMBER *

                     {default} reduce 2

State 191:
      (1) numList ::= NUMBER COMMA NUMBER *

                     {default} reduce 1

State 192:
     (51) assign_stmt ::= NAME ASSIGN expr SEMICOLON *

                     {default} reduce 51

State 193:
     (17) funcexpr ::= NAME LPAREN RPAREN *

                     {default} reduce 17

State 194:
     (16) funcexpr ::= NAME LPAREN fArgs RPAREN *

                     {default} reduce 16

State 195:
          fArgs ::= fArgs * COMMA fArgs
     (15) fArgs ::= fArgs COMMA fArgs *

                     {default} reduce 15

State 196:
     (14) fArgs ::= STRING *

                     {default} reduce 14

State 197:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (36) expr ::= BITNOT expr *

                     {default} reduce 36

State 198:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (35) expr ::= MINUS expr *

                     {default} reduce 35

State 199:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (34) expr ::= PLUS expr *

                     {default} reduce 34

State 200:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (28) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 28

State 201:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (27) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 27

State 202:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (26) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 26

State 203:
     (23) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 23

State 204:
     (22) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 22

State 205:
     (21) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 21

State 206:
     (20) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 20

State 207:
     (19) expr ::= LPAREN expr RPAREN *

                     {default} reduce 19

State 208:
     (11) expr ::= NUMBER *

                     {default} reduce 11

State 209:
      (8) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 8

State 210:
     (71) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 71

State 211:
     (70) function_header ::= function_start LPAREN nameList RPAREN *

                     {default} reduce 70

State 212:
     (69) function_start ::= FUNCTION NAME *

                     {default} reduce 69

State 213:
     (49) vdefMulti_stmt ::= VAR nameListMulti SEMICOLON *

                     {default} reduce 49

State 214:
      (4) nameListMulti ::= nameListMulti COMMA NAME *

                     {default} reduce 4

State 215:
     (47) vdef_stmt ::= VAR NAME SEMICOLON *

                     {default} reduce 47

State 216:
      (3) nameListMulti ::= NAME COMMA NAME *

                     {default} reduce 3

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: LSQBRACKET
   28: RSQBRACKET
   29: STRING
   30: LPAREN
   31: RPAREN
   32: FUNCCALL
   33: MAPSTRING
   34: UNIT
   35: SWITCH
   36: LOCATION
   37: VAR
   38: SEMICOLON
   39: LBRACKET
   40: RBRACKET
   41: IF
   42: IFX
   43: ELSE
   44: WHILE
   45: FOR
   46: COLON
   47: CONTINUE
   48: BREAK
   49: FUNCTION
   50: RETURN
   51: CONDITIONNAME
   52: ACTIONNAME
   53: FROM
   54: IMPORT
   55: error:
   56: nt:
   57: program: <lambda> VAR FUNCTION FROM
   58: chunks: <lambda> VAR FUNCTION FROM
   59: numList: NUMBER
   60: nameListMulti: NAME
   61: nameList: NAME
   62: exprList: PLUS MINUS BITNOT NUMBER NAME LPAREN MAPSTRING UNIT SWITCH LOCATION
   63: funcexpr: NAME
   64: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN MAPSTRING UNIT SWITCH LOCATION
   65: fArgs: PLUS MINUS BITNOT NUMBER NAME STRING LPAREN MAPSTRING UNIT SWITCH LOCATION
   66: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
   67: vdef_stmt: VAR
   68: vdefAssign_stmt: VAR
   69: vdefMulti_stmt: VAR
   70: vdefMultiAssign_stmt: VAR
   71: assign_stmt: NAME
   72: assignMulti_stmt: NAME
   73: stmtList: NAME VAR SEMICOLON LBRACKET IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   74: stmt: NAME VAR SEMICOLON LBRACKET IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   75: block: LBRACKET
   76: if_start: IF
   77: if_header: IF
   78: if_stmt: IF
   79: else_header: IF
   80: while_start: WHILE
   81: while_header: WHILE
   82: while_stmt: WHILE
   83: foreach_header: FOR
   84: foreach_stmt: FOR
   85: continue_stmt: CONTINUE
   86: break_stmt: BREAK
   87: function_start: FUNCTION
   88: function_header: FUNCTION
   89: fdef_chunk: FUNCTION
   90: return_stmt: RETURN
   91: action: ACTIONNAME
   92: actions: ACTIONNAME
   93: actionStmt: ACTIONNAME
   94: import_chunk: FROM
   95: chunk: VAR FUNCTION FROM
