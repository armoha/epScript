State 0:
          program ::= * chunks
     (85) chunks ::= *
          chunks ::= * chunks chunk

                             $ reduce 85
                           VAR reduce 85
                      FUNCTION reduce 85
                       program accept
                        chunks shift  8

State 1:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          stmtList ::= * stmt
          stmtList ::= * stmtList stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET * stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          block ::= LBRACKET * error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  109
                        LPAREN shift  25
                           VAR shift  46
                     SEMICOLON shift  73
                      LBRACKET shift  1
                            IF shift  168
                         WHILE shift  161
                           FOR shift  158
                      CONTINUE shift  156
                         BREAK shift  155
                        RETURN shift  11
                         error shift  153
                      nameList shift  141
                      funcexpr shift  48
                          expr shift  121
                     vdef_stmt shift  71
               vdefAssign_stmt shift  69
                vdefMulti_stmt shift  95
          vdefMultiAssign_stmt shift  98
                   assign_stmt shift  94
              assignMulti_stmt shift  93
                      stmtList shift  2
                          stmt shift  100
                         block shift  83
                      if_start shift  167
                     if_header shift  5
                       if_stmt shift  89
                   else_header shift  6
                   while_start shift  160
                  while_header shift  7
                    while_stmt shift  88
                foreach_header shift  4
                  foreach_stmt shift  87
                 continue_stmt shift  86
                    break_stmt shift  85
                   return_stmt shift  84

State 2:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          stmtList ::= stmtList * stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET stmtList * RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  109
                        LPAREN shift  25
                           VAR shift  46
                     SEMICOLON shift  73
                      LBRACKET shift  1
                      RBRACKET shift  82
                            IF shift  168
                         WHILE shift  161
                           FOR shift  158
                      CONTINUE shift  156
                         BREAK shift  155
                        RETURN shift  11
                         error shift  154
                      nameList shift  141
                      funcexpr shift  48
                          expr shift  121
                     vdef_stmt shift  71
               vdefAssign_stmt shift  69
                vdefMulti_stmt shift  95
          vdefMultiAssign_stmt shift  98
                   assign_stmt shift  94
              assignMulti_stmt shift  93
                          stmt shift  102
                         block shift  83
                      if_start shift  167
                     if_header shift  5
                       if_stmt shift  89
                   else_header shift  6
                   while_start shift  160
                  while_header shift  7
                    while_stmt shift  88
                foreach_header shift  4
                  foreach_stmt shift  87
                 continue_stmt shift  86
                    break_stmt shift  85
                   return_stmt shift  84

State 3:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          fdef_chunk ::= function_header * stmt
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  109
                        LPAREN shift  25
                           VAR shift  46
                     SEMICOLON shift  73
                      LBRACKET shift  1
                            IF shift  168
                         WHILE shift  161
                           FOR shift  158
                      CONTINUE shift  156
                         BREAK shift  155
                        RETURN shift  11
                         error shift  154
                      nameList shift  141
                      funcexpr shift  48
                          expr shift  121
                     vdef_stmt shift  71
               vdefAssign_stmt shift  69
                vdefMulti_stmt shift  95
          vdefMultiAssign_stmt shift  98
                   assign_stmt shift  94
              assignMulti_stmt shift  93
                          stmt shift  135
                         block shift  83
                      if_start shift  167
                     if_header shift  5
                       if_stmt shift  89
                   else_header shift  6
                   while_start shift  160
                  while_header shift  7
                    while_stmt shift  88
                foreach_header shift  4
                  foreach_stmt shift  87
                 continue_stmt shift  86
                    break_stmt shift  85
                   return_stmt shift  84

State 4:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  109
                        LPAREN shift  25
                           VAR shift  46
                     SEMICOLON shift  73
                      LBRACKET shift  1
                            IF shift  168
                         WHILE shift  161
                           FOR shift  158
                      CONTINUE shift  156
                         BREAK shift  155
                        RETURN shift  11
                         error shift  154
                      nameList shift  141
                      funcexpr shift  48
                          expr shift  121
                     vdef_stmt shift  71
               vdefAssign_stmt shift  69
                vdefMulti_stmt shift  95
          vdefMultiAssign_stmt shift  98
                   assign_stmt shift  94
              assignMulti_stmt shift  93
                          stmt shift  70
                         block shift  83
                      if_start shift  167
                     if_header shift  5
                       if_stmt shift  89
                   else_header shift  6
                   while_start shift  160
                  while_header shift  7
                    while_stmt shift  88
                foreach_header shift  4
                  foreach_stmt shift  87
                 continue_stmt shift  86
                    break_stmt shift  85
                   return_stmt shift  84

State 5:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          if_stmt ::= if_header * stmt
          else_header ::= * if_header stmt ELSE
          else_header ::= if_header * stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  109
                        LPAREN shift  25
                           VAR shift  46
                     SEMICOLON shift  73
                      LBRACKET shift  1
                            IF shift  168
                         WHILE shift  161
                           FOR shift  158
                      CONTINUE shift  156
                         BREAK shift  155
                        RETURN shift  11
                         error shift  154
                      nameList shift  141
                      funcexpr shift  48
                          expr shift  121
                     vdef_stmt shift  71
               vdefAssign_stmt shift  69
                vdefMulti_stmt shift  95
          vdefMultiAssign_stmt shift  98
                   assign_stmt shift  94
              assignMulti_stmt shift  93
                          stmt shift  91
                         block shift  83
                      if_start shift  167
                     if_header shift  5
                       if_stmt shift  89
                   else_header shift  6
                   while_start shift  160
                  while_header shift  7
                    while_stmt shift  88
                foreach_header shift  4
                  foreach_stmt shift  87
                 continue_stmt shift  86
                    break_stmt shift  85
                   return_stmt shift  84

State 6:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          if_stmt ::= else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  109
                        LPAREN shift  25
                           VAR shift  46
                     SEMICOLON shift  73
                      LBRACKET shift  1
                            IF shift  168
                         WHILE shift  161
                           FOR shift  158
                      CONTINUE shift  156
                         BREAK shift  155
                        RETURN shift  11
                         error shift  154
                      nameList shift  141
                      funcexpr shift  48
                          expr shift  121
                     vdef_stmt shift  71
               vdefAssign_stmt shift  69
                vdefMulti_stmt shift  95
          vdefMultiAssign_stmt shift  98
                   assign_stmt shift  94
              assignMulti_stmt shift  93
                          stmt shift  92
                         block shift  83
                      if_start shift  167
                     if_header shift  5
                       if_stmt shift  89
                   else_header shift  6
                   while_start shift  160
                  while_header shift  7
                    while_stmt shift  88
                foreach_header shift  4
                  foreach_stmt shift  87
                 continue_stmt shift  86
                    break_stmt shift  85
                   return_stmt shift  84

State 7:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  109
                        LPAREN shift  25
                           VAR shift  46
                     SEMICOLON shift  73
                      LBRACKET shift  1
                            IF shift  168
                         WHILE shift  161
                           FOR shift  158
                      CONTINUE shift  156
                         BREAK shift  155
                        RETURN shift  11
                         error shift  154
                      nameList shift  141
                      funcexpr shift  48
                          expr shift  121
                     vdef_stmt shift  71
               vdefAssign_stmt shift  69
                vdefMulti_stmt shift  95
          vdefMultiAssign_stmt shift  98
                   assign_stmt shift  94
              assignMulti_stmt shift  93
                          stmt shift  97
                         block shift  83
                      if_start shift  167
                     if_header shift  5
                       if_stmt shift  89
                   else_header shift  6
                   while_start shift  160
                  while_header shift  7
                    while_stmt shift  88
                foreach_header shift  4
                  foreach_stmt shift  87
                 continue_stmt shift  86
                    break_stmt shift  85
                   return_stmt shift  84

State 8:
      (0) program ::= chunks *
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * vdefMulti_stmt
          chunks ::= chunks * chunk

                             $ reduce 0
                           VAR shift  44
                      FUNCTION shift  162
                     vdef_stmt shift  126
                vdefMulti_stmt shift  127
                function_start shift  164
               function_header shift  3
                    fdef_chunk shift  132
                         chunk shift  131

State 9:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= NAME LPAREN * exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          funcexpr ::= NAME LPAREN * RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                        RPAREN shift  50
                      exprList shift  140
                      funcexpr shift  110
                          expr shift  113

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr

                          LNOT shift  16
                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  101
                         lexpr shift  138

State 11:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * SEMICOLON
          return_stmt ::= RETURN * exprList SEMICOLON

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                     SEMICOLON shift  77
                      exprList shift  152
                      funcexpr shift  110
                          expr shift  113

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr

                          LNOT shift  10
                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  101
                         lexpr shift  136

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN

                          LNOT shift  10
                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  101
                         lexpr shift  129

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN

                          LNOT shift  10
                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  101
                         lexpr shift  125

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr

                          LNOT shift  10
                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  101
                         lexpr shift  130

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr

                          LNOT shift  16
                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  101
                         lexpr shift  128

State 17:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assignMulti_stmt ::= nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      exprList shift  143
                      funcexpr shift  110
                          expr shift  113

State 18:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefMultiAssign_stmt ::= VAR nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      exprList shift  145
                      funcexpr shift  110
                          expr shift  113

State 19:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= FOR LPAREN nameList COLON * exprList RPAREN

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      exprList shift  151
                      funcexpr shift  110
                          expr shift  113

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  115

State 21:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  116

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  118

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  117

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  62

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  122

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  52

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  61

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  56

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  60

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  57

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  111

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  114

State 33:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  65

State 34:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  64

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  58

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR NAME ASSIGN * expr SEMICOLON

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  119

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  59

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= NAME ASSIGN * expr SEMICOLON

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  120

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  67

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= exprList COMMA * expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  112

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  66

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  26
                        BITNOT shift  41
                        NUMBER shift  54
                          NAME shift  49
                        LPAREN shift  25
                      funcexpr shift  48
                          expr shift  63

State 43:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          function_header ::= function_start LPAREN * nameList RPAREN
          function_header ::= function_start LPAREN * RPAREN

                          NAME shift  165
                        RPAREN shift  105
                      nameList shift  148

State 44:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefMulti_stmt ::= VAR * nameList SEMICOLON

                          NAME shift  139
                      nameList shift  149

State 45:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          foreach_header ::= FOR LPAREN * nameList COLON exprList RPAREN

                          NAME shift  165
                      nameList shift  150

State 46:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefAssign_stmt ::= VAR * NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= VAR * nameList SEMICOLON
          vdefMultiAssign_stmt ::= VAR * nameList ASSIGN exprList SEMICOLON

                          NAME shift  133
                      nameList shift  134

State 47:
          numList ::= * NUMBER COMMA NUMBER
          numList ::= * numList COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET * numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  147
                       numList shift  144

State 48:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (13) expr ::= funcexpr *

                         COMMA reduce 13
                           LOR reduce 13
                          LAND reduce 13
                            EQ reduce 13
                            LE reduce 13
                            LT reduce 13
                            GE reduce 13
                            GT reduce 13
                            NE reduce 13
                         BITOR reduce 13
                        BITXOR reduce 13
                        BITAND reduce 13
                        LSHIFT reduce 13
                        RSHIFT reduce 13
                          PLUS reduce 13
                         MINUS reduce 13
                        DIVIDE reduce 13
                      MULTIPLY reduce 13
                           MOD reduce 13
                    LSQBRACKET shift  174
                        RPAREN reduce 13
                     SEMICOLON reduce 13

State 49:
     (10) expr ::= NAME *
          funcexpr ::= NAME * LPAREN exprList RPAREN
          funcexpr ::= NAME * LPAREN RPAREN

                         COMMA reduce 10
                           LOR reduce 10
                          LAND reduce 10
                            EQ reduce 10
                            LE reduce 10
                            LT reduce 10
                            GE reduce 10
                            GT reduce 10
                            NE reduce 10
                         BITOR reduce 10
                        BITXOR reduce 10
                        BITAND reduce 10
                        LSHIFT reduce 10
                        RSHIFT reduce 10
                          PLUS reduce 10
                         MINUS reduce 10
                        DIVIDE reduce 10
                      MULTIPLY reduce 10
                           MOD reduce 10
                        LPAREN shift  9
                        RPAREN reduce 10
                     SEMICOLON reduce 10

State 50:
     (12) funcexpr ::= NAME LPAREN RPAREN *

                         COMMA reduce 12
                           LOR reduce 12
                          LAND reduce 12
                            EQ reduce 12
                            LE reduce 12
                            LT reduce 12
                            GE reduce 12
                            GT reduce 12
                            NE reduce 12
                         BITOR reduce 12
                        BITXOR reduce 12
                        BITAND reduce 12
                        LSHIFT reduce 12
                        RSHIFT reduce 12
                          PLUS reduce 12
                         MINUS reduce 12
                        DIVIDE reduce 12
                      MULTIPLY reduce 12
                           MOD reduce 12
                    LSQBRACKET reduce 12
                        RPAREN reduce 12
                     SEMICOLON reduce 12

State 51:
     (11) funcexpr ::= NAME LPAREN exprList RPAREN *

                         COMMA reduce 11
                           LOR reduce 11
                          LAND reduce 11
                            EQ reduce 11
                            LE reduce 11
                            LT reduce 11
                            GE reduce 11
                            GT reduce 11
                            NE reduce 11
                         BITOR reduce 11
                        BITXOR reduce 11
                        BITAND reduce 11
                        LSHIFT reduce 11
                        RSHIFT reduce 11
                          PLUS reduce 11
                         MINUS reduce 11
                        DIVIDE reduce 11
                      MULTIPLY reduce 11
                           MOD reduce 11
                    LSQBRACKET reduce 11
                        RPAREN reduce 11
                     SEMICOLON reduce 11

State 52:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (26) expr ::= MINUS expr *

                         COMMA reduce 26
                           LOR reduce 26
                          LAND reduce 26
                            EQ reduce 26
                            LE reduce 26
                            LT reduce 26
                            GE reduce 26
                            GT reduce 26
                            NE reduce 26
                         BITOR reduce 26
                        BITXOR reduce 26
                        BITAND reduce 26
                        LSHIFT reduce 26
                        RSHIFT reduce 26
                          PLUS reduce 26
                         MINUS reduce 26
                        DIVIDE reduce 26
                      MULTIPLY reduce 26
                           MOD reduce 26
                        RPAREN reduce 26
                     SEMICOLON reduce 26

State 53:
      (6) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                         COMMA reduce 6
                           LOR reduce 6
                          LAND reduce 6
                            EQ reduce 6
                            LE reduce 6
                            LT reduce 6
                            GE reduce 6
                            GT reduce 6
                            NE reduce 6
                         BITOR reduce 6
                        BITXOR reduce 6
                        BITAND reduce 6
                        LSHIFT reduce 6
                        RSHIFT reduce 6
                          PLUS reduce 6
                         MINUS reduce 6
                        DIVIDE reduce 6
                      MULTIPLY reduce 6
                           MOD reduce 6
                        RPAREN reduce 6
                     SEMICOLON reduce 6

State 54:
      (9) expr ::= NUMBER *

                         COMMA reduce 9
                           LOR reduce 9
                          LAND reduce 9
                            EQ reduce 9
                            LE reduce 9
                            LT reduce 9
                            GE reduce 9
                            GT reduce 9
                            NE reduce 9
                         BITOR reduce 9
                        BITXOR reduce 9
                        BITAND reduce 9
                        LSHIFT reduce 9
                        RSHIFT reduce 9
                          PLUS reduce 9
                         MINUS reduce 9
                        DIVIDE reduce 9
                      MULTIPLY reduce 9
                           MOD reduce 9
                        RPAREN reduce 9
                     SEMICOLON reduce 9

State 55:
     (14) expr ::= LPAREN expr RPAREN *

                         COMMA reduce 14
                           LOR reduce 14
                          LAND reduce 14
                            EQ reduce 14
                            LE reduce 14
                            LT reduce 14
                            GE reduce 14
                            GT reduce 14
                            NE reduce 14
                         BITOR reduce 14
                        BITXOR reduce 14
                        BITAND reduce 14
                        LSHIFT reduce 14
                        RSHIFT reduce 14
                          PLUS reduce 14
                         MINUS reduce 14
                        DIVIDE reduce 14
                      MULTIPLY reduce 14
                           MOD reduce 14
                        RPAREN reduce 14
                     SEMICOLON reduce 14

State 56:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (16) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         COMMA reduce 16
                           LOR reduce 16
                          LAND reduce 16
                            EQ reduce 16
                            LE reduce 16
                            LT reduce 16
                            GE reduce 16
                            GT reduce 16
                            NE reduce 16
                         BITOR reduce 16
                        BITXOR reduce 16
                        BITAND reduce 16
                        LSHIFT reduce 16
                        RSHIFT reduce 16
                          PLUS reduce 16
                         MINUS reduce 16
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 16
                     SEMICOLON reduce 16

State 57:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (17) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         COMMA reduce 17
                           LOR reduce 17
                          LAND reduce 17
                            EQ reduce 17
                            LE reduce 17
                            LT reduce 17
                            GE reduce 17
                            GT reduce 17
                            NE reduce 17
                         BITOR reduce 17
                        BITXOR reduce 17
                        BITAND reduce 17
                        LSHIFT reduce 17
                        RSHIFT reduce 17
                          PLUS reduce 17
                         MINUS reduce 17
                        DIVIDE reduce 17
                      MULTIPLY reduce 17
                           MOD reduce 17
                        RPAREN reduce 17
                     SEMICOLON reduce 17

State 58:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (18) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         COMMA reduce 18
                           LOR reduce 18
                          LAND reduce 18
                            EQ reduce 18
                            LE reduce 18
                            LT reduce 18
                            GE reduce 18
                            GT reduce 18
                            NE reduce 18
                         BITOR reduce 18
                        BITXOR reduce 18
                        BITAND reduce 18
                        LSHIFT reduce 18
                        RSHIFT reduce 18
                          PLUS reduce 18
                         MINUS reduce 18
                        DIVIDE reduce 18
                      MULTIPLY reduce 18
                           MOD reduce 18
                        RPAREN reduce 18
                     SEMICOLON reduce 18

State 59:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (19) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         COMMA reduce 19
                           LOR reduce 19
                          LAND reduce 19
                            EQ reduce 19
                            LE reduce 19
                            LT reduce 19
                            GE reduce 19
                            GT reduce 19
                            NE reduce 19
                         BITOR reduce 19
                        BITXOR reduce 19
                        BITAND reduce 19
                        LSHIFT reduce 19
                        RSHIFT reduce 19
                          PLUS reduce 19
                         MINUS reduce 19
                        DIVIDE reduce 19
                      MULTIPLY reduce 19
                           MOD reduce 19
                        RPAREN reduce 19
                     SEMICOLON reduce 19

State 60:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (20) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         COMMA reduce 20
                           LOR reduce 20
                          LAND reduce 20
                            EQ reduce 20
                            LE reduce 20
                            LT reduce 20
                            GE reduce 20
                            GT reduce 20
                            NE reduce 20
                         BITOR reduce 20
                        BITXOR reduce 20
                        BITAND reduce 20
                        LSHIFT reduce 20
                        RSHIFT reduce 20
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 20
                     SEMICOLON reduce 20

State 61:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (21) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         COMMA reduce 21
                           LOR reduce 21
                          LAND reduce 21
                            EQ reduce 21
                            LE reduce 21
                            LT reduce 21
                            GE reduce 21
                            GT reduce 21
                            NE reduce 21
                         BITOR reduce 21
                        BITXOR reduce 21
                        BITAND reduce 21
                        LSHIFT reduce 21
                        RSHIFT reduce 21
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 21
                     SEMICOLON reduce 21

State 62:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (22) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         COMMA reduce 22
                           LOR reduce 22
                          LAND reduce 22
                            EQ reduce 22
                            LE reduce 22
                            LT reduce 22
                            GE reduce 22
                            GT reduce 22
                            NE reduce 22
                         BITOR reduce 22
                        BITXOR reduce 22
                        BITAND reduce 22
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 22
                     SEMICOLON reduce 22

State 63:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (23) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                         COMMA reduce 23
                           LOR reduce 23
                          LAND reduce 23
                            EQ reduce 23
                            LE reduce 23
                            LT reduce 23
                            GE reduce 23
                            GT reduce 23
                            NE reduce 23
                         BITOR reduce 23
                        BITXOR shift  34
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 23
                     SEMICOLON reduce 23

State 64:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (24) expr ::= expr BITXOR expr *

                         COMMA reduce 24
                           LOR reduce 24
                          LAND reduce 24
                            EQ reduce 24
                            LE reduce 24
                            LT reduce 24
                            GE reduce 24
                            GT reduce 24
                            NE reduce 24
                         BITOR reduce 24
                        BITXOR reduce 24
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 24
                     SEMICOLON reduce 24

State 65:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (25) expr ::= PLUS expr *

                         COMMA reduce 25
                           LOR reduce 25
                          LAND reduce 25
                            EQ reduce 25
                            LE reduce 25
                            LT reduce 25
                            GE reduce 25
                            GT reduce 25
                            NE reduce 25
                         BITOR reduce 25
                        BITXOR reduce 25
                        BITAND reduce 25
                        LSHIFT reduce 25
                        RSHIFT reduce 25
                          PLUS reduce 25
                         MINUS reduce 25
                        DIVIDE reduce 25
                      MULTIPLY reduce 25
                           MOD reduce 25
                        RPAREN reduce 25
                     SEMICOLON reduce 25

State 66:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (27) expr ::= BITNOT expr *

                         COMMA reduce 27
                           LOR reduce 27
                          LAND reduce 27
                            EQ reduce 27
                            LE reduce 27
                            LT reduce 27
                            GE reduce 27
                            GT reduce 27
                            NE reduce 27
                         BITOR reduce 27
                        BITXOR reduce 27
                        BITAND reduce 27
                        LSHIFT reduce 27
                        RSHIFT reduce 27
                          PLUS reduce 27
                         MINUS reduce 27
                        DIVIDE reduce 27
                      MULTIPLY reduce 27
                           MOD reduce 27
                        RPAREN reduce 27
                     SEMICOLON reduce 27

State 67:
          expr ::= expr * PLUS expr
     (15) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         COMMA reduce 15
                           LOR reduce 15
                          LAND reduce 15
                            EQ reduce 15
                            LE reduce 15
                            LT reduce 15
                            GE reduce 15
                            GT reduce 15
                            NE reduce 15
                         BITOR reduce 15
                        BITXOR reduce 15
                        BITAND reduce 15
                        LSHIFT reduce 15
                        RSHIFT reduce 15
                          PLUS reduce 15
                         MINUS reduce 15
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 15
                     SEMICOLON reduce 15

State 68:
     (74) stmt ::= expr SEMICOLON *

                             $ reduce 74
                          PLUS reduce 74
                         MINUS reduce 74
                        BITNOT reduce 74
                        NUMBER reduce 74
                          NAME reduce 74
                          ELSE reduce 74
                        LPAREN reduce 74
                           VAR reduce 74
                     SEMICOLON reduce 74
                      LBRACKET reduce 74
                      RBRACKET reduce 74
                            IF reduce 74
                         WHILE reduce 74
                           FOR reduce 74
                      CONTINUE reduce 74
                         BREAK reduce 74
                      FUNCTION reduce 74
                        RETURN reduce 74

State 69:
     (69) stmt ::= vdefAssign_stmt *

                             $ reduce 69
                          PLUS reduce 69
                         MINUS reduce 69
                        BITNOT reduce 69
                        NUMBER reduce 69
                          NAME reduce 69
                          ELSE reduce 69
                        LPAREN reduce 69
                           VAR reduce 69
                     SEMICOLON reduce 69
                      LBRACKET reduce 69
                      RBRACKET reduce 69
                            IF reduce 69
                         WHILE reduce 69
                           FOR reduce 69
                      CONTINUE reduce 69
                         BREAK reduce 69
                      FUNCTION reduce 69
                        RETURN reduce 69

State 70:
     (57) foreach_stmt ::= foreach_header stmt *

                             $ reduce 57
                          PLUS reduce 57
                         MINUS reduce 57
                        BITNOT reduce 57
                        NUMBER reduce 57
                          NAME reduce 57
                          ELSE reduce 57
                        LPAREN reduce 57
                           VAR reduce 57
                     SEMICOLON reduce 57
                      LBRACKET reduce 57
                      RBRACKET reduce 57
                            IF reduce 57
                         WHILE reduce 57
                           FOR reduce 57
                      CONTINUE reduce 57
                         BREAK reduce 57
                      FUNCTION reduce 57
                        RETURN reduce 57

State 71:
     (68) stmt ::= vdef_stmt *

                             $ reduce 68
                          PLUS reduce 68
                         MINUS reduce 68
                        BITNOT reduce 68
                        NUMBER reduce 68
                          NAME reduce 68
                          ELSE reduce 68
                        LPAREN reduce 68
                           VAR reduce 68
                     SEMICOLON reduce 68
                      LBRACKET reduce 68
                      RBRACKET reduce 68
                            IF reduce 68
                         WHILE reduce 68
                           FOR reduce 68
                      CONTINUE reduce 68
                         BREAK reduce 68
                      FUNCTION reduce 68
                        RETURN reduce 68

State 72:
     (58) continue_stmt ::= CONTINUE SEMICOLON *

                             $ reduce 58
                          PLUS reduce 58
                         MINUS reduce 58
                        BITNOT reduce 58
                        NUMBER reduce 58
                          NAME reduce 58
                          ELSE reduce 58
                        LPAREN reduce 58
                           VAR reduce 58
                     SEMICOLON reduce 58
                      LBRACKET reduce 58
                      RBRACKET reduce 58
                            IF reduce 58
                         WHILE reduce 58
                           FOR reduce 58
                      CONTINUE reduce 58
                         BREAK reduce 58
                      FUNCTION reduce 58
                        RETURN reduce 58

State 73:
     (67) stmt ::= SEMICOLON *

                             $ reduce 67
                          PLUS reduce 67
                         MINUS reduce 67
                        BITNOT reduce 67
                        NUMBER reduce 67
                          NAME reduce 67
                          ELSE reduce 67
                        LPAREN reduce 67
                           VAR reduce 67
                     SEMICOLON reduce 67
                      LBRACKET reduce 67
                      RBRACKET reduce 67
                            IF reduce 67
                         WHILE reduce 67
                           FOR reduce 67
                      CONTINUE reduce 67
                         BREAK reduce 67
                      FUNCTION reduce 67
                        RETURN reduce 67

State 74:
     (59) break_stmt ::= BREAK SEMICOLON *

                             $ reduce 59
                          PLUS reduce 59
                         MINUS reduce 59
                        BITNOT reduce 59
                        NUMBER reduce 59
                          NAME reduce 59
                          ELSE reduce 59
                        LPAREN reduce 59
                           VAR reduce 59
                     SEMICOLON reduce 59
                      LBRACKET reduce 59
                      RBRACKET reduce 59
                            IF reduce 59
                         WHILE reduce 59
                           FOR reduce 59
                      CONTINUE reduce 59
                         BREAK reduce 59
                      FUNCTION reduce 59
                        RETURN reduce 59

State 75:
     (66) stmt ::= error SEMICOLON *

                             $ reduce 66
                          PLUS reduce 66
                         MINUS reduce 66
                        BITNOT reduce 66
                        NUMBER reduce 66
                          NAME reduce 66
                          ELSE reduce 66
                        LPAREN reduce 66
                           VAR reduce 66
                     SEMICOLON reduce 66
                      LBRACKET reduce 66
                      RBRACKET reduce 66
                            IF reduce 66
                         WHILE reduce 66
                           FOR reduce 66
                      CONTINUE reduce 66
                         BREAK reduce 66
                      FUNCTION reduce 66
                        RETURN reduce 66

State 76:
     (65) return_stmt ::= RETURN exprList SEMICOLON *

                             $ reduce 65
                          PLUS reduce 65
                         MINUS reduce 65
                        BITNOT reduce 65
                        NUMBER reduce 65
                          NAME reduce 65
                          ELSE reduce 65
                        LPAREN reduce 65
                           VAR reduce 65
                     SEMICOLON reduce 65
                      LBRACKET reduce 65
                      RBRACKET reduce 65
                            IF reduce 65
                         WHILE reduce 65
                           FOR reduce 65
                      CONTINUE reduce 65
                         BREAK reduce 65
                      FUNCTION reduce 65
                        RETURN reduce 65

State 77:
     (64) return_stmt ::= RETURN SEMICOLON *

                             $ reduce 64
                          PLUS reduce 64
                         MINUS reduce 64
                        BITNOT reduce 64
                        NUMBER reduce 64
                          NAME reduce 64
                          ELSE reduce 64
                        LPAREN reduce 64
                           VAR reduce 64
                     SEMICOLON reduce 64
                      LBRACKET reduce 64
                      RBRACKET reduce 64
                            IF reduce 64
                         WHILE reduce 64
                           FOR reduce 64
                      CONTINUE reduce 64
                         BREAK reduce 64
                      FUNCTION reduce 64
                        RETURN reduce 64

State 78:
     (43) assignMulti_stmt ::= nameList ASSIGN exprList SEMICOLON *

                             $ reduce 43
                          PLUS reduce 43
                         MINUS reduce 43
                        BITNOT reduce 43
                        NUMBER reduce 43
                          NAME reduce 43
                          ELSE reduce 43
                        LPAREN reduce 43
                           VAR reduce 43
                     SEMICOLON reduce 43
                      LBRACKET reduce 43
                      RBRACKET reduce 43
                            IF reduce 43
                         WHILE reduce 43
                           FOR reduce 43
                      CONTINUE reduce 43
                         BREAK reduce 43
                      FUNCTION reduce 43
                        RETURN reduce 43

State 79:
     (39) vdefAssign_stmt ::= VAR NAME ASSIGN expr SEMICOLON *

                             $ reduce 39
                          PLUS reduce 39
                         MINUS reduce 39
                        BITNOT reduce 39
                        NUMBER reduce 39
                          NAME reduce 39
                          ELSE reduce 39
                        LPAREN reduce 39
                           VAR reduce 39
                     SEMICOLON reduce 39
                      LBRACKET reduce 39
                      RBRACKET reduce 39
                            IF reduce 39
                         WHILE reduce 39
                           FOR reduce 39
                      CONTINUE reduce 39
                         BREAK reduce 39
                      FUNCTION reduce 39
                        RETURN reduce 39

State 80:
     (41) vdefMultiAssign_stmt ::= VAR nameList ASSIGN exprList SEMICOLON *

                             $ reduce 41
                          PLUS reduce 41
                         MINUS reduce 41
                        BITNOT reduce 41
                        NUMBER reduce 41
                          NAME reduce 41
                          ELSE reduce 41
                        LPAREN reduce 41
                           VAR reduce 41
                     SEMICOLON reduce 41
                      LBRACKET reduce 41
                      RBRACKET reduce 41
                            IF reduce 41
                         WHILE reduce 41
                           FOR reduce 41
                      CONTINUE reduce 41
                         BREAK reduce 41
                      FUNCTION reduce 41
                        RETURN reduce 41

State 81:
     (47) block ::= LBRACKET error RBRACKET *

                             $ reduce 47
                          PLUS reduce 47
                         MINUS reduce 47
                        BITNOT reduce 47
                        NUMBER reduce 47
                          NAME reduce 47
                          ELSE reduce 47
                        LPAREN reduce 47
                           VAR reduce 47
                     SEMICOLON reduce 47
                      LBRACKET reduce 47
                      RBRACKET reduce 47
                            IF reduce 47
                         WHILE reduce 47
                           FOR reduce 47
                      CONTINUE reduce 47
                         BREAK reduce 47
                      FUNCTION reduce 47
                        RETURN reduce 47

State 82:
     (46) block ::= LBRACKET stmtList RBRACKET *

                             $ reduce 46
                          PLUS reduce 46
                         MINUS reduce 46
                        BITNOT reduce 46
                        NUMBER reduce 46
                          NAME reduce 46
                          ELSE reduce 46
                        LPAREN reduce 46
                           VAR reduce 46
                     SEMICOLON reduce 46
                      LBRACKET reduce 46
                      RBRACKET reduce 46
                            IF reduce 46
                         WHILE reduce 46
                           FOR reduce 46
                      CONTINUE reduce 46
                         BREAK reduce 46
                      FUNCTION reduce 46
                        RETURN reduce 46

State 83:
     (81) stmt ::= block *

                             $ reduce 81
                          PLUS reduce 81
                         MINUS reduce 81
                        BITNOT reduce 81
                        NUMBER reduce 81
                          NAME reduce 81
                          ELSE reduce 81
                        LPAREN reduce 81
                           VAR reduce 81
                     SEMICOLON reduce 81
                      LBRACKET reduce 81
                      RBRACKET reduce 81
                            IF reduce 81
                         WHILE reduce 81
                           FOR reduce 81
                      CONTINUE reduce 81
                         BREAK reduce 81
                      FUNCTION reduce 81
                        RETURN reduce 81

State 84:
     (80) stmt ::= return_stmt *

                             $ reduce 80
                          PLUS reduce 80
                         MINUS reduce 80
                        BITNOT reduce 80
                        NUMBER reduce 80
                          NAME reduce 80
                          ELSE reduce 80
                        LPAREN reduce 80
                           VAR reduce 80
                     SEMICOLON reduce 80
                      LBRACKET reduce 80
                      RBRACKET reduce 80
                            IF reduce 80
                         WHILE reduce 80
                           FOR reduce 80
                      CONTINUE reduce 80
                         BREAK reduce 80
                      FUNCTION reduce 80
                        RETURN reduce 80

State 85:
     (79) stmt ::= break_stmt *

                             $ reduce 79
                          PLUS reduce 79
                         MINUS reduce 79
                        BITNOT reduce 79
                        NUMBER reduce 79
                          NAME reduce 79
                          ELSE reduce 79
                        LPAREN reduce 79
                           VAR reduce 79
                     SEMICOLON reduce 79
                      LBRACKET reduce 79
                      RBRACKET reduce 79
                            IF reduce 79
                         WHILE reduce 79
                           FOR reduce 79
                      CONTINUE reduce 79
                         BREAK reduce 79
                      FUNCTION reduce 79
                        RETURN reduce 79

State 86:
     (78) stmt ::= continue_stmt *

                             $ reduce 78
                          PLUS reduce 78
                         MINUS reduce 78
                        BITNOT reduce 78
                        NUMBER reduce 78
                          NAME reduce 78
                          ELSE reduce 78
                        LPAREN reduce 78
                           VAR reduce 78
                     SEMICOLON reduce 78
                      LBRACKET reduce 78
                      RBRACKET reduce 78
                            IF reduce 78
                         WHILE reduce 78
                           FOR reduce 78
                      CONTINUE reduce 78
                         BREAK reduce 78
                      FUNCTION reduce 78
                        RETURN reduce 78

State 87:
     (77) stmt ::= foreach_stmt *

                             $ reduce 77
                          PLUS reduce 77
                         MINUS reduce 77
                        BITNOT reduce 77
                        NUMBER reduce 77
                          NAME reduce 77
                          ELSE reduce 77
                        LPAREN reduce 77
                           VAR reduce 77
                     SEMICOLON reduce 77
                      LBRACKET reduce 77
                      RBRACKET reduce 77
                            IF reduce 77
                         WHILE reduce 77
                           FOR reduce 77
                      CONTINUE reduce 77
                         BREAK reduce 77
                      FUNCTION reduce 77
                        RETURN reduce 77

State 88:
     (76) stmt ::= while_stmt *

                             $ reduce 76
                          PLUS reduce 76
                         MINUS reduce 76
                        BITNOT reduce 76
                        NUMBER reduce 76
                          NAME reduce 76
                          ELSE reduce 76
                        LPAREN reduce 76
                           VAR reduce 76
                     SEMICOLON reduce 76
                      LBRACKET reduce 76
                      RBRACKET reduce 76
                            IF reduce 76
                         WHILE reduce 76
                           FOR reduce 76
                      CONTINUE reduce 76
                         BREAK reduce 76
                      FUNCTION reduce 76
                        RETURN reduce 76

State 89:
     (75) stmt ::= if_stmt *

                             $ reduce 75
                          PLUS reduce 75
                         MINUS reduce 75
                        BITNOT reduce 75
                        NUMBER reduce 75
                          NAME reduce 75
                          ELSE reduce 75
                        LPAREN reduce 75
                           VAR reduce 75
                     SEMICOLON reduce 75
                      LBRACKET reduce 75
                      RBRACKET reduce 75
                            IF reduce 75
                         WHILE reduce 75
                           FOR reduce 75
                      CONTINUE reduce 75
                         BREAK reduce 75
                      FUNCTION reduce 75
                        RETURN reduce 75

State 90:
     (40) vdefMulti_stmt ::= VAR nameList SEMICOLON *

                             $ reduce 40
                          PLUS reduce 40
                         MINUS reduce 40
                        BITNOT reduce 40
                        NUMBER reduce 40
                          NAME reduce 40
                          ELSE reduce 40
                        LPAREN reduce 40
                           VAR reduce 40
                     SEMICOLON reduce 40
                      LBRACKET reduce 40
                      RBRACKET reduce 40
                            IF reduce 40
                         WHILE reduce 40
                           FOR reduce 40
                      CONTINUE reduce 40
                         BREAK reduce 40
                      FUNCTION reduce 40
                        RETURN reduce 40

State 91:
     (50) if_stmt ::= if_header stmt *
          else_header ::= if_header stmt * ELSE

                             $ reduce 50
                          PLUS reduce 50
                         MINUS reduce 50
                        BITNOT reduce 50
                        NUMBER reduce 50
                          NAME reduce 50
                          ELSE shift  106
                        LPAREN reduce 50
                           VAR reduce 50
                     SEMICOLON reduce 50
                      LBRACKET reduce 50
                      RBRACKET reduce 50
                            IF reduce 50
                         WHILE reduce 50
                           FOR reduce 50
                      CONTINUE reduce 50
                         BREAK reduce 50
                      FUNCTION reduce 50
                        RETURN reduce 50

State 92:
     (52) if_stmt ::= else_header stmt *

                             $ reduce 52
                          PLUS reduce 52
                         MINUS reduce 52
                        BITNOT reduce 52
                        NUMBER reduce 52
                          NAME reduce 52
                          ELSE reduce 52
                        LPAREN reduce 52
                           VAR reduce 52
                     SEMICOLON reduce 52
                      LBRACKET reduce 52
                      RBRACKET reduce 52
                            IF reduce 52
                         WHILE reduce 52
                           FOR reduce 52
                      CONTINUE reduce 52
                         BREAK reduce 52
                      FUNCTION reduce 52
                        RETURN reduce 52

State 93:
     (73) stmt ::= assignMulti_stmt *

                             $ reduce 73
                          PLUS reduce 73
                         MINUS reduce 73
                        BITNOT reduce 73
                        NUMBER reduce 73
                          NAME reduce 73
                          ELSE reduce 73
                        LPAREN reduce 73
                           VAR reduce 73
                     SEMICOLON reduce 73
                      LBRACKET reduce 73
                      RBRACKET reduce 73
                            IF reduce 73
                         WHILE reduce 73
                           FOR reduce 73
                      CONTINUE reduce 73
                         BREAK reduce 73
                      FUNCTION reduce 73
                        RETURN reduce 73

State 94:
     (72) stmt ::= assign_stmt *

                             $ reduce 72
                          PLUS reduce 72
                         MINUS reduce 72
                        BITNOT reduce 72
                        NUMBER reduce 72
                          NAME reduce 72
                          ELSE reduce 72
                        LPAREN reduce 72
                           VAR reduce 72
                     SEMICOLON reduce 72
                      LBRACKET reduce 72
                      RBRACKET reduce 72
                            IF reduce 72
                         WHILE reduce 72
                           FOR reduce 72
                      CONTINUE reduce 72
                         BREAK reduce 72
                      FUNCTION reduce 72
                        RETURN reduce 72

State 95:
     (71) stmt ::= vdefMulti_stmt *

                             $ reduce 71
                          PLUS reduce 71
                         MINUS reduce 71
                        BITNOT reduce 71
                        NUMBER reduce 71
                          NAME reduce 71
                          ELSE reduce 71
                        LPAREN reduce 71
                           VAR reduce 71
                     SEMICOLON reduce 71
                      LBRACKET reduce 71
                      RBRACKET reduce 71
                            IF reduce 71
                         WHILE reduce 71
                           FOR reduce 71
                      CONTINUE reduce 71
                         BREAK reduce 71
                      FUNCTION reduce 71
                        RETURN reduce 71

State 96:
     (42) assign_stmt ::= NAME ASSIGN expr SEMICOLON *

                             $ reduce 42
                          PLUS reduce 42
                         MINUS reduce 42
                        BITNOT reduce 42
                        NUMBER reduce 42
                          NAME reduce 42
                          ELSE reduce 42
                        LPAREN reduce 42
                           VAR reduce 42
                     SEMICOLON reduce 42
                      LBRACKET reduce 42
                      RBRACKET reduce 42
                            IF reduce 42
                         WHILE reduce 42
                           FOR reduce 42
                      CONTINUE reduce 42
                         BREAK reduce 42
                      FUNCTION reduce 42
                        RETURN reduce 42

State 97:
     (55) while_stmt ::= while_header stmt *

                             $ reduce 55
                          PLUS reduce 55
                         MINUS reduce 55
                        BITNOT reduce 55
                        NUMBER reduce 55
                          NAME reduce 55
                          ELSE reduce 55
                        LPAREN reduce 55
                           VAR reduce 55
                     SEMICOLON reduce 55
                      LBRACKET reduce 55
                      RBRACKET reduce 55
                            IF reduce 55
                         WHILE reduce 55
                           FOR reduce 55
                      CONTINUE reduce 55
                         BREAK reduce 55
                      FUNCTION reduce 55
                        RETURN reduce 55

State 98:
     (70) stmt ::= vdefMultiAssign_stmt *

                             $ reduce 70
                          PLUS reduce 70
                         MINUS reduce 70
                        BITNOT reduce 70
                        NUMBER reduce 70
                          NAME reduce 70
                          ELSE reduce 70
                        LPAREN reduce 70
                           VAR reduce 70
                     SEMICOLON reduce 70
                      LBRACKET reduce 70
                      RBRACKET reduce 70
                            IF reduce 70
                         WHILE reduce 70
                           FOR reduce 70
                      CONTINUE reduce 70
                         BREAK reduce 70
                      FUNCTION reduce 70
                        RETURN reduce 70

State 99:
     (38) vdef_stmt ::= VAR NAME SEMICOLON *

                             $ reduce 38
                          PLUS reduce 38
                         MINUS reduce 38
                        BITNOT reduce 38
                        NUMBER reduce 38
                          NAME reduce 38
                          ELSE reduce 38
                        LPAREN reduce 38
                           VAR reduce 38
                     SEMICOLON reduce 38
                      LBRACKET reduce 38
                      RBRACKET reduce 38
                            IF reduce 38
                         WHILE reduce 38
                           FOR reduce 38
                      CONTINUE reduce 38
                         BREAK reduce 38
                      FUNCTION reduce 38
                        RETURN reduce 38

State 100:
     (44) stmtList ::= stmt *

                          PLUS reduce 44
                         MINUS reduce 44
                        BITNOT reduce 44
                        NUMBER reduce 44
                          NAME reduce 44
                        LPAREN reduce 44
                           VAR reduce 44
                     SEMICOLON reduce 44
                      LBRACKET reduce 44
                      RBRACKET reduce 44
                            IF reduce 44
                         WHILE reduce 44
                           FOR reduce 44
                      CONTINUE reduce 44
                         BREAK reduce 44
                        RETURN reduce 44

State 101:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  23
                            LE shift  32
                            LT shift  31
                            GE shift  20
                            GT shift  21
                            NE shift  22
                         BITOR shift  42
                        BITXOR shift  34
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37

State 102:
     (45) stmtList ::= stmtList stmt *

                          PLUS reduce 45
                         MINUS reduce 45
                        BITNOT reduce 45
                        NUMBER reduce 45
                          NAME reduce 45
                        LPAREN reduce 45
                           VAR reduce 45
                     SEMICOLON reduce 45
                      LBRACKET reduce 45
                      RBRACKET reduce 45
                            IF reduce 45
                         WHILE reduce 45
                           FOR reduce 45
                      CONTINUE reduce 45
                         BREAK reduce 45
                        RETURN reduce 45

State 103:
     (56) foreach_header ::= FOR LPAREN nameList COLON exprList RPAREN *

                          PLUS reduce 56
                         MINUS reduce 56
                        BITNOT reduce 56
                        NUMBER reduce 56
                          NAME reduce 56
                        LPAREN reduce 56
                           VAR reduce 56
                     SEMICOLON reduce 56
                      LBRACKET reduce 56
                            IF reduce 56
                         WHILE reduce 56
                           FOR reduce 56
                      CONTINUE reduce 56
                         BREAK reduce 56
                        RETURN reduce 56

State 104:
     (54) while_header ::= while_start LPAREN lexpr RPAREN *

                          PLUS reduce 54
                         MINUS reduce 54
                        BITNOT reduce 54
                        NUMBER reduce 54
                          NAME reduce 54
                        LPAREN reduce 54
                           VAR reduce 54
                     SEMICOLON reduce 54
                      LBRACKET reduce 54
                            IF reduce 54
                         WHILE reduce 54
                           FOR reduce 54
                      CONTINUE reduce 54
                         BREAK reduce 54
                        RETURN reduce 54

State 105:
     (62) function_header ::= function_start LPAREN RPAREN *

                          PLUS reduce 62
                         MINUS reduce 62
                        BITNOT reduce 62
                        NUMBER reduce 62
                          NAME reduce 62
                        LPAREN reduce 62
                           VAR reduce 62
                     SEMICOLON reduce 62
                      LBRACKET reduce 62
                            IF reduce 62
                         WHILE reduce 62
                           FOR reduce 62
                      CONTINUE reduce 62
                         BREAK reduce 62
                        RETURN reduce 62

State 106:
     (51) else_header ::= if_header stmt ELSE *

                          PLUS reduce 51
                         MINUS reduce 51
                        BITNOT reduce 51
                        NUMBER reduce 51
                          NAME reduce 51
                        LPAREN reduce 51
                           VAR reduce 51
                     SEMICOLON reduce 51
                      LBRACKET reduce 51
                            IF reduce 51
                         WHILE reduce 51
                           FOR reduce 51
                      CONTINUE reduce 51
                         BREAK reduce 51
                        RETURN reduce 51

State 107:
     (49) if_header ::= if_start LPAREN lexpr RPAREN *

                          PLUS reduce 49
                         MINUS reduce 49
                        BITNOT reduce 49
                        NUMBER reduce 49
                          NAME reduce 49
                        LPAREN reduce 49
                           VAR reduce 49
                     SEMICOLON reduce 49
                      LBRACKET reduce 49
                            IF reduce 49
                         WHILE reduce 49
                           FOR reduce 49
                      CONTINUE reduce 49
                         BREAK reduce 49
                        RETURN reduce 49

State 108:
     (61) function_header ::= function_start LPAREN nameList RPAREN *

                          PLUS reduce 61
                         MINUS reduce 61
                        BITNOT reduce 61
                        NUMBER reduce 61
                          NAME reduce 61
                        LPAREN reduce 61
                           VAR reduce 61
                     SEMICOLON reduce 61
                      LBRACKET reduce 61
                            IF reduce 61
                         WHILE reduce 61
                           FOR reduce 61
                      CONTINUE reduce 61
                         BREAK reduce 61
                        RETURN reduce 61

State 109:
          nameList ::= NAME * COMMA NAME
     (10) expr ::= NAME *
          funcexpr ::= NAME * LPAREN exprList RPAREN
          funcexpr ::= NAME * LPAREN RPAREN
          assign_stmt ::= NAME * ASSIGN expr SEMICOLON

                         COMMA shift  157
                        ASSIGN shift  38
                         BITOR reduce 10
                        BITXOR reduce 10
                        BITAND reduce 10
                        LSHIFT reduce 10
                        RSHIFT reduce 10
                          PLUS reduce 10
                         MINUS reduce 10
                        DIVIDE reduce 10
                      MULTIPLY reduce 10
                           MOD reduce 10
                        LPAREN shift  9
                     SEMICOLON reduce 10

State 110:
          exprList ::= funcexpr * LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (13) expr ::= funcexpr *

                         COMMA reduce 13
                         BITOR reduce 13
                        BITXOR reduce 13
                        BITAND reduce 13
                        LSHIFT reduce 13
                        RSHIFT reduce 13
                          PLUS reduce 13
                         MINUS reduce 13
                        DIVIDE reduce 13
                      MULTIPLY reduce 13
                           MOD reduce 13
                    LSQBRACKET shift  166
                        RPAREN reduce 13
                     SEMICOLON reduce 13

State 111:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (31) lexpr ::= expr LT expr *

                           LOR reduce 31
                          LAND reduce 31
                         BITOR shift  42
                        BITXOR shift  34
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 31

State 112:
      (8) exprList ::= exprList COMMA expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         COMMA reduce 8
                         BITOR shift  42
                        BITXOR shift  34
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 8
                     SEMICOLON reduce 8

State 113:
      (7) exprList ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         COMMA reduce 7
                         BITOR shift  42
                        BITXOR shift  34
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 7
                     SEMICOLON reduce 7

State 114:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (30) lexpr ::= expr LE expr *

                           LOR reduce 30
                          LAND reduce 30
                         BITOR shift  42
                        BITXOR shift  34
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 30

State 115:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (32) lexpr ::= expr GE expr *

                           LOR reduce 32
                          LAND reduce 32
                         BITOR shift  42
                        BITXOR shift  34
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 32

State 116:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (33) lexpr ::= expr GT expr *

                           LOR reduce 33
                          LAND reduce 33
                         BITOR shift  42
                        BITXOR shift  34
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 33

State 117:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (28) lexpr ::= expr EQ expr *

                           LOR reduce 28
                          LAND reduce 28
                         BITOR shift  42
                        BITXOR shift  34
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 28

State 118:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (29) lexpr ::= expr NE expr *

                           LOR reduce 29
                          LAND reduce 29
                         BITOR shift  42
                        BITXOR shift  34
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN reduce 29

State 119:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          vdefAssign_stmt ::= VAR NAME ASSIGN expr * SEMICOLON

                         BITOR shift  42
                        BITXOR shift  34
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                     SEMICOLON shift  79

State 120:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          assign_stmt ::= NAME ASSIGN expr * SEMICOLON

                         BITOR shift  42
                        BITXOR shift  34
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                     SEMICOLON shift  96

State 121:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          stmt ::= expr * SEMICOLON

                         BITOR shift  42
                        BITXOR shift  34
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                     SEMICOLON shift  68

State 122:
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  42
                        BITXOR shift  34
                        BITAND shift  24
                        LSHIFT shift  29
                        RSHIFT shift  27
                          PLUS shift  39
                         MINUS shift  28
                        DIVIDE shift  35
                      MULTIPLY shift  30
                           MOD shift  37
                        RPAREN shift  55

State 123:
      (4) nameList ::= nameList COMMA NAME *

                         COMMA reduce 4
                        ASSIGN reduce 4
                        RPAREN reduce 4
                     SEMICOLON reduce 4
                         COLON reduce 4

State 124:
      (3) nameList ::= NAME COMMA NAME *

                         COMMA reduce 3
                        ASSIGN reduce 3
                        RPAREN reduce 3
                     SEMICOLON reduce 3
                         COLON reduce 3

State 125:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  12
                          LAND shift  15
                        RPAREN shift  107

State 126:
     (83) chunk ::= vdef_stmt *

                             $ reduce 83
                           VAR reduce 83
                      FUNCTION reduce 83

State 127:
     (84) chunk ::= vdefMulti_stmt *

                             $ reduce 84
                           VAR reduce 84
                      FUNCTION reduce 84

State 128:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (36) lexpr ::= LNOT lexpr *
     (37) lexpr ::= LNOT LNOT lexpr *

                           LOR reduce 37
                          LAND reduce 37
                        RPAREN reduce 37

State 129:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  12
                          LAND shift  15
                        RPAREN shift  104

State 130:
          lexpr ::= lexpr * LAND lexpr
     (34) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                           LOR reduce 34
                          LAND reduce 34
                        RPAREN reduce 34

State 131:
     (86) chunks ::= chunks chunk *

                             $ reduce 86
                           VAR reduce 86
                      FUNCTION reduce 86

State 132:
     (82) chunk ::= fdef_chunk *

                             $ reduce 82
                           VAR reduce 82
                      FUNCTION reduce 82

State 133:
          nameList ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON
          vdefAssign_stmt ::= VAR NAME * ASSIGN expr SEMICOLON

                         COMMA shift  157
                        ASSIGN shift  36
                     SEMICOLON shift  99

State 134:
          nameList ::= nameList * COMMA NAME
          vdefMulti_stmt ::= VAR nameList * SEMICOLON
          vdefMultiAssign_stmt ::= VAR nameList * ASSIGN exprList SEMICOLON

                         COMMA shift  159
                        ASSIGN shift  18
                     SEMICOLON shift  90

State 135:
     (63) fdef_chunk ::= function_header stmt *

                             $ reduce 63
                           VAR reduce 63
                      FUNCTION reduce 63

State 136:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (35) lexpr ::= lexpr LOR lexpr *

                           LOR reduce 35
                          LAND shift  15
                        RPAREN reduce 35

State 137:
      (5) exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET *

                         COMMA reduce 5
                        RPAREN reduce 5
                     SEMICOLON reduce 5

State 138:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (36) lexpr ::= LNOT lexpr *

                           LOR reduce 36
                          LAND reduce 36
                        RPAREN reduce 36

State 139:
          nameList ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON

                         COMMA shift  157
                     SEMICOLON shift  99

State 140:
          exprList ::= exprList * COMMA expr
          funcexpr ::= NAME LPAREN exprList * RPAREN

                         COMMA shift  40
                        RPAREN shift  51

State 141:
          nameList ::= nameList * COMMA NAME
          assignMulti_stmt ::= nameList * ASSIGN exprList SEMICOLON

                         COMMA shift  159
                        ASSIGN shift  17

State 142:
      (2) numList ::= numList COMMA NUMBER *

                         COMMA reduce 2
                    RSQBRACKET reduce 2

State 143:
          exprList ::= exprList * COMMA expr
          assignMulti_stmt ::= nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  40
                     SEMICOLON shift  78

State 144:
          numList ::= numList * COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList * RSQBRACKET RSQBRACKET

                         COMMA shift  172
                    RSQBRACKET shift  173

State 145:
          exprList ::= exprList * COMMA expr
          vdefMultiAssign_stmt ::= VAR nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  40
                     SEMICOLON shift  80

State 146:
      (1) numList ::= NUMBER COMMA NUMBER *

                         COMMA reduce 1
                    RSQBRACKET reduce 1

State 147:
          numList ::= NUMBER * COMMA NUMBER
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                         COMMA shift  170
                    RSQBRACKET shift  171

State 148:
          nameList ::= nameList * COMMA NAME
          function_header ::= function_start LPAREN nameList * RPAREN

                         COMMA shift  159
                        RPAREN shift  108

State 149:
          nameList ::= nameList * COMMA NAME
          vdefMulti_stmt ::= VAR nameList * SEMICOLON

                         COMMA shift  159
                     SEMICOLON shift  90

State 150:
          nameList ::= nameList * COMMA NAME
          foreach_header ::= FOR LPAREN nameList * COLON exprList RPAREN

                         COMMA shift  159
                         COLON shift  19

State 151:
          exprList ::= exprList * COMMA expr
          foreach_header ::= FOR LPAREN nameList COLON exprList * RPAREN

                         COMMA shift  40
                        RPAREN shift  103

State 152:
          exprList ::= exprList * COMMA expr
          return_stmt ::= RETURN exprList * SEMICOLON

                         COMMA shift  40
                     SEMICOLON shift  76

State 153:
          block ::= LBRACKET error * RBRACKET
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  75
                      RBRACKET shift  81

State 154:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  75

State 155:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  74

State 156:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  72

State 157:
          nameList ::= NAME COMMA * NAME

                          NAME shift  124

State 158:
          foreach_header ::= FOR * LPAREN nameList COLON exprList RPAREN

                        LPAREN shift  45

State 159:
          nameList ::= nameList COMMA * NAME

                          NAME shift  123

State 160:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  13

State 161:
     (53) while_start ::= WHILE *

                        LPAREN reduce 53

State 162:
          function_start ::= FUNCTION * NAME

                          NAME shift  163

State 163:
     (60) function_start ::= FUNCTION NAME *

                        LPAREN reduce 60

State 164:
          function_header ::= function_start * LPAREN nameList RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  43

State 165:
          nameList ::= NAME * COMMA NAME

                         COMMA shift  157

State 166:
          exprList ::= funcexpr LSQBRACKET * LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  47

State 167:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  14

State 168:
     (48) if_start ::= IF *

                        LPAREN reduce 48

State 169:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  171

State 170:
          numList ::= NUMBER COMMA * NUMBER

                        NUMBER shift  146

State 171:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  53

State 172:
          numList ::= numList COMMA * NUMBER

                        NUMBER shift  142

State 173:
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  137

State 174:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  175

State 175:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  169

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: IFX
   28: IFNOT
   29: ELSE
   30: LSQBRACKET
   31: RSQBRACKET
   32: LPAREN
   33: RPAREN
   34: FUNCCALL
   35: PARENEXPR
   36: VAR
   37: SEMICOLON
   38: LBRACKET
   39: RBRACKET
   40: IF
   41: WHILE
   42: FOR
   43: COLON
   44: CONTINUE
   45: BREAK
   46: FUNCTION
   47: RETURN
   48: error:
   49: nt:
   50: program: VAR FUNCTION
   51: chunks: <lambda> VAR FUNCTION
   52: numList: NUMBER
   53: nameList: NAME
   54: exprList: PLUS MINUS BITNOT NUMBER NAME LPAREN
   55: funcexpr: NAME
   56: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN
   57: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN
   58: vdef_stmt: VAR
   59: vdefAssign_stmt: VAR
   60: vdefMulti_stmt: VAR
   61: vdefMultiAssign_stmt: VAR
   62: assign_stmt: NAME
   63: assignMulti_stmt: NAME
   64: stmtList: PLUS MINUS BITNOT NUMBER NAME LPAREN VAR SEMICOLON LBRACKET IF WHILE FOR CONTINUE BREAK RETURN
   65: stmt: PLUS MINUS BITNOT NUMBER NAME LPAREN VAR SEMICOLON LBRACKET IF WHILE FOR CONTINUE BREAK RETURN
   66: block: LBRACKET
   67: if_start: IF
   68: if_header: IF
   69: if_stmt: IF
   70: else_header: IF
   71: while_start: WHILE
   72: while_header: WHILE
   73: while_stmt: WHILE
   74: foreach_header: FOR
   75: foreach_stmt: FOR
   76: continue_stmt: CONTINUE
   77: break_stmt: BREAK
   78: function_start: FUNCTION
   79: function_header: FUNCTION
   80: fdef_chunk: FUNCTION
   81: return_stmt: RETURN
   82: chunk: VAR FUNCTION
