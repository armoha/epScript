State 0:
          program ::= * chunks
     (92) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  8
                     {default} reduce 92

State 1:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          stmtList ::= * stmt
          stmtList ::= * stmtList stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET * stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          block ::= LBRACKET * error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  76
                        LPAREN shift  43
                           VAR shift  49
                     SEMICOLON shift  139
                      LBRACKET shift  1
                            IF shift  160
                         WHILE shift  152
                           FOR shift  97
                      CONTINUE shift  96
                         BREAK shift  95
                        RETURN shift  15
                    ACTIONNAME shift  94
                         error shift  77
                      nameList shift  85
                      funcexpr shift  107
                          expr shift  54
                     vdef_stmt shift  138
               vdefAssign_stmt shift  137
                vdefMulti_stmt shift  135
          vdefMultiAssign_stmt shift  136
                   assign_stmt shift  134
              assignMulti_stmt shift  133
                      stmtList shift  2
                          stmt shift  163
                         block shift  125
                      if_start shift  102
                     if_header shift  6
                       if_stmt shift  131
                   else_header shift  5
                   while_start shift  98
                  while_header shift  4
                    while_stmt shift  130
                foreach_header shift  3
                  foreach_stmt shift  129
                 continue_stmt shift  128
                    break_stmt shift  127
                   return_stmt shift  126
                        action shift  47
                       actions shift  46
                    actionStmt shift  132

State 2:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          stmtList ::= stmtList * stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET stmtList * RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  76
                        LPAREN shift  43
                           VAR shift  49
                     SEMICOLON shift  139
                      LBRACKET shift  1
                      RBRACKET shift  161
                            IF shift  160
                         WHILE shift  152
                           FOR shift  97
                      CONTINUE shift  96
                         BREAK shift  95
                        RETURN shift  15
                    ACTIONNAME shift  94
                         error shift  92
                      nameList shift  85
                      funcexpr shift  107
                          expr shift  54
                     vdef_stmt shift  138
               vdefAssign_stmt shift  137
                vdefMulti_stmt shift  135
          vdefMultiAssign_stmt shift  136
                   assign_stmt shift  134
              assignMulti_stmt shift  133
                          stmt shift  162
                         block shift  125
                      if_start shift  102
                     if_header shift  6
                       if_stmt shift  131
                   else_header shift  5
                   while_start shift  98
                  while_header shift  4
                    while_stmt shift  130
                foreach_header shift  3
                  foreach_stmt shift  129
                 continue_stmt shift  128
                    break_stmt shift  127
                   return_stmt shift  126
                        action shift  47
                       actions shift  46
                    actionStmt shift  132

State 3:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  76
                        LPAREN shift  43
                           VAR shift  49
                     SEMICOLON shift  139
                      LBRACKET shift  1
                            IF shift  160
                         WHILE shift  152
                           FOR shift  97
                      CONTINUE shift  96
                         BREAK shift  95
                        RETURN shift  15
                    ACTIONNAME shift  94
                         error shift  92
                      nameList shift  85
                      funcexpr shift  107
                          expr shift  54
                     vdef_stmt shift  138
               vdefAssign_stmt shift  137
                vdefMulti_stmt shift  135
          vdefMultiAssign_stmt shift  136
                   assign_stmt shift  134
              assignMulti_stmt shift  133
                          stmt shift  148
                         block shift  125
                      if_start shift  102
                     if_header shift  6
                       if_stmt shift  131
                   else_header shift  5
                   while_start shift  98
                  while_header shift  4
                    while_stmt shift  130
                foreach_header shift  3
                  foreach_stmt shift  129
                 continue_stmt shift  128
                    break_stmt shift  127
                   return_stmt shift  126
                        action shift  47
                       actions shift  46
                    actionStmt shift  132

State 4:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  76
                        LPAREN shift  43
                           VAR shift  49
                     SEMICOLON shift  139
                      LBRACKET shift  1
                            IF shift  160
                         WHILE shift  152
                           FOR shift  97
                      CONTINUE shift  96
                         BREAK shift  95
                        RETURN shift  15
                    ACTIONNAME shift  94
                         error shift  92
                      nameList shift  85
                      funcexpr shift  107
                          expr shift  54
                     vdef_stmt shift  138
               vdefAssign_stmt shift  137
                vdefMulti_stmt shift  135
          vdefMultiAssign_stmt shift  136
                   assign_stmt shift  134
              assignMulti_stmt shift  133
                          stmt shift  150
                         block shift  125
                      if_start shift  102
                     if_header shift  6
                       if_stmt shift  131
                   else_header shift  5
                   while_start shift  98
                  while_header shift  4
                    while_stmt shift  130
                foreach_header shift  3
                  foreach_stmt shift  129
                 continue_stmt shift  128
                    break_stmt shift  127
                   return_stmt shift  126
                        action shift  47
                       actions shift  46
                    actionStmt shift  132

State 5:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          if_stmt ::= else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  76
                        LPAREN shift  43
                           VAR shift  49
                     SEMICOLON shift  139
                      LBRACKET shift  1
                            IF shift  160
                         WHILE shift  152
                           FOR shift  97
                      CONTINUE shift  96
                         BREAK shift  95
                        RETURN shift  15
                    ACTIONNAME shift  94
                         error shift  92
                      nameList shift  85
                      funcexpr shift  107
                          expr shift  54
                     vdef_stmt shift  138
               vdefAssign_stmt shift  137
                vdefMulti_stmt shift  135
          vdefMultiAssign_stmt shift  136
                   assign_stmt shift  134
              assignMulti_stmt shift  133
                          stmt shift  153
                         block shift  125
                      if_start shift  102
                     if_header shift  6
                       if_stmt shift  131
                   else_header shift  5
                   while_start shift  98
                  while_header shift  4
                    while_stmt shift  130
                foreach_header shift  3
                  foreach_stmt shift  129
                 continue_stmt shift  128
                    break_stmt shift  127
                   return_stmt shift  126
                        action shift  47
                       actions shift  46
                    actionStmt shift  132

State 6:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          if_stmt ::= if_header * stmt
          else_header ::= * if_header stmt ELSE
          else_header ::= if_header * stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  76
                        LPAREN shift  43
                           VAR shift  49
                     SEMICOLON shift  139
                      LBRACKET shift  1
                            IF shift  160
                         WHILE shift  152
                           FOR shift  97
                      CONTINUE shift  96
                         BREAK shift  95
                        RETURN shift  15
                    ACTIONNAME shift  94
                         error shift  92
                      nameList shift  85
                      funcexpr shift  107
                          expr shift  54
                     vdef_stmt shift  138
               vdefAssign_stmt shift  137
                vdefMulti_stmt shift  135
          vdefMultiAssign_stmt shift  136
                   assign_stmt shift  134
              assignMulti_stmt shift  133
                          stmt shift  99
                         block shift  125
                      if_start shift  102
                     if_header shift  6
                       if_stmt shift  131
                   else_header shift  5
                   while_start shift  98
                  while_header shift  4
                    while_stmt shift  130
                foreach_header shift  3
                  foreach_stmt shift  129
                 continue_stmt shift  128
                    break_stmt shift  127
                   return_stmt shift  126
                        action shift  47
                       actions shift  46
                    actionStmt shift  132

State 7:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          fdef_chunk ::= function_header * stmt
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * actionStmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * foreach_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  76
                        LPAREN shift  43
                           VAR shift  49
                     SEMICOLON shift  139
                      LBRACKET shift  1
                            IF shift  160
                         WHILE shift  152
                           FOR shift  97
                      CONTINUE shift  96
                         BREAK shift  95
                        RETURN shift  15
                    ACTIONNAME shift  94
                         error shift  92
                      nameList shift  85
                      funcexpr shift  107
                          expr shift  54
                     vdef_stmt shift  138
               vdefAssign_stmt shift  137
                vdefMulti_stmt shift  135
          vdefMultiAssign_stmt shift  136
                   assign_stmt shift  134
              assignMulti_stmt shift  133
                          stmt shift  123
                         block shift  125
                      if_start shift  102
                     if_header shift  6
                       if_stmt shift  131
                   else_header shift  5
                   while_start shift  98
                  while_header shift  4
                    while_stmt shift  130
                foreach_header shift  3
                  foreach_stmt shift  129
                 continue_stmt shift  128
                    break_stmt shift  127
                   return_stmt shift  126
                        action shift  47
                       actions shift  46
                    actionStmt shift  132

State 8:
      (0) program ::= chunks *
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * vdefMulti_stmt
          chunks ::= chunks * chunk

                             $ reduce 0
                           VAR shift  51
                      FUNCTION shift  116
                     vdef_stmt shift  121
                vdefMulti_stmt shift  120
                function_start shift  115
               function_header shift  7
                    fdef_chunk shift  122
                         chunk shift  119

State 9:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * CONDITIONNAME LPAREN exprList RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN

                          LNOT shift  11
                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                 CONDITIONNAME shift  101
                      funcexpr shift  107
                          expr shift  52
                         lexpr shift  70

State 10:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * CONDITIONNAME LPAREN exprList RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr

                          LNOT shift  10
                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                 CONDITIONNAME shift  101
                      funcexpr shift  107
                          expr shift  52
                         lexpr shift  156

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * CONDITIONNAME LPAREN exprList RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr

                          LNOT shift  10
                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                 CONDITIONNAME shift  101
                      funcexpr shift  107
                          expr shift  52
                         lexpr shift  157

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * CONDITIONNAME LPAREN exprList RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr

                          LNOT shift  11
                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                 CONDITIONNAME shift  101
                      funcexpr shift  107
                          expr shift  52
                         lexpr shift  100

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * CONDITIONNAME LPAREN exprList RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr

                          LNOT shift  11
                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                 CONDITIONNAME shift  101
                      funcexpr shift  107
                          expr shift  52
                         lexpr shift  158

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * CONDITIONNAME LPAREN exprList RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN

                          LNOT shift  11
                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                 CONDITIONNAME shift  101
                      funcexpr shift  107
                          expr shift  52
                         lexpr shift  71

State 15:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * SEMICOLON
          return_stmt ::= RETURN * exprList SEMICOLON

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                     SEMICOLON shift  144
                      exprList shift  79
                      funcexpr shift  113
                          expr shift  64

State 16:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= NAME LPAREN * exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          funcexpr ::= NAME LPAREN * RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                        RPAREN shift  169
                      exprList shift  86
                      funcexpr shift  113
                          expr shift  64

State 17:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * exprList RPAREN SEMICOLON

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      exprList shift  78
                      funcexpr shift  113
                          expr shift  64

State 18:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= FOR LPAREN nameList COLON * exprList RPAREN

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      exprList shift  80
                      funcexpr shift  113
                          expr shift  64

State 19:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * exprList RPAREN

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      exprList shift  82
                      funcexpr shift  113
                          expr shift  64

State 20:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefMultiAssign_stmt ::= VAR nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      exprList shift  83
                      funcexpr shift  113
                          expr shift  64

State 21:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assignMulti_stmt ::= nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      exprList shift  84
                      funcexpr shift  113
                          expr shift  64

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  57

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  58

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  59

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  60

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  61

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  62

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR NAME ASSIGN * expr SEMICOLON

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  53

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= NAME ASSIGN * expr SEMICOLON

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  55

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList ::= exprList COMMA * expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  63

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  171

State 32:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  172

State 33:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  173

State 34:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  66

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  65

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  67

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  68

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  69

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  174

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  175

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  176

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  75

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  56

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN exprList RPAREN
          funcexpr ::= * NAME LPAREN RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  33
                         MINUS shift  32
                        BITNOT shift  31
                        NUMBER shift  178
                          NAME shift  103
                        LPAREN shift  43
                      funcexpr shift  107
                          expr shift  74

State 45:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          function_header ::= function_start LPAREN * nameList RPAREN
          function_header ::= function_start LPAREN * RPAREN

                          NAME shift  114
                        RPAREN shift  183
                      nameList shift  89

State 46:
          action ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          actions ::= actions * action
     (71) actionStmt ::= actions *

                    ACTIONNAME shift  94
                    ACTIONNAME reduce 71  ** Parsing conflict **
                        action shift  141
                     {default} reduce 71

State 47:
          action ::= * ACTIONNAME LPAREN exprList RPAREN SEMICOLON
          actions ::= action * action
     (70) actionStmt ::= action *

                    ACTIONNAME shift  94
                    ACTIONNAME reduce 70  ** Parsing conflict **
                        action shift  142
                     {default} reduce 70

State 48:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          foreach_header ::= FOR LPAREN * nameList COLON exprList RPAREN

                          NAME shift  114
                      nameList shift  81

State 49:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefAssign_stmt ::= VAR * NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= VAR * nameList SEMICOLON
          vdefMultiAssign_stmt ::= VAR * nameList ASSIGN exprList SEMICOLON

                          NAME shift  73
                      nameList shift  72

State 50:
          numList ::= * NUMBER COMMA NUMBER
          numList ::= * numList COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET * numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  88
                       numList shift  87

State 51:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefMulti_stmt ::= VAR * nameList SEMICOLON

                          NAME shift  91
                      nameList shift  90

State 52:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  27
                            LE shift  25
                            LT shift  24
                            GE shift  23
                            GT shift  22
                            NE shift  26
                         BITOR shift  35
                        BITXOR shift  34
                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39

State 53:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          vdefAssign_stmt ::= VAR NAME ASSIGN expr * SEMICOLON

                         BITOR shift  35
                        BITXOR shift  34
                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     SEMICOLON shift  165

State 54:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          stmt ::= expr * SEMICOLON

                         BITOR shift  35
                        BITXOR shift  34
                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     SEMICOLON shift  166

State 55:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          assign_stmt ::= NAME ASSIGN expr * SEMICOLON

                         BITOR shift  35
                        BITXOR shift  34
                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     SEMICOLON shift  168

State 56:
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  35
                        BITXOR shift  34
                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                        RPAREN shift  177

State 57:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (34) lexpr ::= expr GT expr *

                         BITOR shift  35
                        BITXOR shift  34
                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 34

State 58:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (33) lexpr ::= expr GE expr *

                         BITOR shift  35
                        BITXOR shift  34
                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 33

State 59:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (32) lexpr ::= expr LT expr *

                         BITOR shift  35
                        BITXOR shift  34
                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 32

State 60:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (31) lexpr ::= expr LE expr *

                         BITOR shift  35
                        BITXOR shift  34
                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 31

State 61:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (30) lexpr ::= expr NE expr *

                         BITOR shift  35
                        BITXOR shift  34
                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 30

State 62:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (29) lexpr ::= expr EQ expr *

                         BITOR shift  35
                        BITXOR shift  34
                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 29

State 63:
      (8) exprList ::= exprList COMMA expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  35
                        BITXOR shift  34
                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 8

State 64:
      (7) exprList ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  35
                        BITXOR shift  34
                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 7

State 65:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (23) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  34
                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 23

State 66:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (24) expr ::= expr BITXOR expr *

                        BITAND shift  36
                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 24

State 67:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (22) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  38
                        RSHIFT shift  37
                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 22

State 68:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (21) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 21

State 69:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (20) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  44
                         MINUS shift  42
                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 20

State 70:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  12
                          LAND shift  13
                        RPAREN shift  151

State 71:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  12
                          LAND shift  13
                        RPAREN shift  155

State 72:
          nameList ::= nameList * COMMA NAME
          vdefMulti_stmt ::= VAR nameList * SEMICOLON
          vdefMultiAssign_stmt ::= VAR nameList * ASSIGN exprList SEMICOLON

                         COMMA shift  117
                        ASSIGN shift  20
                     SEMICOLON shift  186

State 73:
          nameList ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON
          vdefAssign_stmt ::= VAR NAME * ASSIGN expr SEMICOLON

                         COMMA shift  118
                        ASSIGN shift  28
                     SEMICOLON shift  188

State 74:
          expr ::= expr * PLUS expr
     (15) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 15

State 75:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (16) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  40
                      MULTIPLY shift  41
                           MOD shift  39
                     {default} reduce 16

State 76:
          nameList ::= NAME * COMMA NAME
     (10) expr ::= NAME *
          funcexpr ::= NAME * LPAREN exprList RPAREN
          funcexpr ::= NAME * LPAREN RPAREN
          assign_stmt ::= NAME * ASSIGN expr SEMICOLON

                         COMMA shift  118
                        ASSIGN shift  29
                        LPAREN shift  16
                     {default} reduce 10

State 77:
          block ::= LBRACKET error * RBRACKET
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  140
                      RBRACKET shift  124

State 78:
          exprList ::= exprList * COMMA expr
          action ::= ACTIONNAME LPAREN exprList * RPAREN SEMICOLON

                         COMMA shift  30
                        RPAREN shift  93

State 79:
          exprList ::= exprList * COMMA expr
          return_stmt ::= RETURN exprList * SEMICOLON

                         COMMA shift  30
                     SEMICOLON shift  145

State 80:
          exprList ::= exprList * COMMA expr
          foreach_header ::= FOR LPAREN nameList COLON exprList * RPAREN

                         COMMA shift  30
                        RPAREN shift  149

State 81:
          nameList ::= nameList * COMMA NAME
          foreach_header ::= FOR LPAREN nameList * COLON exprList RPAREN

                         COMMA shift  117
                         COLON shift  18

State 82:
          exprList ::= exprList * COMMA expr
          lexpr ::= CONDITIONNAME LPAREN exprList * RPAREN

                         COMMA shift  30
                        RPAREN shift  159

State 83:
          exprList ::= exprList * COMMA expr
          vdefMultiAssign_stmt ::= VAR nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  30
                     SEMICOLON shift  164

State 84:
          exprList ::= exprList * COMMA expr
          assignMulti_stmt ::= nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  30
                     SEMICOLON shift  167

State 85:
          nameList ::= nameList * COMMA NAME
          assignMulti_stmt ::= nameList * ASSIGN exprList SEMICOLON

                         COMMA shift  117
                        ASSIGN shift  21

State 86:
          exprList ::= exprList * COMMA expr
          funcexpr ::= NAME LPAREN exprList * RPAREN

                         COMMA shift  30
                        RPAREN shift  170

State 87:
          numList ::= numList * COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList * RSQBRACKET RSQBRACKET

                         COMMA shift  109
                    RSQBRACKET shift  108

State 88:
          numList ::= NUMBER * COMMA NUMBER
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                         COMMA shift  111
                    RSQBRACKET shift  110

State 89:
          nameList ::= nameList * COMMA NAME
          function_header ::= function_start LPAREN nameList * RPAREN

                         COMMA shift  117
                        RPAREN shift  184

State 90:
          nameList ::= nameList * COMMA NAME
          vdefMulti_stmt ::= VAR nameList * SEMICOLON

                         COMMA shift  117
                     SEMICOLON shift  186

State 91:
          nameList ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON

                         COMMA shift  118
                     SEMICOLON shift  188

State 92:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  140

State 93:
          action ::= ACTIONNAME LPAREN exprList RPAREN * SEMICOLON

                     SEMICOLON shift  143

State 94:
          action ::= ACTIONNAME * LPAREN exprList RPAREN SEMICOLON

                        LPAREN shift  17

State 95:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  146

State 96:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  147

State 97:
          foreach_header ::= FOR * LPAREN nameList COLON exprList RPAREN

                        LPAREN shift  48

State 98:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  9

State 99:
     (51) if_stmt ::= if_header stmt *
          else_header ::= if_header stmt * ELSE

                          ELSE shift  154
                          ELSE reduce 51  ** Parsing conflict **
                     {default} reduce 51

State 100:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (36) lexpr ::= lexpr LOR lexpr *

                          LAND shift  13
                     {default} reduce 36

State 101:
          lexpr ::= CONDITIONNAME * LPAREN exprList RPAREN

                        LPAREN shift  19

State 102:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  14

State 103:
     (10) expr ::= NAME *
          funcexpr ::= NAME * LPAREN exprList RPAREN
          funcexpr ::= NAME * LPAREN RPAREN

                        LPAREN shift  16
                     {default} reduce 10

State 104:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  110

State 105:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  104

State 106:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  105

State 107:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (13) expr ::= funcexpr *

                    LSQBRACKET shift  106
                     {default} reduce 13

State 108:
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  179

State 109:
          numList ::= numList COMMA * NUMBER

                        NUMBER shift  180

State 110:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  181

State 111:
          numList ::= NUMBER COMMA * NUMBER

                        NUMBER shift  182

State 112:
          exprList ::= funcexpr LSQBRACKET * LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  50

State 113:
          exprList ::= funcexpr * LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (13) expr ::= funcexpr *

                    LSQBRACKET shift  112
                     {default} reduce 13

State 114:
          nameList ::= NAME * COMMA NAME

                         COMMA shift  118

State 115:
          function_header ::= function_start * LPAREN nameList RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  45

State 116:
          function_start ::= FUNCTION * NAME

                          NAME shift  185

State 117:
          nameList ::= nameList COMMA * NAME

                          NAME shift  187

State 118:
          nameList ::= NAME COMMA * NAME

                          NAME shift  189

State 119:
     (93) chunks ::= chunks chunk *

                     {default} reduce 93

State 120:
     (91) chunk ::= vdefMulti_stmt *

                     {default} reduce 91

State 121:
     (90) chunk ::= vdef_stmt *

                     {default} reduce 90

State 122:
     (89) chunk ::= fdef_chunk *

                     {default} reduce 89

State 123:
     (64) fdef_chunk ::= function_header stmt *

                     {default} reduce 64

State 124:
     (48) block ::= LBRACKET error RBRACKET *

                     {default} reduce 48

State 125:
     (88) stmt ::= block *

                     {default} reduce 88

State 126:
     (87) stmt ::= return_stmt *

                     {default} reduce 87

State 127:
     (86) stmt ::= break_stmt *

                     {default} reduce 86

State 128:
     (85) stmt ::= continue_stmt *

                     {default} reduce 85

State 129:
     (84) stmt ::= foreach_stmt *

                     {default} reduce 84

State 130:
     (83) stmt ::= while_stmt *

                     {default} reduce 83

State 131:
     (82) stmt ::= if_stmt *

                     {default} reduce 82

State 132:
     (81) stmt ::= actionStmt *

                     {default} reduce 81

State 133:
     (79) stmt ::= assignMulti_stmt *

                     {default} reduce 79

State 134:
     (78) stmt ::= assign_stmt *

                     {default} reduce 78

State 135:
     (77) stmt ::= vdefMulti_stmt *

                     {default} reduce 77

State 136:
     (76) stmt ::= vdefMultiAssign_stmt *

                     {default} reduce 76

State 137:
     (75) stmt ::= vdefAssign_stmt *

                     {default} reduce 75

State 138:
     (74) stmt ::= vdef_stmt *

                     {default} reduce 74

State 139:
     (73) stmt ::= SEMICOLON *

                     {default} reduce 73

State 140:
     (72) stmt ::= error SEMICOLON *

                     {default} reduce 72

State 141:
     (69) actions ::= actions action *

                     {default} reduce 69

State 142:
     (68) actions ::= action action *

                     {default} reduce 68

State 143:
     (67) action ::= ACTIONNAME LPAREN exprList RPAREN SEMICOLON *

                     {default} reduce 67

State 144:
     (65) return_stmt ::= RETURN SEMICOLON *

                     {default} reduce 65

State 145:
     (66) return_stmt ::= RETURN exprList SEMICOLON *

                     {default} reduce 66

State 146:
     (60) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 60

State 147:
     (59) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 59

State 148:
     (58) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 58

State 149:
     (57) foreach_header ::= FOR LPAREN nameList COLON exprList RPAREN *

                     {default} reduce 57

State 150:
     (56) while_stmt ::= while_header stmt *

                     {default} reduce 56

State 151:
     (55) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 55

State 152:
     (54) while_start ::= WHILE *

                     {default} reduce 54

State 153:
     (53) if_stmt ::= else_header stmt *

                     {default} reduce 53

State 154:
     (52) else_header ::= if_header stmt ELSE *

                     {default} reduce 52

State 155:
     (50) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 50

State 156:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (37) lexpr ::= LNOT lexpr *
     (38) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 38

State 157:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (37) lexpr ::= LNOT lexpr *

                     {default} reduce 37

State 158:
          lexpr ::= lexpr * LAND lexpr
     (35) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 35

State 159:
     (28) lexpr ::= CONDITIONNAME LPAREN exprList RPAREN *

                     {default} reduce 28

State 160:
     (49) if_start ::= IF *

                     {default} reduce 49

State 161:
     (47) block ::= LBRACKET stmtList RBRACKET *

                     {default} reduce 47

State 162:
     (46) stmtList ::= stmtList stmt *

                     {default} reduce 46

State 163:
     (45) stmtList ::= stmt *

                     {default} reduce 45

State 164:
     (42) vdefMultiAssign_stmt ::= VAR nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 42

State 165:
     (40) vdefAssign_stmt ::= VAR NAME ASSIGN expr SEMICOLON *

                     {default} reduce 40

State 166:
     (80) stmt ::= expr SEMICOLON *

                     {default} reduce 80

State 167:
     (44) assignMulti_stmt ::= nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 44

State 168:
     (43) assign_stmt ::= NAME ASSIGN expr SEMICOLON *

                     {default} reduce 43

State 169:
     (12) funcexpr ::= NAME LPAREN RPAREN *

                     {default} reduce 12

State 170:
     (11) funcexpr ::= NAME LPAREN exprList RPAREN *

                     {default} reduce 11

State 171:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (27) expr ::= BITNOT expr *

                     {default} reduce 27

State 172:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (26) expr ::= MINUS expr *

                     {default} reduce 26

State 173:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (25) expr ::= PLUS expr *

                     {default} reduce 25

State 174:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (19) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 19

State 175:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (18) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 18

State 176:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (17) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 17

State 177:
     (14) expr ::= LPAREN expr RPAREN *

                     {default} reduce 14

State 178:
      (9) expr ::= NUMBER *

                     {default} reduce 9

State 179:
      (5) exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET *

                     {default} reduce 5

State 180:
      (2) numList ::= numList COMMA NUMBER *

                     {default} reduce 2

State 181:
      (6) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 6

State 182:
      (1) numList ::= NUMBER COMMA NUMBER *

                     {default} reduce 1

State 183:
     (63) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 63

State 184:
     (62) function_header ::= function_start LPAREN nameList RPAREN *

                     {default} reduce 62

State 185:
     (61) function_start ::= FUNCTION NAME *

                     {default} reduce 61

State 186:
     (41) vdefMulti_stmt ::= VAR nameList SEMICOLON *

                     {default} reduce 41

State 187:
      (4) nameList ::= nameList COMMA NAME *

                     {default} reduce 4

State 188:
     (39) vdef_stmt ::= VAR NAME SEMICOLON *

                     {default} reduce 39

State 189:
      (3) nameList ::= NAME COMMA NAME *

                     {default} reduce 3

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: LSQBRACKET
   28: RSQBRACKET
   29: LPAREN
   30: RPAREN
   31: FUNCCALL
   32: CONDITIONNAME
   33: VAR
   34: SEMICOLON
   35: LBRACKET
   36: RBRACKET
   37: IF
   38: IFX
   39: ELSE
   40: WHILE
   41: FOR
   42: COLON
   43: CONTINUE
   44: BREAK
   45: FUNCTION
   46: RETURN
   47: ACTIONNAME
   48: error:
   49: nt:
   50: program: <lambda> VAR FUNCTION
   51: chunks: <lambda> VAR FUNCTION
   52: numList: NUMBER
   53: nameList: NAME
   54: exprList: PLUS MINUS BITNOT NUMBER NAME LPAREN
   55: funcexpr: NAME
   56: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN
   57: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN CONDITIONNAME
   58: vdef_stmt: VAR
   59: vdefAssign_stmt: VAR
   60: vdefMulti_stmt: VAR
   61: vdefMultiAssign_stmt: VAR
   62: assign_stmt: NAME
   63: assignMulti_stmt: NAME
   64: stmtList: PLUS MINUS BITNOT NUMBER NAME LPAREN VAR SEMICOLON LBRACKET IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   65: stmt: PLUS MINUS BITNOT NUMBER NAME LPAREN VAR SEMICOLON LBRACKET IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   66: block: LBRACKET
   67: if_start: IF
   68: if_header: IF
   69: if_stmt: IF
   70: else_header: IF
   71: while_start: WHILE
   72: while_header: WHILE
   73: while_stmt: WHILE
   74: foreach_header: FOR
   75: foreach_stmt: FOR
   76: continue_stmt: CONTINUE
   77: break_stmt: BREAK
   78: function_start: FUNCTION
   79: function_header: FUNCTION
   80: fdef_chunk: FUNCTION
   81: return_stmt: RETURN
   82: action: ACTIONNAME
   83: actions: ACTIONNAME
   84: actionStmt: ACTIONNAME
   85: chunk: VAR FUNCTION
