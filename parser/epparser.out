State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  10
                     {default} reduce 1

State 1:
          lbracket ::= * LBRACKET
          rbracket ::= * RBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= lbracket bodyStmtList * rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket bodyStmtList * return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (175) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  121
                     SEMICOLON shift  316
                        LPAREN shift  64
                      LBRACKET shift  323
                           VAR shift  86
                      RBRACKET shift  321
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                         CONST shift  85
                           INC shift  42
                           DEC shift  41
                            IF shift  272
                         WHILE shift  266
                           FOR shift  170
                       FOREACH shift  165
                      CONTINUE shift  248
                         BREAK shift  247
                        RETURN shift  20
                         error shift  301
                     vdef_stmt shift  219
                     blockStmt shift  317
                      bodyStmt shift  302
                   return_stmt shift  220
                      lbracket shift  2
                      rbracket shift  319
               vdefAssign_stmt shift  218
                     cdef_stmt shift  217
                   assign_stmt shift  216
                      funcexpr shift  155
                    actionStmt shift  309
                       if_stmt shift  308
                    while_stmt shift  307
                      for_stmt shift  306
                  foreach_stmt shift  305
                 continue_stmt shift  211
                    break_stmt shift  210
                          expr shift  94
                        lvalue shift  125
           lvalueList_nonEmpty shift  150
                      if_start shift  174
                     if_header shift  8
                      if_block shift  40
                   while_start shift  171
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  84
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 175

State 2:
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= lbracket * RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket * return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= lbracket * bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= lbracket * bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmt ::= lbracket * error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= * error
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (175) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  121
                     SEMICOLON shift  316
                        LPAREN shift  64
                      LBRACKET shift  323
                           VAR shift  86
                      RBRACKET shift  322
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                         CONST shift  85
                           INC shift  42
                           DEC shift  41
                            IF shift  272
                         WHILE shift  266
                           FOR shift  170
                       FOREACH shift  165
                      CONTINUE shift  248
                         BREAK shift  247
                        RETURN shift  20
                         error shift  161
                     vdef_stmt shift  219
                     blockStmt shift  317
                      bodyStmt shift  240
                   return_stmt shift  221
                      lbracket shift  2
                  bodyStmtList shift  1
               vdefAssign_stmt shift  218
                     cdef_stmt shift  217
                   assign_stmt shift  216
                      funcexpr shift  155
                    actionStmt shift  309
                       if_stmt shift  308
                    while_stmt shift  307
                      for_stmt shift  306
                  foreach_stmt shift  305
                 continue_stmt shift  211
                    break_stmt shift  210
                          expr shift  94
                        lvalue shift  125
           lvalueList_nonEmpty shift  150
                      if_start shift  174
                     if_header shift  8
                      if_block shift  40
                   while_start shift  171
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  84
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 175

State 3:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (175) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  121
                     SEMICOLON shift  316
                        LPAREN shift  64
                      LBRACKET shift  323
                           VAR shift  86
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                         CONST shift  85
                           INC shift  42
                           DEC shift  41
                            IF shift  272
                         WHILE shift  266
                           FOR shift  170
                       FOREACH shift  165
                      CONTINUE shift  248
                         BREAK shift  247
                        RETURN shift  20
                         error shift  223
                     vdef_stmt shift  219
                     blockStmt shift  317
                          stmt shift  242
                      bodyStmt shift  325
                   return_stmt shift  222
                      lbracket shift  2
               vdefAssign_stmt shift  218
                     cdef_stmt shift  217
                   assign_stmt shift  216
                      funcexpr shift  155
                    actionStmt shift  309
                       if_stmt shift  308
                    while_stmt shift  307
                      for_stmt shift  306
                  foreach_stmt shift  305
                 continue_stmt shift  211
                    break_stmt shift  210
                          expr shift  94
                        lvalue shift  125
           lvalueList_nonEmpty shift  150
                      if_start shift  174
                     if_header shift  8
                      if_block shift  40
                   while_start shift  171
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  84
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 175

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (175) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  121
                     SEMICOLON shift  316
                        LPAREN shift  64
                      LBRACKET shift  323
                           VAR shift  86
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                         CONST shift  85
                           INC shift  42
                           DEC shift  41
                            IF shift  272
                         WHILE shift  266
                           FOR shift  170
                       FOREACH shift  165
                      CONTINUE shift  248
                         BREAK shift  247
                        RETURN shift  20
                         error shift  223
                     vdef_stmt shift  219
                     blockStmt shift  317
                          stmt shift  249
                      bodyStmt shift  325
                   return_stmt shift  222
                      lbracket shift  2
               vdefAssign_stmt shift  218
                     cdef_stmt shift  217
                   assign_stmt shift  216
                      funcexpr shift  155
                    actionStmt shift  309
                       if_stmt shift  308
                    while_stmt shift  307
                      for_stmt shift  306
                  foreach_stmt shift  305
                 continue_stmt shift  211
                    break_stmt shift  210
                          expr shift  94
                        lvalue shift  125
           lvalueList_nonEmpty shift  150
                      if_start shift  174
                     if_header shift  8
                      if_block shift  40
                   while_start shift  171
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  84
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 175

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          for_stmt ::= for_header * stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (175) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  121
                     SEMICOLON shift  316
                        LPAREN shift  64
                      LBRACKET shift  323
                           VAR shift  86
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                         CONST shift  85
                           INC shift  42
                           DEC shift  41
                            IF shift  272
                         WHILE shift  266
                           FOR shift  170
                       FOREACH shift  165
                      CONTINUE shift  248
                         BREAK shift  247
                        RETURN shift  20
                         error shift  223
                     vdef_stmt shift  219
                     blockStmt shift  317
                          stmt shift  252
                      bodyStmt shift  325
                   return_stmt shift  222
                      lbracket shift  2
               vdefAssign_stmt shift  218
                     cdef_stmt shift  217
                   assign_stmt shift  216
                      funcexpr shift  155
                    actionStmt shift  309
                       if_stmt shift  308
                    while_stmt shift  307
                      for_stmt shift  306
                  foreach_stmt shift  305
                 continue_stmt shift  211
                    break_stmt shift  210
                          expr shift  94
                        lvalue shift  125
           lvalueList_nonEmpty shift  150
                      if_start shift  174
                     if_header shift  8
                      if_block shift  40
                   while_start shift  171
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  84
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 175

State 6:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (175) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  121
                     SEMICOLON shift  316
                        LPAREN shift  64
                      LBRACKET shift  323
                           VAR shift  86
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                         CONST shift  85
                           INC shift  42
                           DEC shift  41
                            IF shift  272
                         WHILE shift  266
                           FOR shift  170
                       FOREACH shift  165
                      CONTINUE shift  248
                         BREAK shift  247
                        RETURN shift  20
                         error shift  223
                     vdef_stmt shift  219
                     blockStmt shift  317
                          stmt shift  264
                      bodyStmt shift  325
                   return_stmt shift  222
                      lbracket shift  2
               vdefAssign_stmt shift  218
                     cdef_stmt shift  217
                   assign_stmt shift  216
                      funcexpr shift  155
                    actionStmt shift  309
                       if_stmt shift  308
                    while_stmt shift  307
                      for_stmt shift  306
                  foreach_stmt shift  305
                 continue_stmt shift  211
                    break_stmt shift  210
                          expr shift  94
                        lvalue shift  125
           lvalueList_nonEmpty shift  150
                      if_start shift  174
                     if_header shift  8
                      if_block shift  40
                   while_start shift  171
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  84
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 175

State 7:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (175) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  121
                     SEMICOLON shift  316
                        LPAREN shift  64
                      LBRACKET shift  323
                           VAR shift  86
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                         CONST shift  85
                           INC shift  42
                           DEC shift  41
                            IF shift  272
                         WHILE shift  266
                           FOR shift  170
                       FOREACH shift  165
                      CONTINUE shift  248
                         BREAK shift  247
                        RETURN shift  20
                         error shift  223
                     vdef_stmt shift  219
                     blockStmt shift  317
                          stmt shift  267
                      bodyStmt shift  325
                   return_stmt shift  222
                      lbracket shift  2
               vdefAssign_stmt shift  218
                     cdef_stmt shift  217
                   assign_stmt shift  216
                      funcexpr shift  155
                    actionStmt shift  309
                       if_stmt shift  308
                    while_stmt shift  307
                      for_stmt shift  306
                  foreach_stmt shift  305
                 continue_stmt shift  211
                    break_stmt shift  210
                          expr shift  94
                        lvalue shift  125
           lvalueList_nonEmpty shift  150
                      if_start shift  174
                     if_header shift  8
                      if_block shift  40
                   while_start shift  171
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  84
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 175

State 8:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (175) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  121
                     SEMICOLON shift  316
                        LPAREN shift  64
                      LBRACKET shift  323
                           VAR shift  86
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                         CONST shift  85
                           INC shift  42
                           DEC shift  41
                            IF shift  272
                         WHILE shift  266
                           FOR shift  170
                       FOREACH shift  165
                      CONTINUE shift  248
                         BREAK shift  247
                        RETURN shift  20
                         error shift  223
                     vdef_stmt shift  219
                     blockStmt shift  317
                          stmt shift  270
                      bodyStmt shift  325
                   return_stmt shift  222
                      lbracket shift  2
               vdefAssign_stmt shift  218
                     cdef_stmt shift  217
                   assign_stmt shift  216
                      funcexpr shift  155
                    actionStmt shift  309
                       if_stmt shift  308
                    while_stmt shift  307
                      for_stmt shift  306
                  foreach_stmt shift  305
                 continue_stmt shift  211
                    break_stmt shift  210
                          expr shift  94
                        lvalue shift  125
           lvalueList_nonEmpty shift  150
                      if_start shift  174
                     if_header shift  8
                      if_block shift  40
                   while_start shift  171
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  84
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 175

State 9:
          fdef_chunk ::= fdef_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
    (175) actionStmt_start ::= *
          actionStmt ::= * actionStmt_start action
          actionStmt ::= * actionStmt_start actions

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  121
                     SEMICOLON shift  316
                        LPAREN shift  64
                      LBRACKET shift  323
                           VAR shift  86
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                         CONST shift  85
                           INC shift  42
                           DEC shift  41
                            IF shift  272
                         WHILE shift  266
                           FOR shift  170
                       FOREACH shift  165
                      CONTINUE shift  248
                         BREAK shift  247
                        RETURN shift  20
                         error shift  223
                     vdef_stmt shift  219
                     blockStmt shift  317
                          stmt shift  327
                      bodyStmt shift  325
                   return_stmt shift  222
                      lbracket shift  2
               vdefAssign_stmt shift  218
                     cdef_stmt shift  217
                   assign_stmt shift  216
                      funcexpr shift  155
                    actionStmt shift  309
                       if_stmt shift  308
                    while_stmt shift  307
                      for_stmt shift  306
                  foreach_stmt shift  305
                 continue_stmt shift  211
                    break_stmt shift  210
                          expr shift  94
                        lvalue shift  125
           lvalueList_nonEmpty shift  150
                      if_start shift  174
                     if_header shift  8
                      if_block shift  40
                   while_start shift  171
                  while_header shift  6
                    for_opener shift  11
                   for_header1 shift  22
                   for_header2 shift  13
                    for_header shift  5
                foreach_opener shift  84
                foreach_header shift  4
              actionStmt_start shift  77
                     {default} reduce 175

State 10:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunk ::= * import_chunk SEMICOLON
          chunk ::= * fdef_chunk
          chunk ::= * fdecl_chunk
          chunk ::= * object_chunk
          chunk ::= * vdef_stmt SEMICOLON
          chunk ::= * vdefAssign_global_stmt SEMICOLON
          chunk ::= * cdef_global_stmt SEMICOLON
          chunk ::= * blockStmt
          import_chunk ::= * IMPORT dottedName AS NAME
          import_chunk ::= * IMPORT dottedName
          fdef_header ::= * FUNCTION NAME LPAREN nameList RPAREN
          fdef_chunk ::= * fdef_header stmt
          fdecl_chunk ::= * FUNCTION NAME LPAREN nameList RPAREN SEMICOLON
          object_header ::= * OBJECT NAME LBRACKET
          object_body ::= * object_header
          object_body ::= * object_body VAR nameList_nonEmpty SEMICOLON
          object_chunk ::= * object_body RBRACKET
          lbracket ::= * LBRACKET
          blockStmt ::= * lbracket RBRACKET
          blockStmt ::= * lbracket return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket bodyStmtList rbracket
          blockStmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          blockStmt ::= * lbracket error RBRACKET
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_global_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_global_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty

                             $ reduce 0
                        IMPORT shift  91
                      FUNCTION shift  229
                        OBJECT shift  160
                      LBRACKET shift  323
                           VAR shift  80
                         CONST shift  79
                         chunk shift  342
                  import_chunk shift  235
                    fdef_chunk shift  340
                   fdecl_chunk shift  339
                  object_chunk shift  338
                     vdef_stmt shift  234
        vdefAssign_global_stmt shift  233
              cdef_global_stmt shift  232
                     blockStmt shift  334
                   fdef_header shift  9
                 object_header shift  238
                   object_body shift  147
                      lbracket shift  2

State 11:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt ::= * for_init_stmt_nonEmpty
    (154) for_init_stmt ::= *
          for_header1 ::= for_opener * for_init_stmt SEMICOLON

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  121
                        LPAREN shift  64
                           VAR shift  86
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                         CONST shift  85
                           INC shift  42
                           DEC shift  41
                     vdef_stmt shift  262
               vdefAssign_stmt shift  261
                     cdef_stmt shift  260
                   assign_stmt shift  259
                      funcexpr shift  209
                          expr shift  94
                        lvalue shift  125
           lvalueList_nonEmpty shift  150
        for_init_stmt_nonEmpty shift  169
                 for_init_stmt shift  168
                     {default} reduce 154

State 12:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA * for_init_stmt_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  121
                        LPAREN shift  64
                           VAR shift  86
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                         CONST shift  85
                           INC shift  42
                           DEC shift  41
                     vdef_stmt shift  262
               vdefAssign_stmt shift  261
                     cdef_stmt shift  260
                   assign_stmt shift  259
                      funcexpr shift  209
                          expr shift  94
                        lvalue shift  125
           lvalueList_nonEmpty shift  150
        for_init_stmt_nonEmpty shift  258

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
    (157) for_action_stmt ::= *
          for_action_stmt ::= * for_action_stmt_nonEmpty
          for_header ::= for_header2 * for_action_stmt RPAREN

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  121
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                           INC shift  42
                           DEC shift  41
                   assign_stmt shift  255
                      funcexpr shift  209
                          expr shift  94
                        lvalue shift  125
           lvalueList_nonEmpty shift  150
      for_action_stmt_nonEmpty shift  167
               for_action_stmt shift  166
                     {default} reduce 157

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC expr
          assign_stmt ::= * expr INC
          assign_stmt ::= * DEC expr
          assign_stmt ::= * expr DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA * for_action_stmt_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  121
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                           INC shift  42
                           DEC shift  41
                   assign_stmt shift  255
                      funcexpr shift  209
                          expr shift  94
                        lvalue shift  125
           lvalueList_nonEmpty shift  150
      for_action_stmt_nonEmpty shift  254

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (71) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  154
                        LPAREN shift  64
                        RPAREN shift  281
                    LSQBRACKET shift  21
                         KILLS shift  299
                        STRING shift  292
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  119
                fArgs_nonEmpty shift  198
                         fArgs shift  182

State 16:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (71) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  154
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                        STRING shift  292
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  119
                fArgs_nonEmpty shift  198
                         fArgs shift  163
                     {default} reduce 71

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (71) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= KILLS LPAREN * fArgs RPAREN

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  154
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                        STRING shift  292
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  119
                fArgs_nonEmpty shift  198
                         fArgs shift  185
                     {default} reduce 71

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (71) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          funcexpr ::= expr LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  154
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                        STRING shift  292
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  119
                fArgs_nonEmpty shift  198
                         fArgs shift  180
                     {default} reduce 71

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (71) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= NAME LPAREN * fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  154
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                        STRING shift  292
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  119
                fArgs_nonEmpty shift  198
                         fArgs shift  179
                     {default} reduce 71

State 20:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
     (60) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * exprList

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  206
             exprList_nonEmpty shift  201
                          expr shift  118
                      exprList shift  246
                     {default} reduce 60

State 21:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
     (60) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= LSQBRACKET * exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  206
             exprList_nonEmpty shift  201
                          expr shift  118
                      exprList shift  87
                     {default} reduce 60

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          for_header2 ::= for_header1 * lexpr SEMICOLON
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  199
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                 CONDITIONNAME shift  183
                      funcexpr shift  209
                          expr shift  93
                         lexpr shift  132

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  199
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                 CONDITIONNAME shift  183
                      funcexpr shift  209
                          expr shift  93
                         lexpr shift  133

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  199
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                 CONDITIONNAME shift  183
                      funcexpr shift  209
                          expr shift  93
                         lexpr shift  134

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  199
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                 CONDITIONNAME shift  183
                      funcexpr shift  209
                          expr shift  93
                         lexpr shift  135

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  199
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                 CONDITIONNAME shift  183
                      funcexpr shift  209
                          expr shift  93
                         lexpr shift  283

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  199
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                 CONDITIONNAME shift  183
                      funcexpr shift  209
                          expr shift  93
                         lexpr shift  184

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  199
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                 CONDITIONNAME shift  183
                      funcexpr shift  209
                          expr shift  93
                         lexpr shift  284

State 29:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= LPAREN * lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  199
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                 CONDITIONNAME shift  183
                      funcexpr shift  209
                          expr shift  92
                         lexpr shift  137

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= L2V LPAREN * lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr
          lexpr ::= * LPAREN lexpr RPAREN
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * KILLS LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  26
                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  29
                    LSQBRACKET shift  21
                         KILLS shift  199
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                 CONDITIONNAME shift  183
                      funcexpr shift  209
                          expr shift  93
                         lexpr shift  136

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  154
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                        STRING shift  292
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  119
                fArgs_nonEmpty shift  291

State 32:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  206
             exprList_nonEmpty shift  157
                          expr shift  118

State 33:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  206
             exprList_nonEmpty shift  158
                          expr shift  118

State 34:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= foreach_opener nameList_nonEmpty COLON * exprList_nonEmpty RPAREN

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  206
             exprList_nonEmpty shift  148
                          expr shift  118

State 35:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalueList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  206
             exprList_nonEmpty shift  175
                          expr shift  118

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA * lvalue

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  121
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  100
                        lvalue shift  273

State 37:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  206
             exprList_nonEmpty shift  176
                          expr shift  118

State 38:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  206
             exprList_nonEmpty shift  177
                          expr shift  118

State 39:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  206
             exprList_nonEmpty shift  293
                          expr shift  118

State 40:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
    (142) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  173
                    elif_start shift  172
                   elif_header shift  7
                   else_header shift  3
                     {default} reduce 142

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= DEC * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  98

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= INC * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  99

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBXR * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  101

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBOR * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  102

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IBND * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  103

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IRSH * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  104

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ILSH * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  105

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IMOD * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  106

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IDIV * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  107

State 50:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IMUL * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  108

State 51:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ISUB * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  109

State 52:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue IADD * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  110

State 53:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ASSIGN * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  111

State 54:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lvalue ::= expr LSQBRACKET * expr RSQBRACKET

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  95

State 55:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  112

State 56:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  113

State 57:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  114

State 58:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  115

State 59:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  116

State 60:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  117

State 61:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  138

State 62:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  139

State 63:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  140

State 64:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  96

State 65:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  126

State 66:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  124

State 67:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  127

State 68:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  128

State 69:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  129

State 70:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  141

State 71:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  142

State 72:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  143

State 73:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  130

State 74:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  131

State 75:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  97

State 76:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= NAME ASSIGN * expr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  63
                         MINUS shift  62
                        BITNOT shift  61
                        NUMBER shift  300
                          NAME shift  208
                        LPAREN shift  64
                    LSQBRACKET shift  21
                         KILLS shift  299
                           L2V shift  200
                     MAPSTRING shift  197
                          UNIT shift  194
                        SWITCH shift  191
                      LOCATION shift  188
                      funcexpr shift  209
                          expr shift  120

State 77:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= actionStmt_start * action
          actionStmt ::= actionStmt_start * actions

                    ACTIONNAME shift  164
                        action shift  83
                       actions shift  82

State 78:
          fdef_header ::= FUNCTION NAME LPAREN * nameList RPAREN
          fdecl_chunk ::= FUNCTION NAME LPAREN * nameList RPAREN SEMICOLON
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
     (54) nameList ::= *
          nameList ::= * nameList_nonEmpty

                          NAME shift  329
                      nameList shift  227
             nameList_nonEmpty shift  225
                     {default} reduce 54

State 79:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_global_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  329
             nameList_nonEmpty shift  144

State 80:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_global_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  329
             nameList_nonEmpty shift  145

State 81:
          object_body ::= object_body VAR * nameList_nonEmpty SEMICOLON
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  329
             nameList_nonEmpty shift  146

State 82:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
    (177) actionStmt ::= actionStmt_start actions *

                    ACTIONNAME shift  164
                        action shift  243
                     {default} reduce 177

State 83:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
    (176) actionStmt ::= actionStmt_start action *

                    ACTIONNAME shift  164
                        action shift  244
                     {default} reduce 176

State 84:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= foreach_opener * nameList_nonEmpty COLON exprList_nonEmpty RPAREN

                          NAME shift  329
             nameList_nonEmpty shift  149

State 85:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  329
             nameList_nonEmpty shift  151

State 86:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  329
             nameList_nonEmpty shift  152

State 87:
          commaSkippable ::= * COMMA
     (78) commaSkippable ::= *
          expr ::= LSQBRACKET exprList * commaSkippable RSQBRACKET

                         COMMA shift  279
                commaSkippable shift  181
                     {default} reduce 78

State 88:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  204
              numList_nonEmpty shift  153

State 89:
          rbracket ::= * RBRACKET
          blockStmt ::= lbracket bodyStmtList return_stmt SEMICOLON * rbracket

                      RBRACKET shift  321
                      rbracket shift  318

State 90:
          rbracket ::= * RBRACKET
          blockStmt ::= lbracket return_stmt SEMICOLON * rbracket

                      RBRACKET shift  321
                      rbracket shift  320

State 91:
          dottedName ::= * NAME
          dottedName ::= * dottedName PERIOD NAME
          import_chunk ::= IMPORT * dottedName AS NAME
          import_chunk ::= IMPORT * dottedName

                          NAME shift  333
                    dottedName shift  156

State 92:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (98) lexpr ::= expr *
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  60
                            LE shift  58
                            LT shift  57
                            GE shift  56
                            GT shift  55
                            NE shift  59
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                        RPAREN shift  296
                    LSQBRACKET shift  75
                     {default} reduce 98

State 93:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (98) lexpr ::= expr *
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  60
                            LE shift  58
                            LT shift  57
                            GE shift  56
                            GT shift  55
                            NE shift  59
                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 98

State 94:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lvalue ::= expr * LSQBRACKET expr RSQBRACKET
          lvalue ::= expr * PERIOD NAME
          assign_stmt ::= expr * INC
          assign_stmt ::= expr * DEC

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  178
                        LPAREN shift  18
                    LSQBRACKET shift  54
                           INC shift  275
                           DEC shift  274

State 95:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lvalue ::= expr LSQBRACKET expr * RSQBRACKET

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                    RSQBRACKET shift  122

State 96:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                        RPAREN shift  296
                    LSQBRACKET shift  75

State 97:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                    RSQBRACKET shift  297

State 98:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (123) assign_stmt ::= DEC expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 123

State 99:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (121) assign_stmt ::= INC expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 121

State 100:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lvalue ::= expr * LSQBRACKET expr RSQBRACKET
          lvalue ::= expr * PERIOD NAME

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  178
                        LPAREN shift  18
                    LSQBRACKET shift  54

State 101:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (134) assign_stmt ::= lvalue IBXR expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 134

State 102:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (133) assign_stmt ::= lvalue IBOR expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 133

State 103:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (132) assign_stmt ::= lvalue IBND expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 132

State 104:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (131) assign_stmt ::= lvalue IRSH expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 131

State 105:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (130) assign_stmt ::= lvalue ILSH expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 130

State 106:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (129) assign_stmt ::= lvalue IMOD expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 129

State 107:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (128) assign_stmt ::= lvalue IDIV expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 128

State 108:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (127) assign_stmt ::= lvalue IMUL expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 127

State 109:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (126) assign_stmt ::= lvalue ISUB expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 126

State 110:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (125) assign_stmt ::= lvalue IADD expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 125

State 111:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (119) assign_stmt ::= lvalue ASSIGN expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 119

State 112:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (105) lexpr ::= expr GT expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 105

State 113:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (104) lexpr ::= expr GE expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 104

State 114:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (103) lexpr ::= expr LT expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 103

State 115:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (102) lexpr ::= expr LE expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 102

State 116:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (101) lexpr ::= expr NE expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 101

State 117:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (100) lexpr ::= expr EQ expr *

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 100

State 118:
     (58) exprList_nonEmpty ::= expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 58

State 119:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (67) fArgs_nonEmpty ::= expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 67

State 120:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (69) fArgs_nonEmpty ::= NAME ASSIGN expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  66
                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 69

State 121:
     (64) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
    (114) lvalue ::= NAME *

                        ASSIGN reduce 114
                         COMMA reduce 114
                        LPAREN shift  19
                          IADD reduce 114
                          ISUB reduce 114
                          IMUL reduce 114
                          IDIV reduce 114
                          IMOD reduce 114
                          ILSH reduce 114
                          IRSH reduce 114
                          IBND reduce 114
                          IBOR reduce 114
                          IBXR reduce 114
                     {default} reduce 64

State 122:
     (66) expr ::= expr LSQBRACKET expr RSQBRACKET *
    (115) lvalue ::= expr LSQBRACKET expr RSQBRACKET *

                        ASSIGN reduce 115
                         COMMA reduce 115
                          IADD reduce 115
                          ISUB reduce 115
                          IMUL reduce 115
                          IDIV reduce 115
                          IMOD reduce 115
                          ILSH reduce 115
                          IRSH reduce 115
                          IBND reduce 115
                          IBOR reduce 115
                          IBXR reduce 115
                     {default} reduce 66

State 123:
     (65) expr ::= expr PERIOD NAME *
    (116) lvalue ::= expr PERIOD NAME *

                        ASSIGN reduce 116
                         COMMA reduce 116
                          IADD reduce 116
                          ISUB reduce 116
                          IMUL reduce 116
                          IDIV reduce 116
                          IMOD reduce 116
                          ILSH reduce 116
                          IRSH reduce 116
                          IBND reduce 116
                          IBOR reduce 116
                          IBXR reduce 116
                     {default} reduce 65

State 124:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (93) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  65
                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 93

State 125:
    (117) lvalueList_nonEmpty ::= lvalue *
          assign_stmt ::= lvalue * ASSIGN expr
          assign_stmt ::= lvalue * IADD expr
          assign_stmt ::= lvalue * ISUB expr
          assign_stmt ::= lvalue * IMUL expr
          assign_stmt ::= lvalue * IDIV expr
          assign_stmt ::= lvalue * IMOD expr
          assign_stmt ::= lvalue * ILSH expr
          assign_stmt ::= lvalue * IRSH expr
          assign_stmt ::= lvalue * IBND expr
          assign_stmt ::= lvalue * IBOR expr
          assign_stmt ::= lvalue * IBXR expr

                        ASSIGN shift  53
                          IADD shift  52
                          ISUB shift  51
                          IMUL shift  50
                          IDIV shift  49
                          IMOD shift  48
                          ILSH shift  47
                          IRSH shift  46
                          IBND shift  45
                          IBOR shift  44
                          IBXR shift  43
                     {default} reduce 117

State 126:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (94) expr ::= expr BITXOR expr *

                        BITAND shift  67
                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 94

State 127:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (92) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  69
                        RSHIFT shift  68
                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 92

State 128:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (91) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 91

State 129:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (90) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  74
                         MINUS shift  73
                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 90

State 130:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (86) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 86

State 131:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
     (85) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  71
                      MULTIPLY shift  72
                           MOD shift  70
                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 85

State 132:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          for_header2 ::= for_header1 lexpr * SEMICOLON

                           LOR shift  27
                          LAND shift  28
                     SEMICOLON shift  256

State 133:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  265

State 134:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  268

State 135:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  271

State 136:
          expr ::= L2V LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  280

State 137:
          lexpr ::= LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  27
                          LAND shift  28
                        RPAREN shift  285

State 138:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (97) expr ::= BITNOT expr *

                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 97

State 139:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (96) expr ::= MINUS expr *

                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 96

State 140:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (95) expr ::= PLUS expr *

                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 95

State 141:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (89) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 89

State 142:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (88) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 88

State 143:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (87) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        PERIOD shift  207
                        LPAREN shift  18
                    LSQBRACKET shift  75
                     {default} reduce 87

State 144:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_global_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  32
                         COMMA shift  224

State 145:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (109) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  33
                         COMMA shift  224
                     {default} reduce 109

State 146:
          object_body ::= object_body VAR nameList_nonEmpty * SEMICOLON
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  224
                     SEMICOLON shift  237

State 147:
          object_body ::= object_body * VAR nameList_nonEmpty SEMICOLON
          object_chunk ::= object_body * RBRACKET

                           VAR shift  81
                      RBRACKET shift  236

State 148:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty * RPAREN

                         COMMA shift  39
                        RPAREN shift  250

State 149:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= foreach_opener nameList_nonEmpty * COLON exprList_nonEmpty RPAREN

                         COMMA shift  224
                         COLON shift  34

State 150:
          lvalueList_nonEmpty ::= lvalueList_nonEmpty * COMMA lvalue
          assign_stmt ::= lvalueList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  35
                         COMMA shift  36

State 151:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  37
                         COMMA shift  224

State 152:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (109) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  38
                         COMMA shift  224
                     {default} reduce 109

State 153:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  203
                    RSQBRACKET shift  202

State 154:
     (64) expr ::= NAME *
          fArgs_nonEmpty ::= NAME * ASSIGN expr
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        ASSIGN shift  76
                        LPAREN shift  19
                     {default} reduce 64

State 155:
          bodyStmt ::= funcexpr * SEMICOLON
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (75) expr ::= funcexpr *

                     SEMICOLON shift  311
                    LSQBRACKET shift  215
                     {default} reduce 75

State 156:
          dottedName ::= dottedName * PERIOD NAME
          import_chunk ::= IMPORT dottedName * AS NAME
     (14) import_chunk ::= IMPORT dottedName *

                        PERIOD shift  231
                            AS shift  230
                     {default} reduce 14

State 157:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (113) cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 113

State 158:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (111) vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 111

State 159:
          object_header ::= OBJECT NAME * LBRACKET

                      LBRACKET shift  239

State 160:
          object_header ::= OBJECT * NAME LBRACKET

                          NAME shift  159

State 161:
          blockStmt ::= lbracket error * RBRACKET
     (46) bodyStmtList ::= error *

                      RBRACKET shift  241
                     {default} reduce 46

State 162:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  245

State 163:
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                        RPAREN shift  162

State 164:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  16

State 165:
          foreach_opener ::= FOREACH * LPAREN

                        LPAREN shift  251

State 166:
          for_header ::= for_header2 for_action_stmt * RPAREN

                        RPAREN shift  253

State 167:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (158) for_action_stmt ::= for_action_stmt_nonEmpty *

                         COMMA shift  14
                     {default} reduce 158

State 168:
          for_header1 ::= for_opener for_init_stmt * SEMICOLON

                     SEMICOLON shift  257

State 169:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (153) for_init_stmt ::= for_init_stmt_nonEmpty *

                         COMMA shift  12
                     {default} reduce 153

State 170:
          for_opener ::= FOR * LPAREN

                        LPAREN shift  263

State 171:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  23

State 172:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  24

State 173:
          elif_start ::= ELSE * IF
    (141) else_header ::= ELSE *

                            IF shift  269
                     {default} reduce 141

State 174:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  25

State 175:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (120) assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 120

State 176:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (112) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 112

State 177:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
    (110) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 110

State 178:
          expr ::= expr PERIOD * NAME
          lvalue ::= expr PERIOD * NAME

                          NAME shift  123

State 179:
          funcexpr ::= NAME LPAREN fArgs * RPAREN

                        RPAREN shift  276

State 180:
          funcexpr ::= expr LPAREN fArgs * RPAREN

                        RPAREN shift  277

State 181:
          expr ::= LSQBRACKET exprList commaSkippable * RSQBRACKET

                    RSQBRACKET shift  278

State 182:
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  282

State 183:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  15

State 184:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
    (107) lexpr ::= lexpr LOR lexpr *

                          LAND shift  28
                     {default} reduce 107

State 185:
          lexpr ::= KILLS LPAREN fArgs * RPAREN

                        RPAREN shift  286

State 186:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  287

State 187:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  186

State 188:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  187

State 189:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  288

State 190:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  189

State 191:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  190

State 192:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  289

State 193:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  192

State 194:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  193

State 195:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  290

State 196:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  195

State 197:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  196

State 198:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (72) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  31
                     {default} reduce 72

State 199:
     (63) expr ::= KILLS *
          lexpr ::= KILLS * LPAREN fArgs RPAREN

                        LPAREN shift  17
                     {default} reduce 63

State 200:
          expr ::= L2V * LPAREN lexpr RPAREN

                        LPAREN shift  30

State 201:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (61) exprList ::= exprList_nonEmpty *

                         COMMA shift  39
                     {default} reduce 61

State 202:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  294

State 203:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  295

State 204:
     (50) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  212
                     {default} reduce 50

State 205:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  88

State 206:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (75) expr ::= funcexpr *

                    LSQBRACKET shift  205
                     {default} reduce 75

State 207:
          expr ::= expr PERIOD * NAME

                          NAME shift  298

State 208:
     (64) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        LPAREN shift  19
                     {default} reduce 64

State 209:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (75) expr ::= funcexpr *

                    LSQBRACKET shift  215
                     {default} reduce 75

State 210:
          bodyStmt ::= break_stmt * SEMICOLON

                     SEMICOLON shift  303

State 211:
          bodyStmt ::= continue_stmt * SEMICOLON

                     SEMICOLON shift  304

State 212:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  310

State 213:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  212

State 214:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  213

State 215:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  214

State 216:
          bodyStmt ::= assign_stmt * SEMICOLON

                     SEMICOLON shift  312

State 217:
          bodyStmt ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  313

State 218:
          bodyStmt ::= vdefAssign_stmt * SEMICOLON

                     SEMICOLON shift  314

State 219:
          bodyStmt ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  315

State 220:
          blockStmt ::= lbracket bodyStmtList return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  89

State 221:
          blockStmt ::= lbracket return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  90

State 222:
          stmt ::= return_stmt * SEMICOLON

                     SEMICOLON shift  324

State 223:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  326

State 224:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  328

State 225:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
     (55) nameList ::= nameList_nonEmpty *

                         COMMA shift  224
                     {default} reduce 55

State 226:
     (15) fdef_header ::= FUNCTION NAME LPAREN nameList RPAREN *
          fdecl_chunk ::= FUNCTION NAME LPAREN nameList RPAREN * SEMICOLON

                     SEMICOLON shift  330
                     {default} reduce 15

State 227:
          fdef_header ::= FUNCTION NAME LPAREN nameList * RPAREN
          fdecl_chunk ::= FUNCTION NAME LPAREN nameList * RPAREN SEMICOLON

                        RPAREN shift  226

State 228:
          fdef_header ::= FUNCTION NAME * LPAREN nameList RPAREN
          fdecl_chunk ::= FUNCTION NAME * LPAREN nameList RPAREN SEMICOLON

                        LPAREN shift  78

State 229:
          fdef_header ::= FUNCTION * NAME LPAREN nameList RPAREN
          fdecl_chunk ::= FUNCTION * NAME LPAREN nameList RPAREN SEMICOLON

                          NAME shift  228

State 230:
          import_chunk ::= IMPORT dottedName AS * NAME

                          NAME shift  331

State 231:
          dottedName ::= dottedName PERIOD * NAME

                          NAME shift  332

State 232:
          chunk ::= cdef_global_stmt * SEMICOLON

                     SEMICOLON shift  335

State 233:
          chunk ::= vdefAssign_global_stmt * SEMICOLON

                     SEMICOLON shift  336

State 234:
          chunk ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  337

State 235:
          chunk ::= import_chunk * SEMICOLON

                     SEMICOLON shift  341

State 236:
     (21) object_chunk ::= object_body RBRACKET *

                     {default} reduce 21

State 237:
     (20) object_body ::= object_body VAR nameList_nonEmpty SEMICOLON *

                     {default} reduce 20

State 238:
     (19) object_body ::= object_header *

                     {default} reduce 19

State 239:
     (18) object_header ::= OBJECT NAME LBRACKET *

                     {default} reduce 18

State 240:
     (47) bodyStmtList ::= bodyStmt *

                     {default} reduce 47

State 241:
     (31) blockStmt ::= lbracket error RBRACKET *

                     {default} reduce 31

State 242:
    (143) if_stmt ::= if_block else_header stmt *

                     {default} reduce 143

State 243:
    (174) actions ::= actions action *

                     {default} reduce 174

State 244:
    (173) actions ::= action action *

                     {default} reduce 173

State 245:
    (172) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 172

State 246:
    (168) return_stmt ::= RETURN exprList *

                     {default} reduce 168

State 247:
    (167) break_stmt ::= BREAK *

                     {default} reduce 167

State 248:
    (166) continue_stmt ::= CONTINUE *

                     {default} reduce 166

State 249:
    (165) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 165

State 250:
    (164) foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN *

                     {default} reduce 164

State 251:
    (163) foreach_opener ::= FOREACH LPAREN *

                     {default} reduce 163

State 252:
    (162) for_stmt ::= for_header stmt *

                     {default} reduce 162

State 253:
    (161) for_header ::= for_header2 for_action_stmt RPAREN *

                     {default} reduce 161

State 254:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (156) for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty *

                     {default} reduce 156

State 255:
    (155) for_action_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 155

State 256:
    (160) for_header2 ::= for_header1 lexpr SEMICOLON *

                     {default} reduce 160

State 257:
    (159) for_header1 ::= for_opener for_init_stmt SEMICOLON *

                     {default} reduce 159

State 258:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (152) for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty *

                     {default} reduce 152

State 259:
    (151) for_init_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 151

State 260:
    (150) for_init_stmt_nonEmpty ::= cdef_stmt *

                     {default} reduce 150

State 261:
    (149) for_init_stmt_nonEmpty ::= vdefAssign_stmt *

                     {default} reduce 149

State 262:
    (148) for_init_stmt_nonEmpty ::= vdef_stmt *

                     {default} reduce 148

State 263:
    (147) for_opener ::= FOR LPAREN *

                     {default} reduce 147

State 264:
    (146) while_stmt ::= while_header stmt *

                     {default} reduce 146

State 265:
    (145) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 145

State 266:
    (144) while_start ::= WHILE *

                     {default} reduce 144

State 267:
    (140) if_block ::= if_block elif_header stmt *

                     {default} reduce 140

State 268:
    (139) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 139

State 269:
    (138) elif_start ::= ELSE IF *

                     {default} reduce 138

State 270:
    (137) if_block ::= if_header stmt *

                     {default} reduce 137

State 271:
    (136) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 136

State 272:
    (135) if_start ::= IF *

                     {default} reduce 135

State 273:
    (118) lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA lvalue *

                     {default} reduce 118

State 274:
    (124) assign_stmt ::= expr DEC *

                     {default} reduce 124

State 275:
    (122) assign_stmt ::= expr INC *

                     {default} reduce 122

State 276:
     (73) funcexpr ::= NAME LPAREN fArgs RPAREN *

                     {default} reduce 73

State 277:
     (74) funcexpr ::= expr LPAREN fArgs RPAREN *

                     {default} reduce 74

State 278:
     (79) expr ::= LSQBRACKET exprList commaSkippable RSQBRACKET *

                     {default} reduce 79

State 279:
     (77) commaSkippable ::= COMMA *

                     {default} reduce 77

State 280:
     (80) expr ::= L2V LPAREN lexpr RPAREN *

                     {default} reduce 80

State 281:
    (171) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 171

State 282:
    (169) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 169

State 283:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
    (108) lexpr ::= LNOT lexpr *

                     {default} reduce 108

State 284:
          lexpr ::= lexpr * LAND lexpr
    (106) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 106

State 285:
     (99) lexpr ::= LPAREN lexpr RPAREN *

                     {default} reduce 99

State 286:
    (170) lexpr ::= KILLS LPAREN fArgs RPAREN *

                     {default} reduce 170

State 287:
     (84) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 84

State 288:
     (83) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 83

State 289:
     (82) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 82

State 290:
     (81) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 81

State 291:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (70) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArgs_nonEmpty *

                     {default} reduce 70

State 292:
     (68) fArgs_nonEmpty ::= STRING *

                     {default} reduce 68

State 293:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (59) exprList_nonEmpty ::= exprList_nonEmpty COMMA exprList_nonEmpty *

                     {default} reduce 59

State 294:
     (56) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 56

State 295:
     (51) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 51

State 296:
     (76) expr ::= LPAREN expr RPAREN *

                     {default} reduce 76

State 297:
     (66) expr ::= expr LSQBRACKET expr RSQBRACKET *

                     {default} reduce 66

State 298:
     (65) expr ::= expr PERIOD NAME *

                     {default} reduce 65

State 299:
     (63) expr ::= KILLS *

                     {default} reduce 63

State 300:
     (62) expr ::= NUMBER *

                     {default} reduce 62

State 301:
     (49) bodyStmtList ::= bodyStmtList error *

                     {default} reduce 49

State 302:
     (48) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 48

State 303:
     (45) bodyStmt ::= break_stmt SEMICOLON *

                     {default} reduce 45

State 304:
     (44) bodyStmt ::= continue_stmt SEMICOLON *

                     {default} reduce 44

State 305:
     (43) bodyStmt ::= foreach_stmt *

                     {default} reduce 43

State 306:
     (42) bodyStmt ::= for_stmt *

                     {default} reduce 42

State 307:
     (41) bodyStmt ::= while_stmt *

                     {default} reduce 41

State 308:
     (40) bodyStmt ::= if_stmt *

                     {default} reduce 40

State 309:
     (39) bodyStmt ::= actionStmt *

                     {default} reduce 39

State 310:
     (57) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 57

State 311:
     (38) bodyStmt ::= funcexpr SEMICOLON *

                     {default} reduce 38

State 312:
     (37) bodyStmt ::= assign_stmt SEMICOLON *

                     {default} reduce 37

State 313:
     (36) bodyStmt ::= cdef_stmt SEMICOLON *

                     {default} reduce 36

State 314:
     (35) bodyStmt ::= vdefAssign_stmt SEMICOLON *

                     {default} reduce 35

State 315:
     (34) bodyStmt ::= vdef_stmt SEMICOLON *

                     {default} reduce 34

State 316:
     (33) bodyStmt ::= SEMICOLON *

                     {default} reduce 33

State 317:
     (32) bodyStmt ::= blockStmt *

                     {default} reduce 32

State 318:
     (30) blockStmt ::= lbracket bodyStmtList return_stmt SEMICOLON rbracket *

                     {default} reduce 30

State 319:
     (29) blockStmt ::= lbracket bodyStmtList rbracket *

                     {default} reduce 29

State 320:
     (28) blockStmt ::= lbracket return_stmt SEMICOLON rbracket *

                     {default} reduce 28

State 321:
     (26) rbracket ::= RBRACKET *

                     {default} reduce 26

State 322:
     (27) blockStmt ::= lbracket RBRACKET *

                     {default} reduce 27

State 323:
     (25) lbracket ::= LBRACKET *

                     {default} reduce 25

State 324:
     (24) stmt ::= return_stmt SEMICOLON *

                     {default} reduce 24

State 325:
     (23) stmt ::= bodyStmt *

                     {default} reduce 23

State 326:
     (22) stmt ::= error SEMICOLON *

                     {default} reduce 22

State 327:
     (16) fdef_chunk ::= fdef_header stmt *

                     {default} reduce 16

State 328:
     (53) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 53

State 329:
     (52) nameList_nonEmpty ::= NAME *

                     {default} reduce 52

State 330:
     (17) fdecl_chunk ::= FUNCTION NAME LPAREN nameList RPAREN SEMICOLON *

                     {default} reduce 17

State 331:
     (13) import_chunk ::= IMPORT dottedName AS NAME *

                     {default} reduce 13

State 332:
     (12) dottedName ::= dottedName PERIOD NAME *

                     {default} reduce 12

State 333:
     (11) dottedName ::= NAME *

                     {default} reduce 11

State 334:
     (10) chunk ::= blockStmt *

                     {default} reduce 10

State 335:
      (9) chunk ::= cdef_global_stmt SEMICOLON *

                     {default} reduce 9

State 336:
      (8) chunk ::= vdefAssign_global_stmt SEMICOLON *

                     {default} reduce 8

State 337:
      (7) chunk ::= vdef_stmt SEMICOLON *

                     {default} reduce 7

State 338:
      (6) chunk ::= object_chunk *

                     {default} reduce 6

State 339:
      (5) chunk ::= fdecl_chunk *

                     {default} reduce 5

State 340:
      (4) chunk ::= fdef_chunk *

                     {default} reduce 4

State 341:
      (3) chunk ::= import_chunk SEMICOLON *

                     {default} reduce 3

State 342:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: ASSIGN
    2: COMMA
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: SEMICOLON
   28: PERIOD
   29: IMPORT
   30: AS
   31: FUNCTION
   32: LPAREN
   33: RPAREN
   34: OBJECT
   35: LBRACKET
   36: VAR
   37: RBRACKET
   38: LSQBRACKET
   39: RSQBRACKET
   40: KILLS
   41: STRING
   42: FUNCCALL
   43: L2V
   44: MAPSTRING
   45: UNIT
   46: SWITCH
   47: LOCATION
   48: CONST
   49: INC
   50: DEC
   51: IADD
   52: ISUB
   53: IMUL
   54: IDIV
   55: IMOD
   56: ILSH
   57: IRSH
   58: IBND
   59: IBOR
   60: IBXR
   61: IF
   62: ELSE
   63: WHILE
   64: FOR
   65: FOREACH
   66: COLON
   67: CONTINUE
   68: BREAK
   69: RETURN
   70: CONDITIONNAME
   71: ACTIONNAME
   72: error:
   73: nt:
   74: program: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   75: chunks: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   76: chunk: IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   77: import_chunk: IMPORT
   78: fdef_chunk: FUNCTION
   79: fdecl_chunk: FUNCTION
   80: object_chunk: OBJECT
   81: vdef_stmt: VAR
   82: vdefAssign_global_stmt: VAR
   83: cdef_global_stmt: CONST
   84: blockStmt: LBRACKET
   85: dottedName: NAME
   86: fdef_header: FUNCTION
   87: nameList: <lambda> NAME
   88: stmt: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET VAR LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK RETURN ACTIONNAME
   89: object_header: OBJECT
   90: object_body: OBJECT
   91: nameList_nonEmpty: NAME
   92: bodyStmt: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET VAR LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK ACTIONNAME
   93: return_stmt: RETURN
   94: lbracket: LBRACKET
   95: rbracket: RBRACKET
   96: bodyStmtList: PLUS MINUS BITNOT NUMBER NAME SEMICOLON LPAREN LBRACKET VAR LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC IF WHILE FOR FOREACH CONTINUE BREAK ACTIONNAME
   97: vdefAssign_stmt: VAR
   98: cdef_stmt: CONST
   99: assign_stmt: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC
  100: funcexpr: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  101: actionStmt: ACTIONNAME
  102: if_stmt: IF
  103: while_stmt: WHILE
  104: for_stmt: FOR
  105: foreach_stmt: FOREACH
  106: continue_stmt: CONTINUE
  107: break_stmt: BREAK
  108: numList_nonEmpty: NUMBER
  109: exprList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  110: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  111: exprList: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  112: fArgs_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION
  113: fArgs: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION
  114: commaSkippable: <lambda> COMMA
  115: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
  116: lvalue: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  117: lvalueList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION
  118: if_start: IF
  119: if_header: IF
  120: if_block: IF
  121: elif_start: ELSE
  122: elif_header: ELSE
  123: else_header: ELSE
  124: while_start: WHILE
  125: while_header: WHILE
  126: for_opener: FOR
  127: for_init_stmt_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN VAR LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC
  128: for_init_stmt: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN VAR LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION CONST INC DEC
  129: for_action_stmt_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC
  130: for_action_stmt: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN LSQBRACKET KILLS L2V MAPSTRING UNIT SWITCH LOCATION INC DEC
  131: for_header1: FOR
  132: for_header2: FOR
  133: for_header: FOR
  134: foreach_opener: FOREACH
  135: foreach_header: FOREACH
  136: action: ACTIONNAME
  137: actions: ACTIONNAME
  138: actionStmt_start: <lambda>
