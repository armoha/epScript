State 0:
          program ::= * chunks
     (80) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  7
                     {default} reduce 80

State 1:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          stmtList ::= * stmt
          stmtList ::= * stmtList stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET * stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          block ::= LBRACKET * error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN emptyableExprList
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  66
                           VAR shift  41
                     SEMICOLON shift  99
                      LBRACKET shift  1
                            IF shift  128
                         WHILE shift  145
                      CONTINUE shift  83
                         BREAK shift  79
                        RETURN shift  9
                         error shift  70
                      nameList shift  74
                      funcexpr shift  98
                          expr shift  47
                     vdef_stmt shift  101
               vdefAssign_stmt shift  103
                vdefMulti_stmt shift  106
          vdefMultiAssign_stmt shift  105
                   assign_stmt shift  107
              assignMulti_stmt shift  108
                      stmtList shift  2
                          stmt shift  124
                         block shift  118
                      if_start shift  77
                     if_header shift  4
                       if_stmt shift  109
                   else_header shift  3
                   while_start shift  44
                    while_stmt shift  110
                 continue_stmt shift  112
                    break_stmt shift  114
                   return_stmt shift  116

State 2:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          stmtList ::= stmtList * stmt
          block ::= * LBRACKET stmtList RBRACKET
          block ::= LBRACKET stmtList * RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN emptyableExprList
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  66
                           VAR shift  41
                     SEMICOLON shift  99
                      LBRACKET shift  1
                      RBRACKET shift  127
                            IF shift  128
                         WHILE shift  145
                      CONTINUE shift  83
                         BREAK shift  79
                        RETURN shift  9
                         error shift  93
                      nameList shift  74
                      funcexpr shift  98
                          expr shift  47
                     vdef_stmt shift  101
               vdefAssign_stmt shift  103
                vdefMulti_stmt shift  106
          vdefMultiAssign_stmt shift  105
                   assign_stmt shift  107
              assignMulti_stmt shift  108
                          stmt shift  126
                         block shift  118
                      if_start shift  77
                     if_header shift  4
                       if_stmt shift  109
                   else_header shift  3
                   while_start shift  44
                    while_stmt shift  110
                 continue_stmt shift  112
                    break_stmt shift  114
                   return_stmt shift  116

State 3:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          if_stmt ::= else_header * stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN emptyableExprList
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  66
                           VAR shift  41
                     SEMICOLON shift  99
                      LBRACKET shift  1
                            IF shift  128
                         WHILE shift  145
                      CONTINUE shift  83
                         BREAK shift  79
                        RETURN shift  9
                         error shift  93
                      nameList shift  74
                      funcexpr shift  98
                          expr shift  47
                     vdef_stmt shift  101
               vdefAssign_stmt shift  103
                vdefMulti_stmt shift  106
          vdefMultiAssign_stmt shift  105
                   assign_stmt shift  107
              assignMulti_stmt shift  108
                          stmt shift  144
                         block shift  118
                      if_start shift  77
                     if_header shift  4
                       if_stmt shift  109
                   else_header shift  3
                   while_start shift  44
                    while_stmt shift  110
                 continue_stmt shift  112
                    break_stmt shift  114
                   return_stmt shift  116

State 4:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          if_stmt ::= if_header * stmt
          else_header ::= * if_header stmt ELSE
          else_header ::= if_header * stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN emptyableExprList
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  66
                           VAR shift  41
                     SEMICOLON shift  99
                      LBRACKET shift  1
                            IF shift  128
                         WHILE shift  145
                      CONTINUE shift  83
                         BREAK shift  79
                        RETURN shift  9
                         error shift  93
                      nameList shift  74
                      funcexpr shift  98
                          expr shift  47
                     vdef_stmt shift  101
               vdefAssign_stmt shift  103
                vdefMulti_stmt shift  106
          vdefMultiAssign_stmt shift  105
                   assign_stmt shift  107
              assignMulti_stmt shift  108
                          stmt shift  91
                         block shift  118
                      if_start shift  77
                     if_header shift  4
                       if_stmt shift  109
                   else_header shift  3
                   while_start shift  44
                    while_stmt shift  110
                 continue_stmt shift  112
                    break_stmt shift  114
                   return_stmt shift  116

State 5:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          fdef_chunk ::= function_header * stmt
          return_stmt ::= * RETURN emptyableExprList
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  66
                           VAR shift  41
                     SEMICOLON shift  99
                      LBRACKET shift  1
                            IF shift  128
                         WHILE shift  145
                      CONTINUE shift  83
                         BREAK shift  79
                        RETURN shift  9
                         error shift  93
                      nameList shift  74
                      funcexpr shift  98
                          expr shift  47
                     vdef_stmt shift  101
               vdefAssign_stmt shift  103
                vdefMulti_stmt shift  106
          vdefMultiAssign_stmt shift  105
                   assign_stmt shift  107
              assignMulti_stmt shift  108
                          stmt shift  130
                         block shift  118
                      if_start shift  77
                     if_header shift  4
                       if_stmt shift  109
                   else_header shift  3
                   while_start shift  44
                    while_stmt shift  110
                 continue_stmt shift  112
                    break_stmt shift  114
                   return_stmt shift  116

State 6:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefAssign_stmt ::= * VAR NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          vdefMultiAssign_stmt ::= * VAR nameList ASSIGN exprList SEMICOLON
          assign_stmt ::= * NAME ASSIGN expr SEMICOLON
          assignMulti_stmt ::= * nameList ASSIGN exprList SEMICOLON
          block ::= * LBRACKET stmtList RBRACKET
          block ::= * LBRACKET error RBRACKET
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_stmt ::= * if_header stmt
          else_header ::= * if_header stmt ELSE
          if_stmt ::= * else_header stmt
          while_start ::= * WHILE
          while_stmt ::= * while_start while_cond stmt
          while_stmt ::= while_start while_cond * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN emptyableExprList
          stmt ::= * error SEMICOLON
          stmt ::= * SEMICOLON
          stmt ::= * vdef_stmt
          stmt ::= * vdefAssign_stmt
          stmt ::= * vdefMultiAssign_stmt
          stmt ::= * vdefMulti_stmt
          stmt ::= * assign_stmt
          stmt ::= * assignMulti_stmt
          stmt ::= * expr SEMICOLON
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          stmt ::= * continue_stmt
          stmt ::= * break_stmt
          stmt ::= * return_stmt
          stmt ::= * block

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  66
                           VAR shift  41
                     SEMICOLON shift  99
                      LBRACKET shift  1
                            IF shift  128
                         WHILE shift  145
                      CONTINUE shift  83
                         BREAK shift  79
                        RETURN shift  9
                         error shift  93
                      nameList shift  74
                      funcexpr shift  98
                          expr shift  47
                     vdef_stmt shift  101
               vdefAssign_stmt shift  103
                vdefMulti_stmt shift  106
          vdefMultiAssign_stmt shift  105
                   assign_stmt shift  107
              assignMulti_stmt shift  108
                          stmt shift  147
                         block shift  118
                      if_start shift  77
                     if_header shift  4
                       if_stmt shift  109
                   else_header shift  3
                   while_start shift  44
                    while_stmt shift  110
                 continue_stmt shift  112
                    break_stmt shift  114
                   return_stmt shift  116

State 7:
      (0) program ::= chunks *
          vdef_stmt ::= * VAR NAME SEMICOLON
          vdefMulti_stmt ::= * VAR nameList SEMICOLON
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * vdefMulti_stmt
          chunks ::= chunks * chunk

                             $ reduce 0
                           VAR shift  43
                      FUNCTION shift  92
                     vdef_stmt shift  132
                vdefMulti_stmt shift  133
                function_start shift  90
               function_header shift  5
                    fdef_chunk shift  131
                         chunk shift  134

State 8:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          emptyableExprList ::= * exprList
      (9) emptyableExprList ::= *
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          funcexpr ::= NAME LPAREN * emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      exprList shift  88
                      funcexpr shift  94
                          expr shift  55
             emptyableExprList shift  87
                     {default} reduce 9

State 9:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          emptyableExprList ::= * exprList
      (9) emptyableExprList ::= *
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * emptyableExprList

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      exprList shift  88
                      funcexpr shift  94
                          expr shift  55
             emptyableExprList shift  150
                     {default} reduce 9

State 10:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr

                          LNOT shift  13
                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  45
                         lexpr shift  136

State 11:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN

                          LNOT shift  13
                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  45
                         lexpr shift  62

State 12:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr

                          LNOT shift  13
                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  45
                         lexpr shift  81

State 13:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr

                          LNOT shift  14
                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  45
                         lexpr shift  138

State 14:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr

                          LNOT shift  14
                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  45
                         lexpr shift  139

State 15:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_cond ::= LPAREN * lexpr RPAREN

                          LNOT shift  13
                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  45
                         lexpr shift  63

State 16:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefMultiAssign_stmt ::= VAR nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      exprList shift  72
                      funcexpr shift  94
                          expr shift  55

State 17:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assignMulti_stmt ::= nameList ASSIGN * exprList SEMICOLON

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      exprList shift  76
                      funcexpr shift  94
                          expr shift  55

State 18:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  153

State 19:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  64

State 20:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  65

State 21:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  102

State 22:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  104

State 23:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  60

State 24:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  61

State 25:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  59

State 26:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  57

State 27:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  58

State 28:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  111

State 29:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  113

State 30:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  115

State 31:
          exprList ::= exprList COMMA * expr
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  52

State 32:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= NAME ASSIGN * expr SEMICOLON

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  46

State 33:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR NAME ASSIGN * expr SEMICOLON

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  48

State 34:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  49

State 35:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  54

State 36:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  53

State 37:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  51

State 38:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  50

State 39:
          expr ::= * NUMBER
          expr ::= * NAME
          funcexpr ::= * NAME LPAREN emptyableExprList RPAREN
          expr ::= * funcexpr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  28
                         MINUS shift  29
                        BITNOT shift  30
                        NUMBER shift  97
                          NAME shift  89
                      funcexpr shift  98
                          expr shift  56

State 40:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          function_header ::= function_start LPAREN * nameList RPAREN
          function_header ::= function_start LPAREN * RPAREN

                          NAME shift  85
                        RPAREN shift  151
                      nameList shift  69

State 41:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefAssign_stmt ::= VAR * NAME ASSIGN expr SEMICOLON
          vdefMulti_stmt ::= VAR * nameList SEMICOLON
          vdefMultiAssign_stmt ::= VAR * nameList ASSIGN exprList SEMICOLON

                          NAME shift  67
                      nameList shift  68

State 42:
          numList ::= * NUMBER
          numList ::= * numList COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET * numList RSQBRACKET RSQBRACKET

                        NUMBER shift  100
                       numList shift  75

State 43:
          nameList ::= * NAME COMMA NAME
          nameList ::= * nameList COMMA NAME
          vdef_stmt ::= VAR * NAME SEMICOLON
          vdefMulti_stmt ::= VAR * nameList SEMICOLON

                          NAME shift  73
                      nameList shift  71

State 44:
          while_cond ::= * LPAREN lexpr RPAREN
          while_stmt ::= while_start * while_cond stmt

                        LPAREN shift  15
                    while_cond shift  6

State 45:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  34
                            LE shift  36
                            LT shift  37
                            GE shift  38
                            GT shift  39
                            NE shift  35
                         BITOR shift  26
                        BITXOR shift  27
                        BITAND shift  25
                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22

State 46:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          assign_stmt ::= NAME ASSIGN expr * SEMICOLON

                         BITOR shift  26
                        BITXOR shift  27
                        BITAND shift  25
                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     SEMICOLON shift  119

State 47:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          stmt ::= expr * SEMICOLON

                         BITOR shift  26
                        BITXOR shift  27
                        BITAND shift  25
                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     SEMICOLON shift  121

State 48:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          vdefAssign_stmt ::= VAR NAME ASSIGN expr * SEMICOLON

                         BITOR shift  26
                        BITXOR shift  27
                        BITAND shift  25
                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     SEMICOLON shift  122

State 49:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (27) lexpr ::= expr EQ expr *

                         BITOR shift  26
                        BITXOR shift  27
                        BITAND shift  25
                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 27

State 50:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (31) lexpr ::= expr GE expr *

                         BITOR shift  26
                        BITXOR shift  27
                        BITAND shift  25
                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 31

State 51:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (30) lexpr ::= expr LT expr *

                         BITOR shift  26
                        BITXOR shift  27
                        BITAND shift  25
                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 30

State 52:
      (7) exprList ::= exprList COMMA expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  26
                        BITXOR shift  27
                        BITAND shift  25
                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 7

State 53:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (29) lexpr ::= expr LE expr *

                         BITOR shift  26
                        BITXOR shift  27
                        BITAND shift  25
                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 29

State 54:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (28) lexpr ::= expr NE expr *

                         BITOR shift  26
                        BITXOR shift  27
                        BITAND shift  25
                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 28

State 55:
      (6) exprList ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  26
                        BITXOR shift  27
                        BITAND shift  25
                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 6

State 56:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (32) lexpr ::= expr GT expr *

                         BITOR shift  26
                        BITXOR shift  27
                        BITAND shift  25
                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 32

State 57:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (22) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  27
                        BITAND shift  25
                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 22

State 58:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (23) expr ::= expr BITXOR expr *

                        BITAND shift  25
                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 23

State 59:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (21) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  23
                        RSHIFT shift  24
                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 21

State 60:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (19) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 19

State 61:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (20) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  19
                         MINUS shift  20
                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 20

State 62:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  12
                          LAND shift  10
                        RPAREN shift  140

State 63:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_cond ::= LPAREN lexpr * RPAREN

                           LOR shift  12
                          LAND shift  10
                        RPAREN shift  146

State 64:
          expr ::= expr * PLUS expr
     (14) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 14

State 65:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (15) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  21
                      MULTIPLY shift  18
                           MOD shift  22
                     {default} reduce 15

State 66:
          nameList ::= NAME * COMMA NAME
     (11) expr ::= NAME *
          funcexpr ::= NAME * LPAREN emptyableExprList RPAREN
          assign_stmt ::= NAME * ASSIGN expr SEMICOLON

                         COMMA shift  86
                        ASSIGN shift  32
                        LPAREN shift  8
                     {default} reduce 11

State 67:
          nameList ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON
          vdefAssign_stmt ::= VAR NAME * ASSIGN expr SEMICOLON

                         COMMA shift  86
                        ASSIGN shift  33
                     SEMICOLON shift  141

State 68:
          nameList ::= nameList * COMMA NAME
          vdefMulti_stmt ::= VAR nameList * SEMICOLON
          vdefMultiAssign_stmt ::= VAR nameList * ASSIGN exprList SEMICOLON

                         COMMA shift  80
                        ASSIGN shift  16
                     SEMICOLON shift  135

State 69:
          nameList ::= nameList * COMMA NAME
          function_header ::= function_start LPAREN nameList * RPAREN

                         COMMA shift  80
                        RPAREN shift  152

State 70:
          block ::= LBRACKET error * RBRACKET
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  96
                      RBRACKET shift  129

State 71:
          nameList ::= nameList * COMMA NAME
          vdefMulti_stmt ::= VAR nameList * SEMICOLON

                         COMMA shift  80
                     SEMICOLON shift  135

State 72:
          exprList ::= exprList * COMMA expr
          vdefMultiAssign_stmt ::= VAR nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  31
                     SEMICOLON shift  123

State 73:
          nameList ::= NAME * COMMA NAME
          vdef_stmt ::= VAR NAME * SEMICOLON

                         COMMA shift  86
                     SEMICOLON shift  141

State 74:
          nameList ::= nameList * COMMA NAME
          assignMulti_stmt ::= nameList * ASSIGN exprList SEMICOLON

                         COMMA shift  80
                        ASSIGN shift  17

State 75:
          numList ::= numList * COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList * RSQBRACKET RSQBRACKET

                         COMMA shift  82
                    RSQBRACKET shift  84

State 76:
          exprList ::= exprList * COMMA expr
          assignMulti_stmt ::= nameList ASSIGN exprList * SEMICOLON

                         COMMA shift  31
                     SEMICOLON shift  120

State 77:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  11

State 78:
          exprList ::= funcexpr LSQBRACKET * LSQBRACKET numList RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  42

State 79:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  149

State 80:
          nameList ::= nameList COMMA * NAME

                          NAME shift  137

State 81:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (34) lexpr ::= lexpr LOR lexpr *

                          LAND shift  10
                     {default} reduce 34

State 82:
          numList ::= numList COMMA * NUMBER

                        NUMBER shift  154

State 83:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  148

State 84:
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  95

State 85:
          nameList ::= NAME * COMMA NAME

                         COMMA shift  86

State 86:
          nameList ::= NAME COMMA * NAME

                          NAME shift  143

State 87:
          funcexpr ::= NAME LPAREN emptyableExprList * RPAREN

                        RPAREN shift  117

State 88:
          exprList ::= exprList * COMMA expr
      (8) emptyableExprList ::= exprList *

                         COMMA shift  31
                     {default} reduce 8

State 89:
     (11) expr ::= NAME *
          funcexpr ::= NAME * LPAREN emptyableExprList RPAREN

                        LPAREN shift  8
                     {default} reduce 11

State 90:
          function_header ::= function_start * LPAREN nameList RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  40

State 91:
     (49) if_stmt ::= if_header stmt *
          else_header ::= if_header stmt * ELSE

                          ELSE shift  142
                     {default} reduce 49

State 92:
          function_start ::= FUNCTION * NAME

                          NAME shift  125

State 93:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  96

State 94:
          exprList ::= funcexpr * LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET
     (13) expr ::= funcexpr *

                    LSQBRACKET shift  78
                     {default} reduce 13

State 95:
      (5) exprList ::= funcexpr LSQBRACKET LSQBRACKET numList RSQBRACKET RSQBRACKET *

                     {default} reduce 5

State 96:
     (62) stmt ::= error SEMICOLON *

                     {default} reduce 62

State 97:
     (10) expr ::= NUMBER *

                     {default} reduce 10

State 98:
     (13) expr ::= funcexpr *

                     {default} reduce 13

State 99:
     (63) stmt ::= SEMICOLON *

                     {default} reduce 63

State 100:
      (1) numList ::= NUMBER *

                     {default} reduce 1

State 101:
     (64) stmt ::= vdef_stmt *

                     {default} reduce 64

State 102:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (17) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 17

State 103:
     (65) stmt ::= vdefAssign_stmt *

                     {default} reduce 65

State 104:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (18) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 18

State 105:
     (66) stmt ::= vdefMultiAssign_stmt *

                     {default} reduce 66

State 106:
     (67) stmt ::= vdefMulti_stmt *

                     {default} reduce 67

State 107:
     (68) stmt ::= assign_stmt *

                     {default} reduce 68

State 108:
     (69) stmt ::= assignMulti_stmt *

                     {default} reduce 69

State 109:
     (71) stmt ::= if_stmt *

                     {default} reduce 71

State 110:
     (72) stmt ::= while_stmt *

                     {default} reduce 72

State 111:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (24) expr ::= PLUS expr *

                     {default} reduce 24

State 112:
     (73) stmt ::= continue_stmt *

                     {default} reduce 73

State 113:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (25) expr ::= MINUS expr *

                     {default} reduce 25

State 114:
     (74) stmt ::= break_stmt *

                     {default} reduce 74

State 115:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (26) expr ::= BITNOT expr *

                     {default} reduce 26

State 116:
     (75) stmt ::= return_stmt *

                     {default} reduce 75

State 117:
     (12) funcexpr ::= NAME LPAREN emptyableExprList RPAREN *

                     {default} reduce 12

State 118:
     (76) stmt ::= block *

                     {default} reduce 76

State 119:
     (41) assign_stmt ::= NAME ASSIGN expr SEMICOLON *

                     {default} reduce 41

State 120:
     (42) assignMulti_stmt ::= nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 42

State 121:
     (70) stmt ::= expr SEMICOLON *

                     {default} reduce 70

State 122:
     (38) vdefAssign_stmt ::= VAR NAME ASSIGN expr SEMICOLON *

                     {default} reduce 38

State 123:
     (40) vdefMultiAssign_stmt ::= VAR nameList ASSIGN exprList SEMICOLON *

                     {default} reduce 40

State 124:
     (43) stmtList ::= stmt *

                     {default} reduce 43

State 125:
     (57) function_start ::= FUNCTION NAME *

                     {default} reduce 57

State 126:
     (44) stmtList ::= stmtList stmt *

                     {default} reduce 44

State 127:
     (45) block ::= LBRACKET stmtList RBRACKET *

                     {default} reduce 45

State 128:
     (47) if_start ::= IF *

                     {default} reduce 47

State 129:
     (46) block ::= LBRACKET error RBRACKET *

                     {default} reduce 46

State 130:
     (60) fdef_chunk ::= function_header stmt *

                     {default} reduce 60

State 131:
     (77) chunk ::= fdef_chunk *

                     {default} reduce 77

State 132:
     (78) chunk ::= vdef_stmt *

                     {default} reduce 78

State 133:
     (79) chunk ::= vdefMulti_stmt *

                     {default} reduce 79

State 134:
     (81) chunks ::= chunks chunk *

                     {default} reduce 81

State 135:
     (39) vdefMulti_stmt ::= VAR nameList SEMICOLON *

                     {default} reduce 39

State 136:
          lexpr ::= lexpr * LAND lexpr
     (33) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 33

State 137:
      (4) nameList ::= nameList COMMA NAME *

                     {default} reduce 4

State 138:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (35) lexpr ::= LNOT lexpr *

                     {default} reduce 35

State 139:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (35) lexpr ::= LNOT lexpr *
     (36) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 36

State 140:
     (48) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 48

State 141:
     (37) vdef_stmt ::= VAR NAME SEMICOLON *

                     {default} reduce 37

State 142:
     (50) else_header ::= if_header stmt ELSE *

                     {default} reduce 50

State 143:
      (3) nameList ::= NAME COMMA NAME *

                     {default} reduce 3

State 144:
     (51) if_stmt ::= else_header stmt *

                     {default} reduce 51

State 145:
     (52) while_start ::= WHILE *

                     {default} reduce 52

State 146:
     (53) while_cond ::= LPAREN lexpr RPAREN *

                     {default} reduce 53

State 147:
     (54) while_stmt ::= while_start while_cond stmt *

                     {default} reduce 54

State 148:
     (55) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 55

State 149:
     (56) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 56

State 150:
     (61) return_stmt ::= RETURN emptyableExprList *

                     {default} reduce 61

State 151:
     (59) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 59

State 152:
     (58) function_header ::= function_start LPAREN nameList RPAREN *

                     {default} reduce 58

State 153:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (16) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 16

State 154:
      (2) numList ::= numList COMMA NUMBER *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: FUNCCALL
   28: IFX
   29: IFNOT
   30: ELSE
   31: LSQBRACKET
   32: RSQBRACKET
   33: LPAREN
   34: RPAREN
   35: VAR
   36: SEMICOLON
   37: LBRACKET
   38: RBRACKET
   39: IF
   40: WHILE
   41: CONTINUE
   42: BREAK
   43: FUNCTION
   44: RETURN
   45: error:
   46: nt:
   47: program: VAR FUNCTION
   48: chunks: <lambda> VAR FUNCTION
   49: numList: NUMBER
   50: nameList: NAME
   51: exprList: PLUS MINUS BITNOT NUMBER NAME
   52: funcexpr: NAME
   53: expr: PLUS MINUS BITNOT NUMBER NAME
   54: emptyableExprList: <lambda> PLUS MINUS BITNOT NUMBER NAME
   55: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME
   56: vdef_stmt: VAR
   57: vdefAssign_stmt: VAR
   58: vdefMulti_stmt: VAR
   59: vdefMultiAssign_stmt: VAR
   60: assign_stmt: NAME
   61: assignMulti_stmt: NAME
   62: stmtList: PLUS MINUS BITNOT NUMBER NAME VAR SEMICOLON LBRACKET IF WHILE CONTINUE BREAK RETURN
   63: stmt: PLUS MINUS BITNOT NUMBER NAME VAR SEMICOLON LBRACKET IF WHILE CONTINUE BREAK RETURN
   64: block: LBRACKET
   65: if_start: IF
   66: if_header: IF
   67: if_stmt: IF
   68: else_header: IF
   69: while_start: WHILE
   70: while_cond: LPAREN
   71: while_stmt: WHILE
   72: continue_stmt: CONTINUE
   73: break_stmt: BREAK
   74: function_start: FUNCTION
   75: function_header: FUNCTION
   76: fdef_chunk: FUNCTION
   77: return_stmt: RETURN
   78: chunk: VAR FUNCTION
