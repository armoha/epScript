State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  11
                     {default} reduce 1

State 1:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt SEMICOLON rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  94
                     SEMICOLON shift  255
                      LBRACKET shift  261
                           VAR shift  65
                         CONST shift  63
                            IF shift  211
                         WHILE shift  205
                           FOR shift  113
                       FOREACH shift  110
                      CONTINUE shift  186
                         BREAK shift  185
                        RETURN shift  16
                    ACTIONNAME shift  108
                         error shift  168
                     vdef_stmt shift  164
                     cdef_stmt shift  162
                          stmt shift  180
                      bodyStmt shift  263
                   return_stmt shift  167
                      lbracket shift  9
               vdefAssign_stmt shift  163
                   assign_stmt shift  161
                      funcexpr shift  160
                    actionStmt shift  249
                       if_stmt shift  248
                    while_stmt shift  247
                      for_stmt shift  246
                  foreach_stmt shift  245
                 continue_stmt shift  159
                    break_stmt shift  158
                      funcName shift  153
                        lvalue shift  120
           lvalueList_nonEmpty shift  99
                      if_start shift  117
                     if_header shift  6
                      if_block shift  56
                   while_start shift  114
                  while_header shift  4
                    for_opener shift  10
                   for_header1 shift  17
                   for_header2 shift  32
                    for_header shift  3
                foreach_opener shift  61
                foreach_header shift  2
                        action shift  60
                       actions shift  59

State 2:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt SEMICOLON rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  94
                     SEMICOLON shift  255
                      LBRACKET shift  261
                           VAR shift  65
                         CONST shift  63
                            IF shift  211
                         WHILE shift  205
                           FOR shift  113
                       FOREACH shift  110
                      CONTINUE shift  186
                         BREAK shift  185
                        RETURN shift  16
                    ACTIONNAME shift  108
                         error shift  168
                     vdef_stmt shift  164
                     cdef_stmt shift  162
                          stmt shift  187
                      bodyStmt shift  263
                   return_stmt shift  167
                      lbracket shift  9
               vdefAssign_stmt shift  163
                   assign_stmt shift  161
                      funcexpr shift  160
                    actionStmt shift  249
                       if_stmt shift  248
                    while_stmt shift  247
                      for_stmt shift  246
                  foreach_stmt shift  245
                 continue_stmt shift  159
                    break_stmt shift  158
                      funcName shift  153
                        lvalue shift  120
           lvalueList_nonEmpty shift  99
                      if_start shift  117
                     if_header shift  6
                      if_block shift  56
                   while_start shift  114
                  while_header shift  4
                    for_opener shift  10
                   for_header1 shift  17
                   for_header2 shift  32
                    for_header shift  3
                foreach_opener shift  61
                foreach_header shift  2
                        action shift  60
                       actions shift  59

State 3:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt SEMICOLON rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          for_stmt ::= for_header * stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  94
                     SEMICOLON shift  255
                      LBRACKET shift  261
                           VAR shift  65
                         CONST shift  63
                            IF shift  211
                         WHILE shift  205
                           FOR shift  113
                       FOREACH shift  110
                      CONTINUE shift  186
                         BREAK shift  185
                        RETURN shift  16
                    ACTIONNAME shift  108
                         error shift  168
                     vdef_stmt shift  164
                     cdef_stmt shift  162
                          stmt shift  190
                      bodyStmt shift  263
                   return_stmt shift  167
                      lbracket shift  9
               vdefAssign_stmt shift  163
                   assign_stmt shift  161
                      funcexpr shift  160
                    actionStmt shift  249
                       if_stmt shift  248
                    while_stmt shift  247
                      for_stmt shift  246
                  foreach_stmt shift  245
                 continue_stmt shift  159
                    break_stmt shift  158
                      funcName shift  153
                        lvalue shift  120
           lvalueList_nonEmpty shift  99
                      if_start shift  117
                     if_header shift  6
                      if_block shift  56
                   while_start shift  114
                  while_header shift  4
                    for_opener shift  10
                   for_header1 shift  17
                   for_header2 shift  32
                    for_header shift  3
                foreach_opener shift  61
                foreach_header shift  2
                        action shift  60
                       actions shift  59

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt SEMICOLON rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  94
                     SEMICOLON shift  255
                      LBRACKET shift  261
                           VAR shift  65
                         CONST shift  63
                            IF shift  211
                         WHILE shift  205
                           FOR shift  113
                       FOREACH shift  110
                      CONTINUE shift  186
                         BREAK shift  185
                        RETURN shift  16
                    ACTIONNAME shift  108
                         error shift  168
                     vdef_stmt shift  164
                     cdef_stmt shift  162
                          stmt shift  203
                      bodyStmt shift  263
                   return_stmt shift  167
                      lbracket shift  9
               vdefAssign_stmt shift  163
                   assign_stmt shift  161
                      funcexpr shift  160
                    actionStmt shift  249
                       if_stmt shift  248
                    while_stmt shift  247
                      for_stmt shift  246
                  foreach_stmt shift  245
                 continue_stmt shift  159
                    break_stmt shift  158
                      funcName shift  153
                        lvalue shift  120
           lvalueList_nonEmpty shift  99
                      if_start shift  117
                     if_header shift  6
                      if_block shift  56
                   while_start shift  114
                  while_header shift  4
                    for_opener shift  10
                   for_header1 shift  17
                   for_header2 shift  32
                    for_header shift  3
                foreach_opener shift  61
                foreach_header shift  2
                        action shift  60
                       actions shift  59

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt SEMICOLON rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  94
                     SEMICOLON shift  255
                      LBRACKET shift  261
                           VAR shift  65
                         CONST shift  63
                            IF shift  211
                         WHILE shift  205
                           FOR shift  113
                       FOREACH shift  110
                      CONTINUE shift  186
                         BREAK shift  185
                        RETURN shift  16
                    ACTIONNAME shift  108
                         error shift  168
                     vdef_stmt shift  164
                     cdef_stmt shift  162
                          stmt shift  206
                      bodyStmt shift  263
                   return_stmt shift  167
                      lbracket shift  9
               vdefAssign_stmt shift  163
                   assign_stmt shift  161
                      funcexpr shift  160
                    actionStmt shift  249
                       if_stmt shift  248
                    while_stmt shift  247
                      for_stmt shift  246
                  foreach_stmt shift  245
                 continue_stmt shift  159
                    break_stmt shift  158
                      funcName shift  153
                        lvalue shift  120
           lvalueList_nonEmpty shift  99
                      if_start shift  117
                     if_header shift  6
                      if_block shift  56
                   while_start shift  114
                  while_header shift  4
                    for_opener shift  10
                   for_header1 shift  17
                   for_header2 shift  32
                    for_header shift  3
                foreach_opener shift  61
                foreach_header shift  2
                        action shift  60
                       actions shift  59

State 6:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt SEMICOLON rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  94
                     SEMICOLON shift  255
                      LBRACKET shift  261
                           VAR shift  65
                         CONST shift  63
                            IF shift  211
                         WHILE shift  205
                           FOR shift  113
                       FOREACH shift  110
                      CONTINUE shift  186
                         BREAK shift  185
                        RETURN shift  16
                    ACTIONNAME shift  108
                         error shift  168
                     vdef_stmt shift  164
                     cdef_stmt shift  162
                          stmt shift  209
                      bodyStmt shift  263
                   return_stmt shift  167
                      lbracket shift  9
               vdefAssign_stmt shift  163
                   assign_stmt shift  161
                      funcexpr shift  160
                    actionStmt shift  249
                       if_stmt shift  248
                    while_stmt shift  247
                      for_stmt shift  246
                  foreach_stmt shift  245
                 continue_stmt shift  159
                    break_stmt shift  158
                      funcName shift  153
                        lvalue shift  120
           lvalueList_nonEmpty shift  99
                      if_start shift  117
                     if_header shift  6
                      if_block shift  56
                   while_start shift  114
                  while_header shift  4
                    for_opener shift  10
                   for_header1 shift  17
                   for_header2 shift  32
                    for_header shift  3
                foreach_opener shift  61
                foreach_header shift  2
                        action shift  60
                       actions shift  59

State 7:
          fdef_chunk ::= function_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt SEMICOLON
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt SEMICOLON rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt SEMICOLON rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  94
                     SEMICOLON shift  255
                      LBRACKET shift  261
                           VAR shift  65
                         CONST shift  63
                            IF shift  211
                         WHILE shift  205
                           FOR shift  113
                       FOREACH shift  110
                      CONTINUE shift  186
                         BREAK shift  185
                        RETURN shift  16
                    ACTIONNAME shift  108
                         error shift  168
                     vdef_stmt shift  164
                     cdef_stmt shift  162
                          stmt shift  265
                      bodyStmt shift  263
                   return_stmt shift  167
                      lbracket shift  9
               vdefAssign_stmt shift  163
                   assign_stmt shift  161
                      funcexpr shift  160
                    actionStmt shift  249
                       if_stmt shift  248
                    while_stmt shift  247
                      for_stmt shift  246
                  foreach_stmt shift  245
                 continue_stmt shift  159
                    break_stmt shift  158
                      funcName shift  153
                        lvalue shift  120
           lvalueList_nonEmpty shift  99
                      if_start shift  117
                     if_header shift  6
                      if_block shift  56
                   while_start shift  114
                  while_header shift  4
                    for_opener shift  10
                   for_header1 shift  17
                   for_header2 shift  32
                    for_header shift  3
                foreach_opener shift  61
                foreach_header shift  2
                        action shift  60
                       actions shift  59

State 8:
          rbracket ::= * RBRACKET
          stmt ::= lbracket bodyStmtList * rbracket
          stmt ::= lbracket bodyStmtList * return_stmt SEMICOLON rbracket
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  94
                     SEMICOLON shift  255
                      RBRACKET shift  259
                           VAR shift  65
                         CONST shift  63
                            IF shift  211
                         WHILE shift  205
                           FOR shift  113
                       FOREACH shift  110
                      CONTINUE shift  186
                         BREAK shift  185
                        RETURN shift  16
                    ACTIONNAME shift  108
                         error shift  241
                     vdef_stmt shift  164
                     cdef_stmt shift  162
                      bodyStmt shift  242
                   return_stmt shift  165
                      rbracket shift  257
               vdefAssign_stmt shift  163
                   assign_stmt shift  161
                      funcexpr shift  160
                    actionStmt shift  249
                       if_stmt shift  248
                    while_stmt shift  247
                      for_stmt shift  246
                  foreach_stmt shift  245
                 continue_stmt shift  159
                    break_stmt shift  158
                      funcName shift  153
                        lvalue shift  120
           lvalueList_nonEmpty shift  99
                      if_start shift  117
                     if_header shift  6
                      if_block shift  56
                   while_start shift  114
                  while_header shift  4
                    for_opener shift  10
                   for_header1 shift  17
                   for_header2 shift  32
                    for_header shift  3
                foreach_opener shift  61
                foreach_header shift  2
                        action shift  60
                       actions shift  59

State 9:
          stmt ::= lbracket * RBRACKET
          stmt ::= lbracket * return_stmt SEMICOLON rbracket
          stmt ::= lbracket * bodyStmtList rbracket
          stmt ::= lbracket * bodyStmtList return_stmt SEMICOLON rbracket
          stmt ::= lbracket * error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 lexpr SEMICOLON
          for_header ::= * for_header2 for_action_stmt_nonEmpty RPAREN
          for_header ::= * for_header2 RPAREN
          for_stmt ::= * for_header stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  94
                     SEMICOLON shift  255
                      RBRACKET shift  260
                           VAR shift  65
                         CONST shift  63
                            IF shift  211
                         WHILE shift  205
                           FOR shift  113
                       FOREACH shift  110
                      CONTINUE shift  186
                         BREAK shift  185
                        RETURN shift  16
                    ACTIONNAME shift  108
                         error shift  105
                     vdef_stmt shift  164
                     cdef_stmt shift  162
                      bodyStmt shift  178
                   return_stmt shift  166
                  bodyStmtList shift  8
               vdefAssign_stmt shift  163
                   assign_stmt shift  161
                      funcexpr shift  160
                    actionStmt shift  249
                       if_stmt shift  248
                    while_stmt shift  247
                      for_stmt shift  246
                  foreach_stmt shift  245
                 continue_stmt shift  159
                    break_stmt shift  158
                      funcName shift  153
                        lvalue shift  120
           lvalueList_nonEmpty shift  99
                      if_start shift  117
                     if_header shift  6
                      if_block shift  56
                   while_start shift  114
                  while_header shift  4
                    for_opener shift  10
                   for_header1 shift  17
                   for_header2 shift  32
                    for_header shift  3
                foreach_opener shift  61
                foreach_header shift  2
                        action shift  60
                       actions shift  59

State 10:
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt ::= * for_init_stmt_nonEmpty
    (119) for_init_stmt ::= *
          for_header1 ::= for_opener * for_init_stmt SEMICOLON

                          NAME shift  98
                           VAR shift  65
                         CONST shift  63
                     vdef_stmt shift  201
                     cdef_stmt shift  199
               vdefAssign_stmt shift  200
                   assign_stmt shift  198
                        lvalue shift  120
           lvalueList_nonEmpty shift  99
        for_init_stmt_nonEmpty shift  112
                 for_init_stmt shift  111
                     {default} reduce 119

State 11:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunk ::= * import_chunk SEMICOLON
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt SEMICOLON
          chunk ::= * cdef_stmt SEMICOLON
          import_chunk ::= * FROM NAME IMPORT nameList_nonEmpty
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList_nonEmpty RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          vdef_stmt ::= * VAR nameList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty

                             $ reduce 0
                          FROM shift  174
                      FUNCTION shift  170
                           VAR shift  58
                         CONST shift  63
                         chunk shift  275
                  import_chunk shift  177
                    fdef_chunk shift  273
                     vdef_stmt shift  176
                     cdef_stmt shift  175
                function_start shift  169
               function_header shift  7

State 12:
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA * for_init_stmt_nonEmpty

                          NAME shift  98
                           VAR shift  65
                         CONST shift  63
                     vdef_stmt shift  201
                     cdef_stmt shift  199
               vdefAssign_stmt shift  200
                   assign_stmt shift  198
                        lvalue shift  120
           lvalueList_nonEmpty shift  99
        for_init_stmt_nonEmpty shift  197

State 13:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (55) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                        RPAREN shift  218
                        RPAREN reduce 55  ** Parsing conflict **
                        STRING shift  221
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  74
                fArgs_nonEmpty shift  130
                         fArgs shift  129
                      funcName shift  153

State 14:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (55) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                        STRING shift  221
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  74
                fArgs_nonEmpty shift  130
                         fArgs shift  107
                      funcName shift  153
                     {default} reduce 55

State 15:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
     (55) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          funcexpr ::= funcName LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                        STRING shift  221
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  74
                fArgs_nonEmpty shift  130
                         fArgs shift  128
                      funcName shift  153
                     {default} reduce 55

State 16:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
     (46) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * exprList

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  127
             exprList_nonEmpty shift  109
                          expr shift  73
                      exprList shift  184
                      funcName shift  153
                     {default} reduce 46

State 17:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          for_header2 ::= for_header1 * lexpr SEMICOLON
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  22
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                 CONDITIONNAME shift  131
                      funcexpr shift  152
                          expr shift  69
                      funcName shift  153
                         lexpr shift  86

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  22
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                 CONDITIONNAME shift  131
                      funcexpr shift  152
                          expr shift  69
                      funcName shift  153
                         lexpr shift  87

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  22
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                 CONDITIONNAME shift  131
                      funcexpr shift  152
                          expr shift  69
                      funcName shift  153
                         lexpr shift  88

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  22
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                 CONDITIONNAME shift  131
                      funcexpr shift  152
                          expr shift  69
                      funcName shift  153
                         lexpr shift  89

State 21:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  21
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                 CONDITIONNAME shift  131
                      funcexpr shift  152
                          expr shift  69
                      funcName shift  153
                         lexpr shift  222

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  21
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                 CONDITIONNAME shift  131
                      funcexpr shift  152
                          expr shift  69
                      funcName shift  153
                         lexpr shift  223

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  22
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                 CONDITIONNAME shift  131
                      funcexpr shift  152
                          expr shift  69
                      funcName shift  153
                         lexpr shift  132

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  22
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                 CONDITIONNAME shift  131
                      funcexpr shift  152
                          expr shift  69
                      funcName shift  153
                         lexpr shift  224

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= L2V LPAREN * lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  22
                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                 CONDITIONNAME shift  131
                      funcexpr shift  152
                          expr shift  69
                      funcName shift  153
                         lexpr shift  92

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          fArgs_nonEmpty ::= * expr
          fArgs_nonEmpty ::= * STRING
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArgs_nonEmpty
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArgs_nonEmpty
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                        STRING shift  221
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  74
                fArgs_nonEmpty shift  220
                      funcName shift  153

State 27:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= foreach_opener nameList_nonEmpty COLON * exprList_nonEmpty RPAREN

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  127
             exprList_nonEmpty shift  95
                          expr shift  73
                      funcName shift  153

State 28:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalueList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  127
             exprList_nonEmpty shift  118
                          expr shift  73
                      funcName shift  153

State 29:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  127
             exprList_nonEmpty shift  121
                          expr shift  73
                      funcName shift  153

State 30:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  127
             exprList_nonEmpty shift  214
                          expr shift  73
                      funcName shift  153

State 31:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  127
             exprList_nonEmpty shift  122
                          expr shift  73
                      funcName shift  153

State 32:
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_header ::= for_header2 * for_action_stmt_nonEmpty RPAREN
          for_header ::= for_header2 * RPAREN

                          NAME shift  98
                        RPAREN shift  191
                   assign_stmt shift  194
                        lvalue shift  120
           lvalueList_nonEmpty shift  99
      for_action_stmt_nonEmpty shift  97

State 33:
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA * for_action_stmt_nonEmpty

                          NAME shift  98
                   assign_stmt shift  194
                        lvalue shift  120
           lvalueList_nonEmpty shift  99
      for_action_stmt_nonEmpty shift  193

State 34:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= lvalue ASSIGN * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  72
                      funcName shift  153

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  75
                      funcName shift  153

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  76
                      funcName shift  153

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  77
                      funcName shift  153

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  78
                      funcName shift  153

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  79
                      funcName shift  153

State 40:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  80
                      funcName shift  153

State 41:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  225
                      funcName shift  153

State 42:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  226
                      funcName shift  153

State 43:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  227
                      funcName shift  153

State 44:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  82
                      funcName shift  153

State 45:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  81
                      funcName shift  153

State 46:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  83
                      funcName shift  153

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  84
                      funcName shift  153

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  85
                      funcName shift  153

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  228
                      funcName shift  153

State 50:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  229
                      funcName shift  153

State 51:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  230
                      funcName shift  153

State 52:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  91
                      funcName shift  153

State 53:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  70
                      funcName shift  153

State 54:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  90
                      funcName shift  153

State 55:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          expr ::= * NAME LSQBRACKET expr RSQBRACKET
          expr ::= NAME LSQBRACKET * expr RSQBRACKET
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  43
                         MINUS shift  42
                        BITNOT shift  41
                        NUMBER shift  238
                          NAME shift  93
                        LPAREN shift  53
                           L2V shift  145
                     MAPSTRING shift  144
                          UNIT shift  141
                        SWITCH shift  138
                      LOCATION shift  135
                      funcexpr shift  152
                          expr shift  71
                      funcName shift  153

State 56:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
    (107) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  116
                          ELSE reduce 107 ** Parsing conflict **
                    elif_start shift  115
                   elif_header shift  5
                   else_header shift  1
                     {default} reduce 107

State 57:
          function_header ::= function_start LPAREN * nameList_nonEmpty RPAREN
          function_header ::= function_start LPAREN * RPAREN
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  269
                        RPAREN shift  266
             nameList_nonEmpty shift  103

State 58:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty

                          NAME shift  269
             nameList_nonEmpty shift  104

State 59:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
    (139) actionStmt ::= actions *

                    ACTIONNAME shift  108
                    ACTIONNAME reduce 139 ** Parsing conflict **
                        action shift  181
                     {default} reduce 139

State 60:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
    (138) actionStmt ::= action *

                    ACTIONNAME shift  108
                    ACTIONNAME reduce 138 ** Parsing conflict **
                        action shift  182
                     {default} reduce 138

State 61:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= foreach_opener * nameList_nonEmpty COLON exprList_nonEmpty RPAREN

                          NAME shift  269
             nameList_nonEmpty shift  96

State 62:
          lvalue ::= * NAME
          lvalue ::= * NAME LSQBRACKET NAME RSQBRACKET
          lvalue ::= * NAME PERIOD NAME
          lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA * lvalue

                          NAME shift  98
                        lvalue shift  212

State 63:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  269
             nameList_nonEmpty shift  100

State 64:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  125
              numList_nonEmpty shift  101

State 65:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  269
             nameList_nonEmpty shift  102

State 66:
          rbracket ::= * RBRACKET
          stmt ::= lbracket bodyStmtList return_stmt SEMICOLON * rbracket

                      RBRACKET shift  259
                      rbracket shift  256

State 67:
          rbracket ::= * RBRACKET
          stmt ::= lbracket return_stmt SEMICOLON * rbracket

                      RBRACKET shift  259
                      rbracket shift  258

State 68:
          import_chunk ::= FROM NAME IMPORT * nameList_nonEmpty
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  269
             nameList_nonEmpty shift  172

State 69:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  40
                            LE shift  38
                            LT shift  37
                            GE shift  36
                            GT shift  35
                            NE shift  39
                         BITOR shift  45
                        BITXOR shift  44
                        BITAND shift  46
                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49

State 70:
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  45
                        BITXOR shift  44
                        BITAND shift  46
                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                        RPAREN shift  236

State 71:
          expr ::= NAME LSQBRACKET expr * RSQBRACKET
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  45
                        BITXOR shift  44
                        BITAND shift  46
                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                    RSQBRACKET shift  237

State 72:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (98) assign_stmt ::= lvalue ASSIGN expr *

                         BITOR shift  45
                        BITXOR shift  44
                        BITAND shift  46
                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 98

State 73:
     (44) exprList_nonEmpty ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  45
                        BITXOR shift  44
                        BITAND shift  46
                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 44

State 74:
     (52) fArgs_nonEmpty ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  45
                        BITXOR shift  44
                        BITAND shift  46
                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 52

State 75:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (85) lexpr ::= expr GT expr *

                         BITOR shift  45
                        BITXOR shift  44
                        BITAND shift  46
                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 85

State 76:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (84) lexpr ::= expr GE expr *

                         BITOR shift  45
                        BITXOR shift  44
                        BITAND shift  46
                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 84

State 77:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (83) lexpr ::= expr LT expr *

                         BITOR shift  45
                        BITXOR shift  44
                        BITAND shift  46
                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 83

State 78:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (82) lexpr ::= expr LE expr *

                         BITOR shift  45
                        BITXOR shift  44
                        BITAND shift  46
                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 82

State 79:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (81) lexpr ::= expr NE expr *

                         BITOR shift  45
                        BITXOR shift  44
                        BITAND shift  46
                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 81

State 80:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (80) lexpr ::= expr EQ expr *

                         BITOR shift  45
                        BITXOR shift  44
                        BITAND shift  46
                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 80

State 81:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (75) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  44
                        BITAND shift  46
                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 75

State 82:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (76) expr ::= expr BITXOR expr *

                        BITAND shift  46
                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 76

State 83:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (74) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  48
                        RSHIFT shift  47
                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 74

State 84:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (73) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 73

State 85:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (72) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  54
                         MINUS shift  52
                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 72

State 86:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          for_header2 ::= for_header1 lexpr * SEMICOLON

                           LOR shift  23
                          LAND shift  24
                     SEMICOLON shift  195

State 87:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  23
                          LAND shift  24
                        RPAREN shift  204

State 88:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  23
                          LAND shift  24
                        RPAREN shift  207

State 89:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  23
                          LAND shift  24
                        RPAREN shift  210

State 90:
          expr ::= expr * PLUS expr
     (67) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 67

State 91:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (68) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  50
                      MULTIPLY shift  51
                           MOD shift  49
                     {default} reduce 68

State 92:
          expr ::= L2V LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  23
                          LAND shift  24
                        RPAREN shift  235

State 93:
     (49) expr ::= NAME *
          expr ::= NAME * PERIOD NAME
          expr ::= NAME * LSQBRACKET expr RSQBRACKET
     (57) funcName ::= NAME *
          funcName ::= NAME * PERIOD NAME

                        LPAREN reduce 57
                    LSQBRACKET shift  55
                        PERIOD shift  147
                     {default} reduce 49

State 94:
     (57) funcName ::= NAME *
          funcName ::= NAME * PERIOD NAME
     (93) lvalue ::= NAME *
          lvalue ::= NAME * LSQBRACKET NAME RSQBRACKET
          lvalue ::= NAME * PERIOD NAME

                        LPAREN reduce 57
                    LSQBRACKET shift  155
                        PERIOD shift  157
                     {default} reduce 93

State 95:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
          foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty * RPAREN

                         COMMA shift  30
                        RPAREN shift  188

State 96:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= foreach_opener nameList_nonEmpty * COLON exprList_nonEmpty RPAREN

                         COMMA shift  171
                         COLON shift  27

State 97:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
          for_header ::= for_header2 for_action_stmt_nonEmpty * RPAREN

                         COMMA shift  33
                        RPAREN shift  192

State 98:
     (93) lvalue ::= NAME *
          lvalue ::= NAME * LSQBRACKET NAME RSQBRACKET
          lvalue ::= NAME * PERIOD NAME

                    LSQBRACKET shift  155
                        PERIOD shift  119
                     {default} reduce 93

State 99:
          lvalueList_nonEmpty ::= lvalueList_nonEmpty * COMMA lvalue
          assign_stmt ::= lvalueList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  28
                         COMMA shift  62

State 100:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  29
                         COMMA shift  171

State 101:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  124
                    RSQBRACKET shift  123

State 102:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
     (90) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  31
                         COMMA shift  171
                         COMMA reduce 90  ** Parsing conflict **
                     {default} reduce 90

State 103:
          function_header ::= function_start LPAREN nameList_nonEmpty * RPAREN
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  171
                        RPAREN shift  267

State 104:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
     (90) vdef_stmt ::= VAR nameList_nonEmpty *

                         COMMA shift  171
                     {default} reduce 90

State 105:
          stmt ::= lbracket error * RBRACKET

                      RBRACKET shift  179

State 106:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  183

State 107:
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                        RPAREN shift  106

State 108:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  14

State 109:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (47) exprList ::= exprList_nonEmpty *

                         COMMA shift  30
                     {default} reduce 47

State 110:
          foreach_opener ::= FOREACH * LPAREN

                        LPAREN shift  189

State 111:
          for_header1 ::= for_opener for_init_stmt * SEMICOLON

                     SEMICOLON shift  196

State 112:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (118) for_init_stmt ::= for_init_stmt_nonEmpty *

                         COMMA shift  12
                     {default} reduce 118

State 113:
          for_opener ::= FOR * LPAREN

                        LPAREN shift  202

State 114:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  18

State 115:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  19

State 116:
          elif_start ::= ELSE * IF
    (106) else_header ::= ELSE *

                            IF shift  208
                            IF reduce 106 ** Parsing conflict **
                     {default} reduce 106

State 117:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  20

State 118:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (99) assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  30
                     {default} reduce 99

State 119:
          lvalue ::= NAME PERIOD * NAME

                          NAME shift  213

State 120:
     (96) lvalueList_nonEmpty ::= lvalue *
          assign_stmt ::= lvalue * ASSIGN expr

                        ASSIGN shift  34
                        ASSIGN reduce 96  ** Parsing conflict **
                     {default} reduce 96

State 121:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (92) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  30
                     {default} reduce 92

State 122:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (91) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  30
                     {default} reduce 91

State 123:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  215

State 124:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  216

State 125:
     (38) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  148
                    RSQBRACKET reduce 38  ** Parsing conflict **
                     {default} reduce 38

State 126:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  64

State 127:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (60) expr ::= funcexpr *

                    LSQBRACKET shift  126
                     {default} reduce 60

State 128:
          funcexpr ::= funcName LPAREN fArgs * RPAREN

                        RPAREN shift  217

State 129:
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  219

State 130:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (56) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  26
                     {default} reduce 56

State 131:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  13

State 132:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (87) lexpr ::= lexpr LOR lexpr *

                          LAND shift  24
                     {default} reduce 87

State 133:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  231

State 134:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  133

State 135:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  134

State 136:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  232

State 137:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  136

State 138:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  137

State 139:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  233

State 140:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  139

State 141:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  140

State 142:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  234

State 143:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  142

State 144:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  143

State 145:
          expr ::= L2V * LPAREN lexpr RPAREN

                        LPAREN shift  25

State 146:
     (50) expr ::= NAME PERIOD NAME *
     (58) funcName ::= NAME PERIOD NAME *

                        LPAREN reduce 58
                     {default} reduce 50

State 147:
          expr ::= NAME PERIOD * NAME
          funcName ::= NAME PERIOD * NAME

                          NAME shift  146

State 148:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  239

State 149:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  148

State 150:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  149

State 151:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  150

State 152:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (60) expr ::= funcexpr *

                    LSQBRACKET shift  151
                     {default} reduce 60

State 153:
          funcexpr ::= funcName * LPAREN fArgs RPAREN

                        LPAREN shift  15

State 154:
          lvalue ::= NAME LSQBRACKET NAME * RSQBRACKET

                    RSQBRACKET shift  240

State 155:
          lvalue ::= NAME LSQBRACKET * NAME RSQBRACKET

                          NAME shift  154

State 156:
     (58) funcName ::= NAME PERIOD NAME *
     (95) lvalue ::= NAME PERIOD NAME *

                        LPAREN reduce 58
                     {default} reduce 95

State 157:
          funcName ::= NAME PERIOD * NAME
          lvalue ::= NAME PERIOD * NAME

                          NAME shift  156

State 158:
          bodyStmt ::= break_stmt * SEMICOLON

                     SEMICOLON shift  243

State 159:
          bodyStmt ::= continue_stmt * SEMICOLON

                     SEMICOLON shift  244

State 160:
          bodyStmt ::= funcexpr * SEMICOLON

                     SEMICOLON shift  250

State 161:
          bodyStmt ::= assign_stmt * SEMICOLON

                     SEMICOLON shift  251

State 162:
          bodyStmt ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  252

State 163:
          bodyStmt ::= vdefAssign_stmt * SEMICOLON

                     SEMICOLON shift  253

State 164:
          bodyStmt ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  254

State 165:
          stmt ::= lbracket bodyStmtList return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  66

State 166:
          stmt ::= lbracket return_stmt * SEMICOLON rbracket

                     SEMICOLON shift  67

State 167:
          stmt ::= return_stmt * SEMICOLON

                     SEMICOLON shift  262

State 168:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  264

State 169:
          function_header ::= function_start * LPAREN nameList_nonEmpty RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  57

State 170:
          function_start ::= FUNCTION * NAME

                          NAME shift  268

State 171:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  270

State 172:
      (7) import_chunk ::= FROM NAME IMPORT nameList_nonEmpty *
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  171
                     {default} reduce 7

State 173:
          import_chunk ::= FROM NAME * IMPORT nameList_nonEmpty

                        IMPORT shift  68

State 174:
          import_chunk ::= FROM * NAME IMPORT nameList_nonEmpty

                          NAME shift  173

State 175:
          chunk ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  271

State 176:
          chunk ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  272

State 177:
          chunk ::= import_chunk * SEMICOLON

                     SEMICOLON shift  274

State 178:
     (35) bodyStmtList ::= bodyStmt *

                     {default} reduce 35

State 179:
     (21) stmt ::= lbracket error RBRACKET *

                     {default} reduce 21

State 180:
    (108) if_stmt ::= if_block else_header stmt *

                     {default} reduce 108

State 181:
    (137) actions ::= actions action *

                     {default} reduce 137

State 182:
    (136) actions ::= action action *

                     {default} reduce 136

State 183:
    (135) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 135

State 184:
    (132) return_stmt ::= RETURN exprList *

                     {default} reduce 132

State 185:
    (131) break_stmt ::= BREAK *

                     {default} reduce 131

State 186:
    (130) continue_stmt ::= CONTINUE *

                     {default} reduce 130

State 187:
    (129) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 129

State 188:
    (128) foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty RPAREN *

                     {default} reduce 128

State 189:
    (127) foreach_opener ::= FOREACH LPAREN *

                     {default} reduce 127

State 190:
    (126) for_stmt ::= for_header stmt *

                     {default} reduce 126

State 191:
    (125) for_header ::= for_header2 RPAREN *

                     {default} reduce 125

State 192:
    (124) for_header ::= for_header2 for_action_stmt_nonEmpty RPAREN *

                     {default} reduce 124

State 193:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (121) for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty *

                     {default} reduce 121

State 194:
    (120) for_action_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 120

State 195:
    (123) for_header2 ::= for_header1 lexpr SEMICOLON *

                     {default} reduce 123

State 196:
    (122) for_header1 ::= for_opener for_init_stmt SEMICOLON *

                     {default} reduce 122

State 197:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (117) for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty *

                     {default} reduce 117

State 198:
    (116) for_init_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 116

State 199:
    (115) for_init_stmt_nonEmpty ::= cdef_stmt *

                     {default} reduce 115

State 200:
    (114) for_init_stmt_nonEmpty ::= vdefAssign_stmt *

                     {default} reduce 114

State 201:
    (113) for_init_stmt_nonEmpty ::= vdef_stmt *

                     {default} reduce 113

State 202:
    (112) for_opener ::= FOR LPAREN *

                     {default} reduce 112

State 203:
    (111) while_stmt ::= while_header stmt *

                     {default} reduce 111

State 204:
    (110) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 110

State 205:
    (109) while_start ::= WHILE *

                     {default} reduce 109

State 206:
    (105) if_block ::= if_block elif_header stmt *

                     {default} reduce 105

State 207:
    (104) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 104

State 208:
    (103) elif_start ::= ELSE IF *

                     {default} reduce 103

State 209:
    (102) if_block ::= if_header stmt *

                     {default} reduce 102

State 210:
    (101) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 101

State 211:
    (100) if_start ::= IF *

                     {default} reduce 100

State 212:
     (97) lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA lvalue *

                     {default} reduce 97

State 213:
     (95) lvalue ::= NAME PERIOD NAME *

                     {default} reduce 95

State 214:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA exprList_nonEmpty
     (45) exprList_nonEmpty ::= exprList_nonEmpty COMMA exprList_nonEmpty *

                     {default} reduce 45

State 215:
     (42) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 42

State 216:
     (39) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 39

State 217:
     (59) funcexpr ::= funcName LPAREN fArgs RPAREN *

                     {default} reduce 59

State 218:
    (134) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 134

State 219:
    (133) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 133

State 220:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArgs_nonEmpty
     (54) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArgs_nonEmpty *

                     {default} reduce 54

State 221:
     (53) fArgs_nonEmpty ::= STRING *

                     {default} reduce 53

State 222:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (88) lexpr ::= LNOT lexpr *
     (89) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 89

State 223:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (88) lexpr ::= LNOT lexpr *

                     {default} reduce 88

State 224:
          lexpr ::= lexpr * LAND lexpr
     (86) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 86

State 225:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (79) expr ::= BITNOT expr *

                     {default} reduce 79

State 226:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (78) expr ::= MINUS expr *

                     {default} reduce 78

State 227:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (77) expr ::= PLUS expr *

                     {default} reduce 77

State 228:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (71) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 71

State 229:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (70) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 70

State 230:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (69) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 69

State 231:
     (66) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 66

State 232:
     (65) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 65

State 233:
     (64) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 64

State 234:
     (63) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 63

State 235:
     (62) expr ::= L2V LPAREN lexpr RPAREN *

                     {default} reduce 62

State 236:
     (61) expr ::= LPAREN expr RPAREN *

                     {default} reduce 61

State 237:
     (51) expr ::= NAME LSQBRACKET expr RSQBRACKET *

                     {default} reduce 51

State 238:
     (48) expr ::= NUMBER *

                     {default} reduce 48

State 239:
     (43) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 43

State 240:
     (94) lvalue ::= NAME LSQBRACKET NAME RSQBRACKET *

                     {default} reduce 94

State 241:
     (37) bodyStmtList ::= bodyStmtList error *

                     {default} reduce 37

State 242:
     (36) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 36

State 243:
     (34) bodyStmt ::= break_stmt SEMICOLON *

                     {default} reduce 34

State 244:
     (33) bodyStmt ::= continue_stmt SEMICOLON *

                     {default} reduce 33

State 245:
     (32) bodyStmt ::= foreach_stmt *

                     {default} reduce 32

State 246:
     (31) bodyStmt ::= for_stmt *

                     {default} reduce 31

State 247:
     (30) bodyStmt ::= while_stmt *

                     {default} reduce 30

State 248:
     (29) bodyStmt ::= if_stmt *

                     {default} reduce 29

State 249:
     (28) bodyStmt ::= actionStmt *

                     {default} reduce 28

State 250:
     (27) bodyStmt ::= funcexpr SEMICOLON *

                     {default} reduce 27

State 251:
     (26) bodyStmt ::= assign_stmt SEMICOLON *

                     {default} reduce 26

State 252:
     (25) bodyStmt ::= cdef_stmt SEMICOLON *

                     {default} reduce 25

State 253:
     (24) bodyStmt ::= vdefAssign_stmt SEMICOLON *

                     {default} reduce 24

State 254:
     (23) bodyStmt ::= vdef_stmt SEMICOLON *

                     {default} reduce 23

State 255:
     (22) bodyStmt ::= SEMICOLON *

                     {default} reduce 22

State 256:
     (20) stmt ::= lbracket bodyStmtList return_stmt SEMICOLON rbracket *

                     {default} reduce 20

State 257:
     (19) stmt ::= lbracket bodyStmtList rbracket *

                     {default} reduce 19

State 258:
     (18) stmt ::= lbracket return_stmt SEMICOLON rbracket *

                     {default} reduce 18

State 259:
     (16) rbracket ::= RBRACKET *

                     {default} reduce 16

State 260:
     (17) stmt ::= lbracket RBRACKET *

                     {default} reduce 17

State 261:
     (15) lbracket ::= LBRACKET *

                     {default} reduce 15

State 262:
     (14) stmt ::= return_stmt SEMICOLON *

                     {default} reduce 14

State 263:
     (13) stmt ::= bodyStmt *

                     {default} reduce 13

State 264:
     (12) stmt ::= error SEMICOLON *

                     {default} reduce 12

State 265:
     (11) fdef_chunk ::= function_header stmt *

                     {default} reduce 11

State 266:
     (10) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 10

State 267:
      (9) function_header ::= function_start LPAREN nameList_nonEmpty RPAREN *

                     {default} reduce 9

State 268:
      (8) function_start ::= FUNCTION NAME *

                     {default} reduce 8

State 269:
     (40) nameList_nonEmpty ::= NAME *

                     {default} reduce 40

State 270:
     (41) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 41

State 271:
      (6) chunk ::= cdef_stmt SEMICOLON *

                     {default} reduce 6

State 272:
      (5) chunk ::= vdef_stmt SEMICOLON *

                     {default} reduce 5

State 273:
      (4) chunk ::= fdef_chunk *

                     {default} reduce 4

State 274:
      (3) chunk ::= import_chunk SEMICOLON *

                     {default} reduce 3

State 275:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: ASSIGN
    2: COMMA
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: SEMICOLON
   28: FROM
   29: IMPORT
   30: FUNCTION
   31: LPAREN
   32: RPAREN
   33: LBRACKET
   34: RBRACKET
   35: LSQBRACKET
   36: RSQBRACKET
   37: PERIOD
   38: STRING
   39: FUNCCALL
   40: L2V
   41: MAPSTRING
   42: UNIT
   43: SWITCH
   44: LOCATION
   45: VAR
   46: CONST
   47: IF
   48: ELSE
   49: WHILE
   50: FOR
   51: FOREACH
   52: COLON
   53: CONTINUE
   54: BREAK
   55: RETURN
   56: CONDITIONNAME
   57: ACTIONNAME
   58: error:
   59: nt:
   60: program: <lambda> FROM FUNCTION VAR CONST
   61: chunks: <lambda> FROM FUNCTION VAR CONST
   62: chunk: FROM FUNCTION VAR CONST
   63: import_chunk: FROM
   64: fdef_chunk: FUNCTION
   65: vdef_stmt: VAR
   66: cdef_stmt: CONST
   67: nameList_nonEmpty: NAME
   68: function_start: FUNCTION
   69: function_header: FUNCTION
   70: stmt: NAME SEMICOLON LBRACKET VAR CONST IF WHILE FOR FOREACH CONTINUE BREAK RETURN ACTIONNAME
   71: bodyStmt: NAME SEMICOLON VAR CONST IF WHILE FOR FOREACH CONTINUE BREAK ACTIONNAME
   72: return_stmt: RETURN
   73: lbracket: LBRACKET
   74: rbracket: RBRACKET
   75: bodyStmtList: NAME SEMICOLON VAR CONST IF WHILE FOR FOREACH CONTINUE BREAK ACTIONNAME
   76: vdefAssign_stmt: VAR
   77: assign_stmt: NAME
   78: funcexpr: NAME
   79: actionStmt: ACTIONNAME
   80: if_stmt: IF
   81: while_stmt: WHILE
   82: for_stmt: FOR
   83: foreach_stmt: FOREACH
   84: continue_stmt: CONTINUE
   85: break_stmt: BREAK
   86: numList_nonEmpty: NUMBER
   87: exprList_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   88: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   89: exprList: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   90: fArgs_nonEmpty: PLUS MINUS BITNOT NUMBER NAME LPAREN STRING L2V MAPSTRING UNIT SWITCH LOCATION
   91: fArgs: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN STRING L2V MAPSTRING UNIT SWITCH LOCATION
   92: funcName: NAME
   93: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
   94: lvalue: NAME
   95: lvalueList_nonEmpty: NAME
   96: if_start: IF
   97: if_header: IF
   98: if_block: IF
   99: elif_start: ELSE
  100: elif_header: ELSE
  101: else_header: ELSE
  102: while_start: WHILE
  103: while_header: WHILE
  104: for_opener: FOR
  105: for_init_stmt_nonEmpty: NAME VAR CONST
  106: for_init_stmt: <lambda> NAME VAR CONST
  107: for_action_stmt_nonEmpty: NAME
  108: for_header1: FOR
  109: for_header2: FOR
  110: for_header: FOR
  111: foreach_opener: FOREACH
  112: foreach_header: FOREACH
  113: action: ACTIONNAME
  114: actions: ACTIONNAME
