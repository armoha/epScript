State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk

                       program accept
                        chunks shift  9
                     {default} reduce 1

State 1:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  93
                     SEMICOLON shift  204
                      LBRACKET shift  210
                           VAR shift  55
                         CONST shift  54
                            IF shift  160
                         WHILE shift  154
                           FOR shift  101
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  21
                    ACTIONNAME shift  98
                         error shift  133
                     vdef_stmt shift  203
                     cdef_stmt shift  201
             nameList_nonEmpty shift  92
                          stmt shift  142
                      bodyStmt shift  212
                   return_stmt shift  211
                      lbracket shift  7
               vdefAssign_stmt shift  202
                   assign_stmt shift  200
                      funcexpr shift  132
                    actionStmt shift  198
                       if_stmt shift  197
                    while_stmt shift  196
                  foreach_stmt shift  195
                 continue_stmt shift  194
                    break_stmt shift  193
                      funcName shift  124
                      if_start shift  105
                     if_header shift  5
                      if_block shift  48
                   while_start shift  102
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 2:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          foreach_stmt ::= foreach_header * stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  93
                     SEMICOLON shift  204
                      LBRACKET shift  210
                           VAR shift  55
                         CONST shift  54
                            IF shift  160
                         WHILE shift  154
                           FOR shift  101
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  21
                    ACTIONNAME shift  98
                         error shift  133
                     vdef_stmt shift  203
                     cdef_stmt shift  201
             nameList_nonEmpty shift  92
                          stmt shift  150
                      bodyStmt shift  212
                   return_stmt shift  211
                      lbracket shift  7
               vdefAssign_stmt shift  202
                   assign_stmt shift  200
                      funcexpr shift  132
                    actionStmt shift  198
                       if_stmt shift  197
                    while_stmt shift  196
                  foreach_stmt shift  195
                 continue_stmt shift  194
                    break_stmt shift  193
                      funcName shift  124
                      if_start shift  105
                     if_header shift  5
                      if_block shift  48
                   while_start shift  102
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 3:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          while_stmt ::= while_header * stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  93
                     SEMICOLON shift  204
                      LBRACKET shift  210
                           VAR shift  55
                         CONST shift  54
                            IF shift  160
                         WHILE shift  154
                           FOR shift  101
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  21
                    ACTIONNAME shift  98
                         error shift  133
                     vdef_stmt shift  203
                     cdef_stmt shift  201
             nameList_nonEmpty shift  92
                          stmt shift  152
                      bodyStmt shift  212
                   return_stmt shift  211
                      lbracket shift  7
               vdefAssign_stmt shift  202
                   assign_stmt shift  200
                      funcexpr shift  132
                    actionStmt shift  198
                       if_stmt shift  197
                    while_stmt shift  196
                  foreach_stmt shift  195
                 continue_stmt shift  194
                    break_stmt shift  193
                      funcName shift  124
                      if_start shift  105
                     if_header shift  5
                      if_block shift  48
                   while_start shift  102
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_block ::= if_block elif_header * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  93
                     SEMICOLON shift  204
                      LBRACKET shift  210
                           VAR shift  55
                         CONST shift  54
                            IF shift  160
                         WHILE shift  154
                           FOR shift  101
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  21
                    ACTIONNAME shift  98
                         error shift  133
                     vdef_stmt shift  203
                     cdef_stmt shift  201
             nameList_nonEmpty shift  92
                          stmt shift  155
                      bodyStmt shift  212
                   return_stmt shift  211
                      lbracket shift  7
               vdefAssign_stmt shift  202
                   assign_stmt shift  200
                      funcexpr shift  132
                    actionStmt shift  198
                       if_stmt shift  197
                    while_stmt shift  196
                  foreach_stmt shift  195
                 continue_stmt shift  194
                    break_stmt shift  193
                      funcName shift  124
                      if_start shift  105
                     if_header shift  5
                      if_block shift  48
                   while_start shift  102
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= if_header * stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  93
                     SEMICOLON shift  204
                      LBRACKET shift  210
                           VAR shift  55
                         CONST shift  54
                            IF shift  160
                         WHILE shift  154
                           FOR shift  101
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  21
                    ACTIONNAME shift  98
                         error shift  133
                     vdef_stmt shift  203
                     cdef_stmt shift  201
             nameList_nonEmpty shift  92
                          stmt shift  158
                      bodyStmt shift  212
                   return_stmt shift  211
                      lbracket shift  7
               vdefAssign_stmt shift  202
                   assign_stmt shift  200
                      funcexpr shift  132
                    actionStmt shift  198
                       if_stmt shift  197
                    while_stmt shift  196
                  foreach_stmt shift  195
                 continue_stmt shift  194
                    break_stmt shift  193
                      funcName shift  124
                      if_start shift  105
                     if_header shift  5
                      if_block shift  48
                   while_start shift  102
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 6:
          fdef_chunk ::= function_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          stmt ::= * return_stmt
          lbracket ::= * LBRACKET
          stmt ::= * lbracket RBRACKET
          stmt ::= * lbracket return_stmt rbracket
          stmt ::= * lbracket bodyStmtList rbracket
          stmt ::= * lbracket bodyStmtList return_stmt rbracket
          stmt ::= * lbracket error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  93
                     SEMICOLON shift  204
                      LBRACKET shift  210
                           VAR shift  55
                         CONST shift  54
                            IF shift  160
                         WHILE shift  154
                           FOR shift  101
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  21
                    ACTIONNAME shift  98
                         error shift  133
                     vdef_stmt shift  203
                     cdef_stmt shift  201
             nameList_nonEmpty shift  92
                          stmt shift  214
                      bodyStmt shift  212
                   return_stmt shift  211
                      lbracket shift  7
               vdefAssign_stmt shift  202
                   assign_stmt shift  200
                      funcexpr shift  132
                    actionStmt shift  198
                       if_stmt shift  197
                    while_stmt shift  196
                  foreach_stmt shift  195
                 continue_stmt shift  194
                    break_stmt shift  193
                      funcName shift  124
                      if_start shift  105
                     if_header shift  5
                      if_block shift  48
                   while_start shift  102
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 7:
          stmt ::= lbracket * RBRACKET
          stmt ::= lbracket * return_stmt rbracket
          stmt ::= lbracket * bodyStmtList rbracket
          stmt ::= lbracket * bodyStmtList return_stmt rbracket
          stmt ::= lbracket * error RBRACKET
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  93
                     SEMICOLON shift  204
                      RBRACKET shift  209
                           VAR shift  55
                         CONST shift  54
                            IF shift  160
                         WHILE shift  154
                           FOR shift  101
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  21
                    ACTIONNAME shift  98
                         error shift  95
                     vdef_stmt shift  203
                     cdef_stmt shift  201
             nameList_nonEmpty shift  92
                      bodyStmt shift  140
                   return_stmt shift  58
                  bodyStmtList shift  8
               vdefAssign_stmt shift  202
                   assign_stmt shift  200
                      funcexpr shift  132
                    actionStmt shift  198
                       if_stmt shift  197
                    while_stmt shift  196
                  foreach_stmt shift  195
                 continue_stmt shift  194
                    break_stmt shift  193
                      funcName shift  124
                      if_start shift  105
                     if_header shift  5
                      if_block shift  48
                   while_start shift  102
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 8:
          rbracket ::= * RBRACKET
          stmt ::= lbracket bodyStmtList * rbracket
          stmt ::= lbracket bodyStmtList * return_stmt rbracket
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt
          bodyStmt ::= * vdefAssign_stmt
          bodyStmt ::= * cdef_stmt
          bodyStmt ::= * assign_stmt
          bodyStmt ::= * funcexpr SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * continue_stmt
          bodyStmt ::= * break_stmt
          bodyStmtList ::= bodyStmtList * bodyStmt
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList SEMICOLON
          assign_stmt ::= * nameList_nonEmpty ASSIGN exprList SEMICOLON
          if_start ::= * IF
          if_header ::= * if_start LPAREN lexpr RPAREN
          if_block ::= * if_header stmt
          if_block ::= * if_block elif_header stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN lexpr RPAREN
          while_stmt ::= * while_header stmt
          foreach_header ::= * FOR LPAREN nameList_nonEmpty COLON exprList RPAREN
          foreach_stmt ::= * foreach_header stmt
          continue_stmt ::= * CONTINUE SEMICOLON
          break_stmt ::= * BREAK SEMICOLON
          return_stmt ::= * RETURN SEMICOLON
          return_stmt ::= * RETURN exprList SEMICOLON
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= * action action
          actions ::= * actions action
          actionStmt ::= * action
          actionStmt ::= * actions

                          NAME shift  93
                     SEMICOLON shift  204
                      RBRACKET shift  208
                           VAR shift  55
                         CONST shift  54
                            IF shift  160
                         WHILE shift  154
                           FOR shift  101
                      CONTINUE shift  100
                         BREAK shift  99
                        RETURN shift  21
                    ACTIONNAME shift  98
                     vdef_stmt shift  203
                     cdef_stmt shift  201
             nameList_nonEmpty shift  92
                      bodyStmt shift  192
                   return_stmt shift  57
                      rbracket shift  206
               vdefAssign_stmt shift  202
                   assign_stmt shift  200
                      funcexpr shift  132
                    actionStmt shift  198
                       if_stmt shift  197
                    while_stmt shift  196
                  foreach_stmt shift  195
                 continue_stmt shift  194
                    break_stmt shift  193
                      funcName shift  124
                      if_start shift  105
                     if_header shift  5
                      if_block shift  48
                   while_start shift  102
                  while_header shift  3
                foreach_header shift  2
                        action shift  52
                       actions shift  51

State 9:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunk ::= * import_chunk
          chunk ::= * fdef_chunk
          chunk ::= * vdef_stmt
          chunk ::= * cdef_stmt
          import_chunk ::= * FROM NAME IMPORT nameList_nonEmpty
          function_start ::= * FUNCTION NAME
          function_header ::= * function_start LPAREN nameList_nonEmpty RPAREN
          function_header ::= * function_start LPAREN RPAREN
          fdef_chunk ::= * function_header stmt
          vdef_stmt ::= * VAR nameList_nonEmpty SEMICOLON
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList SEMICOLON

                             $ reduce 0
                          FROM shift  139
                      FUNCTION shift  135
                           VAR shift  50
                         CONST shift  54
                         chunk shift  224
                  import_chunk shift  223
                    fdef_chunk shift  222
                     vdef_stmt shift  221
                     cdef_stmt shift  220
                function_start shift  134
               function_header shift  6

State 10:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
     (46) fArgs ::= *
          fArgsAny ::= * expr
          fArgsAny ::= * STRING
          fArgsAny ::= * fArgsAny COMMA fArgsAny
          fArgs ::= * fArgsAny
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          lexpr ::= CONDITIONNAME LPAREN * RPAREN

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                        RPAREN shift  168
                        RPAREN reduce 46  ** Parsing conflict **
                        STRING shift  171
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  68
                         fArgs shift  107
                      fArgsAny shift  108
                      funcName shift  124

State 11:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
     (46) fArgs ::= *
          fArgsAny ::= * expr
          fArgsAny ::= * STRING
          fArgsAny ::= * fArgsAny COMMA fArgsAny
          fArgs ::= * fArgsAny
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          action ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                        STRING shift  171
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  68
                         fArgs shift  97
                      fArgsAny shift  108
                      funcName shift  124
                     {default} reduce 46

State 12:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
     (46) fArgs ::= *
          fArgsAny ::= * expr
          fArgsAny ::= * STRING
          fArgsAny ::= * fArgsAny COMMA fArgsAny
          fArgs ::= * fArgsAny
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          funcexpr ::= funcName LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                        STRING shift  171
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  68
                         fArgs shift  106
                      fArgsAny shift  108
                      funcName shift  124
                     {default} reduce 46

State 13:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          while_header ::= while_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                 CONDITIONNAME shift  109
                      funcexpr shift  186
                          expr shift  60
                      funcName shift  124
                         lexpr shift  75

State 14:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          elif_header ::= elif_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                 CONDITIONNAME shift  109
                      funcexpr shift  186
                          expr shift  60
                      funcName shift  124
                         lexpr shift  76

State 15:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          if_header ::= if_start LPAREN * lexpr RPAREN
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                 CONDITIONNAME shift  109
                      funcexpr shift  186
                          expr shift  60
                      funcName shift  124
                         lexpr shift  77

State 16:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= LNOT LNOT * lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  16
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                 CONDITIONNAME shift  109
                      funcexpr shift  186
                          expr shift  60
                      funcName shift  124
                         lexpr shift  172

State 17:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= LNOT * lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= LNOT * LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  16
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                 CONDITIONNAME shift  109
                      funcexpr shift  186
                          expr shift  60
                      funcName shift  124
                         lexpr shift  173

State 18:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= lexpr LOR * lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                 CONDITIONNAME shift  109
                      funcexpr shift  186
                          expr shift  60
                      funcName shift  124
                         lexpr shift  110

State 19:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= lexpr LAND * lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                 CONDITIONNAME shift  109
                      funcexpr shift  186
                          expr shift  60
                      funcName shift  124
                         lexpr shift  174

State 20:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= L2V LPAREN * lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= * expr EQ expr
          lexpr ::= * expr NE expr
          lexpr ::= * expr LE expr
          lexpr ::= * expr LT expr
          lexpr ::= * expr GE expr
          lexpr ::= * expr GT expr
          lexpr ::= * lexpr LAND lexpr
          lexpr ::= * lexpr LOR lexpr
          lexpr ::= * LNOT lexpr
          lexpr ::= * LNOT LNOT lexpr
          lexpr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          lexpr ::= * CONDITIONNAME LPAREN RPAREN

                          LNOT shift  17
                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                 CONDITIONNAME shift  109
                      funcexpr shift  186
                          expr shift  60
                      funcName shift  124
                         lexpr shift  81

State 21:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          return_stmt ::= RETURN * SEMICOLON
          return_stmt ::= RETURN * exprList SEMICOLON

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                     SEMICOLON shift  146
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  130
                      exprList shift  83
                          expr shift  69
                      funcName shift  124

State 22:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          fArgsAny ::= * expr
          fArgsAny ::= * STRING
          fArgsAny ::= * fArgsAny COMMA fArgsAny
          fArgsAny ::= fArgsAny COMMA * fArgsAny
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                        STRING shift  171
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  68
                      fArgsAny shift  170
                      funcName shift  124

State 23:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          foreach_header ::= FOR LPAREN nameList_nonEmpty COLON * exprList RPAREN

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  130
                      exprList shift  84
                          expr shift  69
                      funcName shift  124

State 24:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList SEMICOLON

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  130
                      exprList shift  86
                          expr shift  69
                      funcName shift  124

State 25:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList SEMICOLON

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  130
                      exprList shift  88
                          expr shift  69
                      funcName shift  124

State 26:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          exprList ::= exprList COMMA * exprList
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  130
                      exprList shift  165
                          expr shift  69
                      funcName shift  124

State 27:
          exprList ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          exprList ::= * expr
          exprList ::= * exprList COMMA exprList
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          assign_stmt ::= nameList_nonEmpty ASSIGN * exprList SEMICOLON

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  130
                      exprList shift  89
                          expr shift  69
                      funcName shift  124

State 28:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GT * expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  62
                      funcName shift  124

State 29:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr GE * expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  63
                      funcName shift  124

State 30:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LT * expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  64
                      funcName shift  124

State 31:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr LE * expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  65
                      funcName shift  124

State 32:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr NE * expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  66
                      funcName shift  124

State 33:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          lexpr ::= expr EQ * expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  67
                      funcName shift  124

State 34:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  175
                      funcName shift  124

State 35:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  176
                      funcName shift  124

State 36:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  177
                      funcName shift  124

State 37:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  71
                      funcName shift  124

State 38:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  70
                      funcName shift  124

State 39:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  72
                      funcName shift  124

State 40:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  73
                      funcName shift  124

State 41:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  74
                      funcName shift  124

State 42:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  178
                      funcName shift  124

State 43:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  179
                      funcName shift  124

State 44:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  167
                      funcName shift  124

State 45:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  61
                      funcName shift  124

State 46:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  80
                      funcName shift  124

State 47:
          expr ::= * NUMBER
          expr ::= * NAME
          expr ::= * NAME PERIOD NAME
          funcName ::= * NAME
          funcName ::= * NAME PERIOD NAME
          funcexpr ::= * funcName LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * L2V LPAREN lexpr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr

                          PLUS shift  36
                         MINUS shift  35
                        BITNOT shift  34
                        NUMBER shift  187
                          NAME shift  90
                        LPAREN shift  45
                           L2V shift  123
                     MAPSTRING shift  122
                          UNIT shift  119
                        SWITCH shift  116
                      LOCATION shift  113
                      funcexpr shift  186
                          expr shift  79
                      funcName shift  124

State 48:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN lexpr RPAREN
          if_block ::= if_block * elif_header stmt
          else_header ::= * ELSE
     (95) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  104
                          ELSE reduce 95  ** Parsing conflict **
                    elif_start shift  103
                   elif_header shift  4
                   else_header shift  1
                     {default} reduce 95

State 49:
          function_header ::= function_start LPAREN * nameList_nonEmpty RPAREN
          function_header ::= function_start LPAREN * RPAREN
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  218
                        RPAREN shift  215
             nameList_nonEmpty shift  94

State 50:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty SEMICOLON

                          NAME shift  218
             nameList_nonEmpty shift  82

State 51:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= actions * action
    (112) actionStmt ::= actions *

                    ACTIONNAME shift  98
                    ACTIONNAME reduce 112 ** Parsing conflict **
                        action shift  143
                     {default} reduce 112

State 52:
          action ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          actions ::= action * action
    (111) actionStmt ::= action *

                    ACTIONNAME shift  98
                    ACTIONNAME reduce 111 ** Parsing conflict **
                        action shift  144
                     {default} reduce 111

State 53:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= FOR LPAREN * nameList_nonEmpty COLON exprList RPAREN

                          NAME shift  218
             nameList_nonEmpty shift  85

State 54:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList SEMICOLON

                          NAME shift  218
             nameList_nonEmpty shift  87

State 55:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty SEMICOLON
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList SEMICOLON

                          NAME shift  218
             nameList_nonEmpty shift  78

State 56:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET

                        NUMBER shift  190
              numList_nonEmpty shift  91

State 57:
          rbracket ::= * RBRACKET
          stmt ::= lbracket bodyStmtList return_stmt * rbracket

                      RBRACKET shift  208
                      rbracket shift  205

State 58:
          rbracket ::= * RBRACKET
          stmt ::= lbracket return_stmt * rbracket

                      RBRACKET shift  208
                      rbracket shift  207

State 59:
          import_chunk ::= FROM NAME IMPORT * nameList_nonEmpty
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME

                          NAME shift  218
             nameList_nonEmpty shift  137

State 60:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          lexpr ::= expr * EQ expr
          lexpr ::= expr * NE expr
          lexpr ::= expr * LE expr
          lexpr ::= expr * LT expr
          lexpr ::= expr * GE expr
          lexpr ::= expr * GT expr

                            EQ shift  33
                            LE shift  31
                            LT shift  30
                            GE shift  29
                            GT shift  28
                            NE shift  32
                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42

State 61:
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                        RPAREN shift  185

State 62:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (79) lexpr ::= expr GT expr *

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 79

State 63:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (78) lexpr ::= expr GE expr *

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 78

State 64:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (77) lexpr ::= expr LT expr *

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 77

State 65:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (76) lexpr ::= expr LE expr *

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 76

State 66:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (75) lexpr ::= expr NE expr *

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 75

State 67:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (74) lexpr ::= expr EQ expr *

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 74

State 68:
     (47) fArgsAny ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 47

State 69:
     (41) exprList ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                         BITOR shift  38
                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 41

State 70:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
     (69) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr

                        BITXOR shift  37
                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 69

State 71:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (70) expr ::= expr BITXOR expr *

                        BITAND shift  39
                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 70

State 72:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
     (68) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        LSHIFT shift  41
                        RSHIFT shift  40
                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 68

State 73:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
     (67) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 67

State 74:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
     (66) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                          PLUS shift  47
                         MINUS shift  46
                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 66

State 75:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          while_header ::= while_start LPAREN lexpr * RPAREN

                           LOR shift  18
                          LAND shift  19
                        RPAREN shift  153

State 76:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          elif_header ::= elif_start LPAREN lexpr * RPAREN

                           LOR shift  18
                          LAND shift  19
                        RPAREN shift  156

State 77:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
          if_header ::= if_start LPAREN lexpr * RPAREN

                           LOR shift  18
                          LAND shift  19
                        RPAREN shift  159

State 78:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          vdef_stmt ::= VAR nameList_nonEmpty * SEMICOLON
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList SEMICOLON

                         COMMA shift  136
                        ASSIGN shift  25
                     SEMICOLON shift  163

State 79:
          expr ::= expr * PLUS expr
     (61) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 61

State 80:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (62) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  43
                      MULTIPLY shift  44
                           MOD shift  42
                     {default} reduce 62

State 81:
          expr ::= L2V LPAREN lexpr * RPAREN
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr

                           LOR shift  18
                          LAND shift  19
                        RPAREN shift  184

State 82:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          vdef_stmt ::= VAR nameList_nonEmpty * SEMICOLON

                         COMMA shift  136
                     SEMICOLON shift  163

State 83:
          exprList ::= exprList * COMMA exprList
          return_stmt ::= RETURN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  147

State 84:
          exprList ::= exprList * COMMA exprList
          foreach_header ::= FOR LPAREN nameList_nonEmpty COLON exprList * RPAREN

                         COMMA shift  26
                        RPAREN shift  151

State 85:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= FOR LPAREN nameList_nonEmpty * COLON exprList RPAREN

                         COMMA shift  136
                         COLON shift  23

State 86:
          exprList ::= exprList * COMMA exprList
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  161

State 87:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList SEMICOLON

                         COMMA shift  136
                        ASSIGN shift  24

State 88:
          exprList ::= exprList * COMMA exprList
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  162

State 89:
          exprList ::= exprList * COMMA exprList
          assign_stmt ::= nameList_nonEmpty ASSIGN exprList * SEMICOLON

                         COMMA shift  26
                     SEMICOLON shift  164

State 90:
     (44) expr ::= NAME *
          expr ::= NAME * PERIOD NAME
     (51) funcName ::= NAME *
          funcName ::= NAME * PERIOD NAME

                        LPAREN reduce 51
                        PERIOD shift  126
                     {default} reduce 44

State 91:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  128
                    RSQBRACKET shift  127

State 92:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          assign_stmt ::= nameList_nonEmpty * ASSIGN exprList SEMICOLON

                         COMMA shift  136
                        ASSIGN shift  27

State 93:
     (38) nameList_nonEmpty ::= NAME *
     (51) funcName ::= NAME *
          funcName ::= NAME * PERIOD NAME

                        LPAREN reduce 51
                        PERIOD shift  131
                     {default} reduce 38

State 94:
          function_header ::= function_start LPAREN nameList_nonEmpty * RPAREN
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  136
                        RPAREN shift  216

State 95:
          stmt ::= lbracket error * RBRACKET

                      RBRACKET shift  141

State 96:
          action ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON

                     SEMICOLON shift  145

State 97:
          action ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON

                        RPAREN shift  96

State 98:
          action ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON

                        LPAREN shift  11

State 99:
          break_stmt ::= BREAK * SEMICOLON

                     SEMICOLON shift  148

State 100:
          continue_stmt ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  149

State 101:
          foreach_header ::= FOR * LPAREN nameList_nonEmpty COLON exprList RPAREN

                        LPAREN shift  53

State 102:
          while_header ::= while_start * LPAREN lexpr RPAREN

                        LPAREN shift  13

State 103:
          elif_header ::= elif_start * LPAREN lexpr RPAREN

                        LPAREN shift  14

State 104:
          elif_start ::= ELSE * IF
     (94) else_header ::= ELSE *

                            IF shift  157
                            IF reduce 94  ** Parsing conflict **
                     {default} reduce 94

State 105:
          if_header ::= if_start * LPAREN lexpr RPAREN

                        LPAREN shift  15

State 106:
          funcexpr ::= funcName LPAREN fArgs * RPAREN

                        RPAREN shift  166

State 107:
          lexpr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  169

State 108:
          fArgsAny ::= fArgsAny * COMMA fArgsAny
     (50) fArgs ::= fArgsAny *

                         COMMA shift  22
                     {default} reduce 50

State 109:
          lexpr ::= CONDITIONNAME * LPAREN fArgs RPAREN
          lexpr ::= CONDITIONNAME * LPAREN RPAREN

                        LPAREN shift  10

State 110:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (81) lexpr ::= lexpr LOR lexpr *

                          LAND shift  19
                     {default} reduce 81

State 111:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  180

State 112:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  111

State 113:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  112

State 114:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  181

State 115:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  114

State 116:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  115

State 117:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  182

State 118:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  117

State 119:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  118

State 120:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  183

State 121:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  120

State 122:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  121

State 123:
          expr ::= L2V * LPAREN lexpr RPAREN

                        LPAREN shift  20

State 124:
          funcexpr ::= funcName * LPAREN fArgs RPAREN

                        LPAREN shift  12

State 125:
     (45) expr ::= NAME PERIOD NAME *
     (52) funcName ::= NAME PERIOD NAME *

                        LPAREN reduce 52
                     {default} reduce 45

State 126:
          expr ::= NAME PERIOD * NAME
          funcName ::= NAME PERIOD * NAME

                          NAME shift  125

State 127:
          exprList ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  188

State 128:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  189

State 129:
          exprList ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  56

State 130:
          exprList ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
     (54) expr ::= funcexpr *

                    LSQBRACKET shift  129
                     {default} reduce 54

State 131:
          funcName ::= NAME PERIOD * NAME

                          NAME shift  191

State 132:
          bodyStmt ::= funcexpr * SEMICOLON

                     SEMICOLON shift  199

State 133:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  213

State 134:
          function_header ::= function_start * LPAREN nameList_nonEmpty RPAREN
          function_header ::= function_start * LPAREN RPAREN

                        LPAREN shift  49

State 135:
          function_start ::= FUNCTION * NAME

                          NAME shift  217

State 136:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  219

State 137:
      (7) import_chunk ::= FROM NAME IMPORT nameList_nonEmpty *
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME

                         COMMA shift  136
                     {default} reduce 7

State 138:
          import_chunk ::= FROM NAME * IMPORT nameList_nonEmpty

                        IMPORT shift  59

State 139:
          import_chunk ::= FROM * NAME IMPORT nameList_nonEmpty

                          NAME shift  138

State 140:
     (34) bodyStmtList ::= bodyStmt *

                     {default} reduce 34

State 141:
     (21) stmt ::= lbracket error RBRACKET *

                     {default} reduce 21

State 142:
     (96) if_stmt ::= if_block else_header stmt *

                     {default} reduce 96

State 143:
    (110) actions ::= actions action *

                     {default} reduce 110

State 144:
    (109) actions ::= action action *

                     {default} reduce 109

State 145:
    (108) action ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 108

State 146:
    (104) return_stmt ::= RETURN SEMICOLON *

                     {default} reduce 104

State 147:
    (105) return_stmt ::= RETURN exprList SEMICOLON *

                     {default} reduce 105

State 148:
    (103) break_stmt ::= BREAK SEMICOLON *

                     {default} reduce 103

State 149:
    (102) continue_stmt ::= CONTINUE SEMICOLON *

                     {default} reduce 102

State 150:
    (101) foreach_stmt ::= foreach_header stmt *

                     {default} reduce 101

State 151:
    (100) foreach_header ::= FOR LPAREN nameList_nonEmpty COLON exprList RPAREN *

                     {default} reduce 100

State 152:
     (99) while_stmt ::= while_header stmt *

                     {default} reduce 99

State 153:
     (98) while_header ::= while_start LPAREN lexpr RPAREN *

                     {default} reduce 98

State 154:
     (97) while_start ::= WHILE *

                     {default} reduce 97

State 155:
     (93) if_block ::= if_block elif_header stmt *

                     {default} reduce 93

State 156:
     (92) elif_header ::= elif_start LPAREN lexpr RPAREN *

                     {default} reduce 92

State 157:
     (91) elif_start ::= ELSE IF *

                     {default} reduce 91

State 158:
     (90) if_block ::= if_header stmt *

                     {default} reduce 90

State 159:
     (89) if_header ::= if_start LPAREN lexpr RPAREN *

                     {default} reduce 89

State 160:
     (88) if_start ::= IF *

                     {default} reduce 88

State 161:
     (86) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList SEMICOLON *

                     {default} reduce 86

State 162:
     (85) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList SEMICOLON *

                     {default} reduce 85

State 163:
     (84) vdef_stmt ::= VAR nameList_nonEmpty SEMICOLON *

                     {default} reduce 84

State 164:
     (87) assign_stmt ::= nameList_nonEmpty ASSIGN exprList SEMICOLON *

                     {default} reduce 87

State 165:
          exprList ::= exprList * COMMA exprList
     (42) exprList ::= exprList COMMA exprList *

                     {default} reduce 42

State 166:
     (53) funcexpr ::= funcName LPAREN fArgs RPAREN *

                     {default} reduce 53

State 167:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
     (63) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 63

State 168:
    (107) lexpr ::= CONDITIONNAME LPAREN RPAREN *

                     {default} reduce 107

State 169:
    (106) lexpr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 106

State 170:
          fArgsAny ::= fArgsAny * COMMA fArgsAny
     (49) fArgsAny ::= fArgsAny COMMA fArgsAny *

                     {default} reduce 49

State 171:
     (48) fArgsAny ::= STRING *

                     {default} reduce 48

State 172:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (82) lexpr ::= LNOT lexpr *
     (83) lexpr ::= LNOT LNOT lexpr *

                     {default} reduce 83

State 173:
          lexpr ::= lexpr * LAND lexpr
          lexpr ::= lexpr * LOR lexpr
     (82) lexpr ::= LNOT lexpr *

                     {default} reduce 82

State 174:
          lexpr ::= lexpr * LAND lexpr
     (80) lexpr ::= lexpr LAND lexpr *
          lexpr ::= lexpr * LOR lexpr

                     {default} reduce 80

State 175:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (73) expr ::= BITNOT expr *

                     {default} reduce 73

State 176:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (72) expr ::= MINUS expr *

                     {default} reduce 72

State 177:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
     (71) expr ::= PLUS expr *

                     {default} reduce 71

State 178:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (65) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 65

State 179:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
     (64) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr

                     {default} reduce 64

State 180:
     (60) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 60

State 181:
     (59) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 59

State 182:
     (58) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 58

State 183:
     (57) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 57

State 184:
     (56) expr ::= L2V LPAREN lexpr RPAREN *

                     {default} reduce 56

State 185:
     (55) expr ::= LPAREN expr RPAREN *

                     {default} reduce 55

State 186:
     (54) expr ::= funcexpr *

                     {default} reduce 54

State 187:
     (43) expr ::= NUMBER *

                     {default} reduce 43

State 188:
     (40) exprList ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 40

State 189:
     (37) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 37

State 190:
     (36) numList_nonEmpty ::= NUMBER *

                     {default} reduce 36

State 191:
     (52) funcName ::= NAME PERIOD NAME *

                     {default} reduce 52

State 192:
     (35) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 35

State 193:
     (33) bodyStmt ::= break_stmt *

                     {default} reduce 33

State 194:
     (32) bodyStmt ::= continue_stmt *

                     {default} reduce 32

State 195:
     (31) bodyStmt ::= foreach_stmt *

                     {default} reduce 31

State 196:
     (30) bodyStmt ::= while_stmt *

                     {default} reduce 30

State 197:
     (29) bodyStmt ::= if_stmt *

                     {default} reduce 29

State 198:
     (28) bodyStmt ::= actionStmt *

                     {default} reduce 28

State 199:
     (27) bodyStmt ::= funcexpr SEMICOLON *

                     {default} reduce 27

State 200:
     (26) bodyStmt ::= assign_stmt *

                     {default} reduce 26

State 201:
     (25) bodyStmt ::= cdef_stmt *

                     {default} reduce 25

State 202:
     (24) bodyStmt ::= vdefAssign_stmt *

                     {default} reduce 24

State 203:
     (23) bodyStmt ::= vdef_stmt *

                     {default} reduce 23

State 204:
     (22) bodyStmt ::= SEMICOLON *

                     {default} reduce 22

State 205:
     (20) stmt ::= lbracket bodyStmtList return_stmt rbracket *

                     {default} reduce 20

State 206:
     (19) stmt ::= lbracket bodyStmtList rbracket *

                     {default} reduce 19

State 207:
     (18) stmt ::= lbracket return_stmt rbracket *

                     {default} reduce 18

State 208:
     (16) rbracket ::= RBRACKET *

                     {default} reduce 16

State 209:
     (17) stmt ::= lbracket RBRACKET *

                     {default} reduce 17

State 210:
     (15) lbracket ::= LBRACKET *

                     {default} reduce 15

State 211:
     (14) stmt ::= return_stmt *

                     {default} reduce 14

State 212:
     (13) stmt ::= bodyStmt *

                     {default} reduce 13

State 213:
     (12) stmt ::= error SEMICOLON *

                     {default} reduce 12

State 214:
     (11) fdef_chunk ::= function_header stmt *

                     {default} reduce 11

State 215:
     (10) function_header ::= function_start LPAREN RPAREN *

                     {default} reduce 10

State 216:
      (9) function_header ::= function_start LPAREN nameList_nonEmpty RPAREN *

                     {default} reduce 9

State 217:
      (8) function_start ::= FUNCTION NAME *

                     {default} reduce 8

State 218:
     (38) nameList_nonEmpty ::= NAME *

                     {default} reduce 38

State 219:
     (39) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 39

State 220:
      (6) chunk ::= cdef_stmt *

                     {default} reduce 6

State 221:
      (5) chunk ::= vdef_stmt *

                     {default} reduce 5

State 222:
      (4) chunk ::= fdef_chunk *

                     {default} reduce 4

State 223:
      (3) chunk ::= import_chunk *

                     {default} reduce 3

State 224:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: COMMA
    2: ASSIGN
    3: LOR
    4: LAND
    5: LNOT
    6: DOUBLE_LNOT
    7: EQ
    8: LE
    9: LT
   10: GE
   11: GT
   12: NE
   13: BITOR
   14: BITXOR
   15: BITAND
   16: LSHIFT
   17: RSHIFT
   18: PLUS
   19: MINUS
   20: DIVIDE
   21: MULTIPLY
   22: MOD
   23: UNARY
   24: BITNOT
   25: NUMBER
   26: NAME
   27: FROM
   28: IMPORT
   29: FUNCTION
   30: LPAREN
   31: RPAREN
   32: SEMICOLON
   33: LBRACKET
   34: RBRACKET
   35: LSQBRACKET
   36: RSQBRACKET
   37: PERIOD
   38: STRING
   39: FUNCCALL
   40: L2V
   41: MAPSTRING
   42: UNIT
   43: SWITCH
   44: LOCATION
   45: VAR
   46: CONST
   47: IF
   48: ELSE
   49: WHILE
   50: FOR
   51: COLON
   52: CONTINUE
   53: BREAK
   54: RETURN
   55: CONDITIONNAME
   56: ACTIONNAME
   57: error:
   58: nt:
   59: program: <lambda> FROM FUNCTION VAR CONST
   60: chunks: <lambda> FROM FUNCTION VAR CONST
   61: chunk: FROM FUNCTION VAR CONST
   62: import_chunk: FROM
   63: fdef_chunk: FUNCTION
   64: vdef_stmt: VAR
   65: cdef_stmt: CONST
   66: nameList_nonEmpty: NAME
   67: function_start: FUNCTION
   68: function_header: FUNCTION
   69: stmt: NAME SEMICOLON LBRACKET VAR CONST IF WHILE FOR CONTINUE BREAK RETURN ACTIONNAME
   70: bodyStmt: NAME SEMICOLON VAR CONST IF WHILE FOR CONTINUE BREAK ACTIONNAME
   71: return_stmt: RETURN
   72: lbracket: LBRACKET
   73: rbracket: RBRACKET
   74: bodyStmtList: NAME SEMICOLON VAR CONST IF WHILE FOR CONTINUE BREAK ACTIONNAME
   75: vdefAssign_stmt: VAR
   76: assign_stmt: NAME
   77: funcexpr: NAME
   78: actionStmt: ACTIONNAME
   79: if_stmt: IF
   80: while_stmt: WHILE
   81: foreach_stmt: FOR
   82: continue_stmt: CONTINUE
   83: break_stmt: BREAK
   84: numList_nonEmpty: NUMBER
   85: exprList: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   86: expr: PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION
   87: fArgs: <lambda> PLUS MINUS BITNOT NUMBER NAME LPAREN STRING L2V MAPSTRING UNIT SWITCH LOCATION
   88: fArgsAny: PLUS MINUS BITNOT NUMBER NAME LPAREN STRING L2V MAPSTRING UNIT SWITCH LOCATION
   89: funcName: NAME
   90: lexpr: LNOT PLUS MINUS BITNOT NUMBER NAME LPAREN L2V MAPSTRING UNIT SWITCH LOCATION CONDITIONNAME
   91: if_start: IF
   92: if_header: IF
   93: if_block: IF
   94: elif_start: ELSE
   95: elif_header: ELSE
   96: else_header: ELSE
   97: while_start: WHILE
   98: while_header: WHILE
   99: foreach_header: FOR
  100: action: ACTIONNAME
  101: actions: ACTIONNAME
